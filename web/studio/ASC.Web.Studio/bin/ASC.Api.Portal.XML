<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASC.Api.Portal</name>
    </assembly>
    <members>
        <member name="T:ASC.Api.Portal.PortalApi">
            <summary>
             Portal information access.
            </summary>
        </member>
        <member name="P:ASC.Api.Portal.PortalApi.Name">
            <summary>
             Api name entry
            </summary>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.Get">
            <summary>
            Returns the current portal.
            </summary>
            <short>
            Get the current portal
            </short>
            <returns>Portal</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetUser(System.Guid)">
            <summary>
            Returns a user with the ID specified in the request from the current portal.
            </summary>
            <short>
            Get a user by ID
            </short>
             <category>Users</category>
            <returns>User</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GeInviteLink(ASC.Core.Users.EmployeeType)">
            <summary>
             Returns an invitation link for joining the portal.
            </summary>
            <short>
             Get an invitation link
            </short>
             <param name="employeeType">
              Employee type (User or Visitor)
             </param>
            <category>Users</category>
            <returns>
             Invitation link
            </returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetShortenLink(System.String)">
             <summary>
             Returns a shortened invitation link for joining the portal.
             </summary>
             <short>Get a shortened invitation link</short>
             <param name="link">Invitation link</param>
             <category>Users</category>
            <returns>Shortened invitation link</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetUsedSpace">
            <summary>
            Returns the used space of the current portal.
            </summary>
            <short>
            Get the used portal space
            </short>
             <category>Quota</category>
            <returns>Used space</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetUsersCount">
            <summary>
            Returns a number of portal users.
            </summary>
            <short>
            Get a number of portal users
            </short>
             <category>Users</category>
            <returns>User count</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.UploadLicense(System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
            <summary>
            Uploads a portal license specified in the request.
            </summary>
            <short>
            Upload a license
            </short>
            <param name="attachments">License attachments</param>
             <category>Quota</category>
            <returns>License</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.ActivateLicense">
            <summary>
            Activates a license for the portal.
            </summary>
            <short>
            Activate a license
            </short>
             <category>Quota</category>
            <returns>License</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.ActivateTrial">
            <summary>
            Activates a trial license for the portal.
            </summary>
            <short>
            Activate a trial license
            </short>
             <category>Quota</category>
            <returns>Trial license</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetTenantExtra">
            <summary>
            Returns an extra tenant license for the portal.
            </summary>
            <short>
            Get an extra tenant license
            </short>
             <category>Quota</category>
            <returns>Extra tenant license information</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetTariff">
            <summary>
            Returns the current portal tariff.
            </summary>
            <short>
            Get a portal tariff
            </short>
             <category>Quota</category>
            <returns>Tariff</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetQuota">
            <summary>
            Returns the current portal quota.
            </summary>
            <short>
            Get a portal quota
            </short>
             <category>Quota</category>
            <returns>Quota</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetRightQuota">
            <summary>
            Returns the recommended quota for the current portal.
            </summary>
            <short>
            Get the recommended quota
            </short>
             <category>Quota</category>
            <returns>Quota</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetFullAbsolutePath(System.String)">
            <summary>
            Returns the full absolute path to the current portal.
            </summary>
            <short>
            Get a path to the portal
            </short>
            <param name="virtualPath">Portal virtual path</param>
            <returns>Portal path</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetMessageCount">
            <summary>
            Returns a number of unread messages from the portal.
            </summary>
            <short>
            Get a number of unread messages
            </short>
            <category>Talk</category>
            <returns>Number of unread messages</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.RemoveXmppConnection(System.String)">
            <summary>
            Removes the XMPP connection specified in the request from the inner channel.
            </summary>
            <short>
            <category>Talk</category>
            Removes the XMPP connection
            </short>
            <param name="connectionId">Connection ID</param>
            <returns>XMPP connection ID</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.AddXmppConnection(System.String,System.Byte)">
            <summary>
            Adds the XMPP connection to the inner channel.
            </summary>
            <short>
            Add the XMPP connection
            </short>
            <category>Talk</category>
            <param name="connectionId">Connection ID</param>
            <param name="state">Service state</param>
            <returns>Updated inner channel</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetState(System.String)">
            <summary>
            Returns the service state for the user with the name specified in the request.
            </summary>
            <short>
            Get a service state
            </short>
            <category>Talk</category>
            <param name="userName">User name</param>
            <returns>State</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.SendState(System.Byte)">
            <summary>
            Sends a service state specified in the request.
            </summary>
            <short>
            Send a service state
            </short>
            <category>Talk</category>
            <param name="state">Service state</param>
            <returns>State</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.SendMessage(System.String,System.String,System.String)">
            <summary>
            Sends a message to the user specified in the request.
            </summary>
            <short>
            Send a message
            </short>
            <category>Talk</category>
            <param name="to">User to whom a message will be sent</param>
            <param name="text">Message text</param>
            <param name="subject">Message subject</param>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetAllStates">
            <summary>
            Returns a dictionary of all the service states.
            </summary>
            <short>
            Get service states
            </short>
            <category>Talk</category>
            <returns>Dictionary of all the service states</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetRecentMessages(System.String,System.Int32)">
            <summary>
            Returns all the recent messages.
            </summary>
            <short>
            Get recent messages
            </short>
            <category>Talk</category>
            <param name="calleeUserName">Callee user name</param>
            <param name="id">ID</param>
            <returns>Recent messages</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.Ping(System.Byte)">
            <summary>
            Pings when a message is received.
            </summary>
            <short>
            Ping
            </short>
            <category>Talk</category>
            <param name="state">Service state</param>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.RegisterMobileAppInstall(ASC.Core.Common.Notify.Push.MobileAppType)">
            <summary>
            Registers the mobile app installation.
            </summary>
            <short>
            Register the mobile app installation
            </short>
            <category>Mobile</category>
            <param name="type">Mobile app type</param>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetBackupSchedule">
            <summary>
            Returns the backup schedule of the current portal.
            </summary>
            <short>Get the backup schedule</short>
            <category>Backup</category>
            <returns>Backup schedule</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.CreateBackupSchedule(ASC.Core.Common.Contracts.BackupStorageType,System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.String,System.String}},System.Int32,ASC.Web.Studio.Core.Backup.BackupAjaxHandler.CronParams,System.Boolean)">
            <summary>
            Creates the backup schedule of the current portal with the parameters specified in the request.
            </summary>
            <short>Create the backup schedule</short>
            <param name="storageType">Storage type</param>
            <param name="storageParams">Storage parameters</param>
            <param name="backupsStored">Maximum number of backup stored copies</param>
            <param name="cronParams">Cron parameters</param>
            <param name="backupMail">Specifies if the mails will be included into the backup or not</param>
            <category>Backup</category>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.DeleteBackupSchedule">
            <summary>
            Deletes the backup schedule of the current portal.
            </summary>
            <short>Delete the backup schedule</short>
            <category>Backup</category>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.StartBackup(ASC.Core.Common.Contracts.BackupStorageType,System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.String,System.String}},System.Boolean)">
            <summary>
            Starts the backup of the current portal with the parameters specified in the request.
            </summary>
            <short>Start the backup</short>
            <param name="storageType">Storage type</param>
            <param name="storageParams">Storage parameters</param>
            <param name="backupMail">Specifies if the mails will be included into the backup or not</param>
            <category>Backup</category>
            <returns>Backup progress</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetBackupProgress">
            <summary>
            Returns the progress of the started backup.
            </summary>
            <short>Get the backup progress</short>
            <category>Backup</category>
            <returns>Backup progress</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetBackupHistory">
            <summary>
            Returns the history of the started backup.
            </summary>
            <short>Get the backup history</short>
            <category>Backup</category>
            <returns>Backup history</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.DeleteBackup(System.Guid)">
            <summary>
            Deletes the backup with the ID specified in the request.
            </summary>
            <short>Delete the backup</short>
            <param name="id">Backup ID</param>
            <category>Backup</category>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.DeleteBackupHistory">
            <summary>
            Deletes the backup history of the current portal.
            </summary>
            <short>Delete the backup history</short>
            <category>Backup</category>
            <returns>Backup history</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.StartBackupRestore(System.String,ASC.Core.Common.Contracts.BackupStorageType,System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.String,System.String}},System.Boolean)">
            <summary>
            Starts the data restoring process of the current portal with the parameters specified in the request.
            </summary>
            <short>Start the restoring process</short>
            <param name="backupId">Backup ID</param>
            <param name="storageType">Storage type</param>
            <param name="storageParams">Storage parameters</param>
            <param name="notify">Notifies users about backup or not</param>
            <category>Backup</category>
            <returns>Restoring progress</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetRestoreProgress">
            <summary>
            Returns the progress of the started restoring process.
            </summary>
            <short>Get the restoring progress</short>
            <category>Backup</category>
            <returns>Restoring progress</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetTempPath(System.String)">
             <summary>
             Returns the path to the backup temporary directory.
             </summary>
             <short>Get the backup temporary path</short>
             <category>Backup</category>
             <returns>Backup temporary path</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.DeletePortalImmediately">
             <summary>
             Deletes the current portal immediately
             </summary>
             <short>Delete the current portal</short>
             <returns></returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.UpdatePortalName(System.String)">
             <summary>
             Updates a portal name with a new one specified in the request.
             </summary>
             <short>Update a portal name</short>
             <param name="alias">New portal name</param>
             <returns>Message about renaming a portal</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.SendCongratulations(System.Guid,System.String)">
             <summary>
             Sends congratulations to the user after registering the portal.
             </summary>
             <short>Send congratulations</short>
             <param name="userid">User ID</param>
             <param name="key">Email key</param>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.RemoveCommentComplete(System.String,System.String)">
             <summary>
             Removes a comment with the ID specified in the request.
             </summary>
             <short>Remove a comment</short>
             <category>Comments</category>
             <param name="commentid">Comment ID</param>
             <param name="domain">Domain name</param>
             <returns>Operation status</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.CancelCommentComplete(System.String,System.String,System.Boolean)">
             <summary>
             Cancels editing a comment with the ID specified in the request.
             </summary>
             <short>Cancel comment editing</short>
             <category>Comments</category>
             <param name="commentid">Comment ID</param>
             <param name="domain">Domain name</param>
             <param name="isedit">Specifies if a comment was edited or not</param>
             <returns>Operation status</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.EditCommentComplete(System.String,System.String,System.String,System.Boolean)">
             <summary>
             Edits a comment with the ID specified in the request.
             </summary>
             <short>Edit a comment</short>
             <category>Comments</category>
             <param name="commentid">Comment ID</param>
             <param name="domain">Domain name</param>
             <param name="html">New comment in the HTML format</param>
             <param name="isedit">Specifies if a comment was edited or not</param>
             <returns>Operation status</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetBarPromotions(System.String,System.String,System.Boolean)">
             <summary>
             Returns the promotion bar.
             </summary>
             <short>Get the promotion bar</short>
             <category>Promotions</category>
             <param name="domain">Domain name</param>
             <param name="page">Page</param>
             <param name="desktop">Specifies if the bar will be displayed in the desktop app or not</param>
             <returns>Promotion bar</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.MarkBarPromotion(System.String)">
             <summary>
             Marks the promotion bar as read.
             </summary>
             <short>Mark the promotion bar as read</short>
             <category>Promotions</category>
             <param name="id">ID</param>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetBarTips(System.String,System.String,System.Boolean,System.Boolean)">
             <summary>
             Returns the promotion bar tips.
             </summary>
             <short>Get the promotion bar tips</short>
             <category>Promotions</category>
             <param name="domain">Domain name</param>
             <param name="page">Page</param>
             <param name="productAdmin">Product administator</param>
             <param name="desktop">Specifies if the bar will be displayed in the desktop app or not</param>
             <returns>Promotion bar tips</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.MarkBarTip(System.String)">
             <summary>
             Marks the promotion bar tips as read.
             </summary>
             <short>Mark the promotion bar tips as read</short>
             <category>Promotions</category>
             <param name="id">ID</param>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.DeleteBarTips">
             <summary>
             Deletes the promotion bar tips.
             </summary>
             <short>Delete the promotion bar tips</short>
             <category>Promotions</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetSearchSettings">
            <summary>
            Returns the search settings.
            </summary>
            <short>Get the search settings</short>
            <category>Search</category>
            <returns>Search settings</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.CheckSearchAvailable">
            <summary>
            Checks if the searching process is available or not.
            </summary>
            <short>Check the search availability</short>
            <category>Search</category>
            <returns>Search information</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.Reindex(System.String)">
            <summary>
            Reindexes a page during the search process.
            </summary>
            <short>Reindex a page</short>
            <category>Search</category>
            <param name="name">Index name</param>
            <returns>Search information</returns>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.SetSearchSettings(System.Collections.Generic.List{ASC.ElasticSearch.Core.SearchSettingsItem})">
            <summary>
            Sets the search settings specified in the request.
            </summary>
            <short>Set the search settings</short>
            <category>Search</category>
            <param name="items">Search settings</param>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetRandomPassword">
             <summary>
             Returns a random password.
             </summary>
             <short>Get a random password</short>
             <returns>Random password</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.GetIPInformation(System.String)">
             <summary>
             Returns the information about the IP address specified in the request.
             </summary>
             <short>Get the IP information</short>
             <param name="ipAddress">IP address</param>
             <returns>IP information</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Portal.PortalApi.MarkGiftAsReaded">
             <summary>
             Marks a gift message as read.
             </summary>
             <short>Mark a gift message as read</short>
            <visible>false</visible>
        </member>
    </members>
</doc>
