<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASC.Api.Mail</name>
    </assembly>
    <members>
        <member name="M:ASC.Api.Mail.MailApi.GetFilters">
            <summary>
            Returns a list of filters used in all the mails.
            </summary>
            <returns>List of filters which is represented as JSON</returns>
            <short>Get filters</short> 
            <category>Filters</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.CreateFilter(ASC.Mail.Data.Contracts.MailSieveFilterData)">
            <summary>
            Creates a new filter with the parameters specified in the request.
            </summary>
            <param name="filter">Filter parameters: ID, name, position, enabled, conditions, actions, options</param>
            <returns>Filter</returns>
            <short>Create a filter</short> 
            <category>Filters</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.UpdateFilter(ASC.Mail.Data.Contracts.MailSieveFilterData)">
            <summary>
            Updates the selected filter with the parameters specified in the request.
            </summary>
            <param name="filter">New filter parameters: ID, name, position, enabled, conditions, actions, options</param>
            <returns>Updated filter</returns>
            <short>Update a filter</short> 
            <category>Filters</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.DeleteFilter(System.Int32)">
            <summary>
            Deletes a filter with the ID specified in the request.
            </summary>
            <param name="id">Filter ID</param>
            <returns>Filter ID</returns>
            <short>Delete a filter</short> 
            <category>Filters</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.CheckFilter(ASC.Mail.Data.Contracts.MailSieveFilterData,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Checks the results of a filter specified in the request.
            </summary>
            <param name="filter">Filter parameters: ID, name, position, enabled, conditions, actions, options</param>
            <param optional="true" name="page">Page number</param>
            <param optional="true" name="pageSize">Number of messages on the page</param>
            <returns>List of messages</returns>
            <short>Check filter results</short> 
            <category>Filters</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.ApplyFilter(System.Int32)">
            <summary>
            Applies a filter to the existing messages.
            </summary>
            <param name="id">Filter ID</param>
            <returns>Mail operation status</returns>
            <short>Apply a filter</short> 
            <category>Filters</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetMailServerInfo">
            <summary>
            Returns the mail server information.
            </summary>
            <returns>Mail server information</returns>
            <short>Get the mail server information</short> 
            <category>Mail service</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.ConnectMailServer(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Connects the mail server to the portal.
            </summary>
            <param name="ip">Mail server IP</param>
            <param name="sqlip">Mail server SQL IP</param>
            <param name="database">Mail server database</param>
            <param name="user">User</param>
            <param name="password">Password</param>
            <returns>Mail server information</returns>
            <short>Connect the mail server</short> 
            <category>Mail service</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SaveMailServerInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Saves the mail server information specified in the request.
            </summary>
            <param name="ip">Mail server IP</param>
            <param name="sqlip">Mail server SQL IP</param>
            <param name="database">Mail server database</param>
            <param name="user">User</param>
            <param name="password">Password</param>
            <param name="token">Token</param>
            <param name="host">Mail server host</param>
            <returns>Operation result</returns>
            <short>Save the mail server information</short> 
            <category>Mail service</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.ConnectAndSaveMailServerInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Connects the mail server and saves its information.
            </summary>
            <param name="host">Mail server host</param>
            <param name="database">Mail server database</param>
            <param name="user">User</param>
            <param name="password">Password</param>
            <returns>Operation result</returns>
            <short>Connect the mail server and save its information</short> 
            <category>Mail service</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.ConnectAndSavePartitionalMailServerInfo(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Connects the mail server and saves its partitional information.
            </summary>
            <param name="mailHost">Mail server host</param>
            <param name="mysqlHost">MySQL host</param>
            <param name="mysqlDatabase">MySQL database</param>
            <param name="mysqlUser">MySQL user</param>
            <param name="mysqlPassword">MySQL password</param>
            <returns>Operation result</returns>
            <short>Connect the mail server and save its partitional information</short> 
            <category>Mail service</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetCommonSettings">
            <summary>
            Returns the common settings.
            </summary>
            <returns>Common settings</returns>
            <short>Get common settings</short> 
            <category>Settings</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetEnableConversationFlag">
            <summary>
            Returns the "Enable conversations" flag.
            </summary>
            <returns>Boolean value: True - the flag is enabled, False - the flag is disabled</returns>
            <short>Get the "Enable conversations" flag</short> 
            <category>Settings</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SetEnableConversationFlag(System.Boolean)">
            <summary>
            Sets the "Enable Conversations" flag.
            </summary>
            <param name="enabled">Specifies if the "Enable Conversations" flag is enabled or not</param>
            <short>Set the "Enable Conversations" flag</short> 
            <category>Settings</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetAlwaysDisplayImagesFlag">
            <summary>
            Returns the "Always display images" flag.
            </summary>
            <returns>Boolean value: True - the flag is enabled, False - the flag is disabled</returns>
            <short>Get the "Always display images" flag</short> 
            <category>Settings</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SetAlwaysDisplayImagesFlag(System.Boolean)">
            <summary>
            Sets the "Always display images" flag.
            </summary>
            <param name="enabled">Specifies if the "Always display images" flag is enabled or not</param>
            <short>Set the "Always display images" flag</short> 
            <category>Settings</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetCacheUnreadMessagesFlag">
            <summary>
            Returns the "Cache unread messages" flag.
            </summary>
            <returns>Boolean value: True - the flag is enabled, False - the flag is disabled</returns>
            <short>Get the "Cache unread messages" flag</short> 
            <category>Settings</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SetCacheUnreadMessagesFlag(System.Boolean)">
            <summary>
            Sets the "Cache unread messages" flag.
            </summary>
            <param name="enabled">Specifies if the "Cache unread messages" flag is enabled or not</param>
            <short>Set the "Cache unread messages" flag</short> 
            <category>Settings</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetEnableGoNextAfterMoveFlag">
            <summary>
            Returns the "Go next after move" flag.
            </summary>
            <returns>Boolean value: True - the flag is enabled, False - the flag is disabled</returns>
            <short>Get the "Go next after move" flag</short> 
            <category>Settings</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SetEnableGoNextAfterMoveFlag(System.Boolean)">
            <summary>
            Sets the "Go next after move" flag.
            </summary>
            <param name="enabled">Specifies if the "Go next after move" flag is enabled or not</param>
            <short>Set the "Go next after move" flag</short> 
            <category>Settings</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetEnableReplaceMessageBodyFlag">
            <summary>
            Returns the "Replace message body" flag.
            </summary>
            <returns>Boolean value: True - the flag is enabled, False - the flag is disabled</returns>
            <short>Get the "Replace message body" flag</short> 
            <category>Settings</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SetEnableReplaceMessageBodyFlag(System.Boolean)">
            <summary>
            Sets the "Replace message body" flag.
            </summary>
            <param name="enabled">Specifies if the "Replace message body" flag is enabled or not</param>
            <short>Set the "Replace message body" flag</short> 
            <category>Settings</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.ExportAttachmentsToDocuments(System.Int32,System.String)">
            <summary>
            Exports all the message attachments to the folder with documents.
            </summary>
            <short>Export message attachments</short>
            <param name="id_message">Message ID</param>
            <param name="id_folder" optional="true">Folder ID (if empty, the "My documents" folder is used)</param>
            <returns>Count of exported attachments</returns>
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.ExportAttachmentToDocuments(System.Int32,System.String)">
            <summary>
            Exports an attachment with the ID specified in the request to the folder with documents.
            </summary>
            <short>Export an attachment</short>
            <param name="id_attachment">Attachment ID</param>
            <param name="id_folder" optional="true">Folder ID (if empty, the "My documents" folder is used)</param>
            <returns>Document ID in the folder with documents</returns>
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.AddAttachment(System.Int32,System.String,System.IO.Stream,System.String)">
            <summary>
            Adds an attachment to the draft with the ID specified in the request.
            </summary>
            <short>Add an attachment</short>
            <param name="id_message">Message ID</param>
            <param name="name">File name</param>
            <param name="file">File stream</param>
            <param name="content_type">File content type</param>
            <returns>Mail attachment</returns>
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.AddCalendarBody(System.Int32,System.String)">
            <summary>
            Adds an iCal body to the draft with the ID specified in the request.
            </summary>
            <short>Add a calendar</short>
            <param name="id_message">Message ID</param>
            <param name="ical_body">iCal body</param>
            <returns>Mail attachment</returns>
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.DownloadAllAttachments(System.Int32)">
            <summary>
            Downloads all the attachments from the message with the ID specified in the request.
            </summary>
            <short>
            Download attachments
            </short>
            <category>Messages</category>
            <param name="messageId">Message ID</param>
            <returns>Attachment archive</returns>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.UpdateAutoreply(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            Updates or creates an autoreply with the parameters specified in the request.
            </summary>
            <short>Update an autoreply</short>
            <category>Autoreply</category>
            <param name="mailboxId">Mailbox ID</param>
            <param name="turnOn">New autoreply status</param>
            <param name="onlyContacts">If true, then send autoreply only to contacts</param>
            <param name="turnOnToDate">If true, then the "toDate" field is active</param>
            <param name="fromDate">New start date of autoreply sending</param>
            <param name="toDate">New end date of autoreply sending</param>
            <param name="subject">New autoreply subject</param>
            <param name="html">New autoreply value in the HTML format</param>
            <returns>Updated autoreply information</returns>
        </member>
        <member name="P:ASC.Api.Mail.MailApi.Name">
            <summary>
             Api name entry
            </summary>
        </member>
        <member name="P:ASC.Api.Mail.MailApi.MailAutocompleteMaxCountPerSystem">
            <summary>
            Limit result per Contact System
            </summary>
        </member>
        <member name="P:ASC.Api.Mail.MailApi.MailAutocompleteTimeout">
            <summary>
            Timeout in milliseconds
            </summary>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.#ctor(ASC.Api.Impl.ApiContext)">
            <summary>
             Constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetMailOperations">
            <summary>
            Returns all the running complex mail operations.
            </summary>
            <short>
            Get running complex mail operations
            </short>
            <category>Operations</category>
            <returns>List of running mail operations</returns>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetMailOperation(System.String)">
            <summary>
            Returns a status of complex mail operation with the ID specified in the request.
            </summary>
            <short>
            Get a status of complex mail operation
            </short>
            <category>Operations</category>
            <param name="operationId">Operation ID</param>
            <returns>Status of complex mail operation</returns>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.TranslateMailOperationStatus(ASC.Common.Threading.DistributedTask)">
            <summary>
            Translates a mail operation status.
            </summary>
            <short>Translate a mail operation status</short>
            <category>Operations</category>
            <param name="op">Instance of distributed task</param>
            <returns>Translated status</returns>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetHelpCenterHtml">
            <summary>
            Returns the help center page HTML.
            </summary>
            <returns>String with the help center page HTML</returns>
            <short>Get help center page HTML</short> 
            <category>Help center</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetSignature(System.Int32)">
            <summary>
            Returns a signature of a mailbox with the ID specified in the request.
            </summary>
            <short>Get a signature</short>
            <category>Signature</category>
            <param name="mailbox_id">Mailbox ID</param>
            <returns>Signature object</returns>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.UpdateSignature(System.Int32,System.String,System.Boolean)">
            <summary>
            Updates or creates a signature of a mailbox with the ID specified in the request.
            </summary>
            <short>Update a signature</short>
            <category>Signature</category>
            <param name="mailbox_id">Mailbox ID</param>
            <param name="html">New signature value</param>
            <param name="is_active">New signature status (active or not)</param>
            <returns>Updated signature object</returns>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.CreateSampleMessage(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Creates a sample message with the parameters specified in the request. [Tests]
            </summary>
            <short>Create a sample message</short>
            <param name="folderId">Folder ID</param>
            <param name="mailboxId">Mailbox ID</param>
            <param name="to">List of mail addresses to which the letter came. <![CDATA[Format: Name<name@domain>]]></param>
            <param name="cc">List of "cc" mail addresses. <![CDATA[Format: Name<name@domain>]]></param>
            <param name="bcc">List of "bcc" mail addresses. <![CDATA[Format: Name<name@domain>]]></param>
            <param name="importance">Important message or not: true - important, false - not important</param>
            <param name="unread">Message status: unread (true), read (false) or all (null) messages</param>
            <param name="subject">Message subject</param>
            <param name="body">Message body as HTML string</param>
            <returns>Message ID</returns>
            <category>Tests</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.AppendAttachmentsToSampleMessage(System.Nullable{System.Int32},System.String,System.IO.Stream,System.String)">
            <summary>
            Appends an attachment to the sample message with the ID specified in the request. [Tests]
            </summary>
            <short>Append attachments to a sample message</short>
            <param name="messageId">Message ID</param>
            <param name="filename">File name</param>
            <param name="stream">File stream</param>
            <param name="contentType">File content type</param>
            <returns>Message ID</returns>
            <category>Tests</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.LoadSampleMessage(System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.Int32},System.Boolean,System.IO.Stream)">
            <summary>
            Loads a sample message with the parameters specified in the request from EML. [Tests]
            </summary>
            <short>Load a sample message</short>
            <param name="folderId">Folder ID</param>
            <param name="userFolderId">User folder ID</param>
            <param name="mailboxId">Mailbox ID</param>
            <param name="unread">Message status: unread (true), read (false) or all (null) messages</param>
            <param name="emlStream">EML stream</param>
            <returns>Message ID</returns>
            <category>Tests</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetAccounts(System.String)">
            <summary>
            Returns a list of all the user mailboxes, aliases and groups.
            </summary>
            <param name="username" visible="false">User name</param>
            <returns>List of user mailboxes, aliases and groups</returns>
            <short>Get user accounts</short> 
            <category>Accounts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetAccount(System.String)">
            <summary>
            Returns the account information by the email address specified in the request.
            </summary>
            <param name="email">Account email address</param>
            <returns>Account information</returns>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
            <exception cref="T:System.NullReferenceException">Exception happens when mailbox wasn't found by email.</exception>
            <short>Get an account by email</short> 
            <category>Accounts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.CreateAccountSimple(System.String,System.String)">
            <summary>
            Creates an account based on the email address and password specified in the request.
            </summary>
            <param name="email">Account email address in the name@domain format</param>
            <param name="password">Email password</param>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
            <exception cref="T:System.Exception">Exception contains text description of happened error.</exception>
            <returns>Created account</returns>
            <short>Create an account by email and password</short> 
            <category>Accounts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.CreateAccount(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,ASC.Mail.Enums.EncryptionType,ASC.Mail.Enums.EncryptionType,ASC.Mail.Enums.SaslMechanism,ASC.Mail.Enums.SaslMechanism)">
            <summary>
            Creates an account using full information about mail servers specified in the request.
            </summary>
            <param name="name">Account name in Teamlab</param>
            <param name="email">Account email address in the name@domain format</param>
            <param name="account">IMAP or POP server login</param>
            <param name="password">IMAP or POP server password</param>
            <param name="port">IMAP or POP server port</param>
            <param name="server">IMAP or POP server address or IP</param>
            <param name="smtp_account">SMTP server login</param>
            <param name="smtp_password">SMTP server password</param>
            <param name="smtp_port">SMTP server port</param>
            <param name="smtp_server">SMTP server address or IP</param>
            <param name="smtp_auth">Specifies if the authentication is needed for the SMTP server or not</param>
            <param name="imap">Specifies if the IMAP server is used for incoming mails or not</param>
            <param name="restrict">Specifies if all the mails should be downloaded from the account (false) or not (true). If true, then messages from last 30 days only will be downloaded</param>
            <param name="incoming_encryption_type">Encryption type for the IMAP or POP server: 0 - None, 1 - SSL, 2 - StartTLS</param>
            <param name="outcoming_encryption_type">Encryption type for the SMTP server: 0 - None, 1 - SSL, 2 - StartTLS</param>
            <param name="auth_type_in">Authentication type for the IMAP or POP server: 1 - Login, 4 - CremdMd5, 5 - OAuth2</param>
            <param name="auth_type_smtp">Authentication type for the SMTP server: 0 - None, 1 - Login, 4 - CremdMd5, 5 - OAuth2</param>
            <returns>Created account</returns>
            <exception cref="T:System.Exception">Exception contains text description of happened error.</exception>
            <short>Create an account by custom mail servers</short> 
            <category>Accounts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.CreateAccountOAuth(System.String,System.Byte)">
            <summary>
            Creates a mail account with OAuth authentication (only Google OAuth is supported).
            </summary>
            <param name="code">OAuth code</param>
            <param name="type">OAuth service type: 0 - Unknown, 1 - Google</param>
            <exception cref="T:System.Exception">Exception contains text description of an error occurred.</exception>
            <returns>Created account</returns>
            <short>Create the OAuth account</short> 
            <category>Accounts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.UpdateAccountOAuth(System.String,System.Byte,System.Int32)">
            <summary>
            Updates a mail account with OAuth authentication (only Google OAuth is supported).
            </summary>
            <param name="code">New OAuth code</param>
            <param name="type">New OAuth service type: 0 - Unknown, 1 - Google</param>
            <param name="mailboxId">Mailbox ID</param>
            <exception cref="T:System.Exception">Exception contains text description of an error occurred.</exception>
            <returns>Updated OAuth account</returns>
            <short>Update the OAuth account</short> 
            <category>Accounts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.UpdateAccount(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Boolean,System.Boolean,ASC.Mail.Enums.EncryptionType,ASC.Mail.Enums.EncryptionType,ASC.Mail.Enums.SaslMechanism,ASC.Mail.Enums.SaslMechanism)">
            <summary>
            Updates an account with the name specified in the request.
            </summary>
            <param name="name">Account name in Teamlab</param>
            <param name="email">New account email in the name@domain format</param>
            <param name="account">New IMAP or POP server login</param>
            <param name="password">New IMAP or POP server password</param>
            <param name="port">New IMAP or POP server port</param>
            <param name="server">New IMAP or POP server address or IP</param>
            <param name="smtp_account">New SMTP server login</param>
            <param name="smtp_password">New SMTP server password</param>
            <param name="smtp_port">New SMTP server port</param>
            <param name="smtp_server">New SMTP server address or IP</param>
            <param name="smtp_auth">Specifies if the authentication is needed for the SMTP server or not</param>
            <param name="restrict">Specifies if all the mails should be downloaded from the account (false) or not (true). If true, then messages from last 30 days only will be downloaded</param>
            <param name="incoming_encryption_type">New encryption type for the IMAP or POP server: 0 - None, 1 - SSL, 2 - StartTLS</param>
            <param name="outcoming_encryption_type">New encryption type for the SMTP server: 0 - None, 1 - SSL, 2 - StartTLS</param>
            <param name="auth_type_in">New authentication type for the IMAP or POP server: 1 - Login, 4 - CremdMd5, 5 - OAuth2</param>
            <param name="auth_type_smtp">New authentication type for the SMTP server: 0 - None, 1 - Login, 4 - CremdMd5, 5 - OAuth2</param>
            <returns>Updated account</returns>
            <exception cref="T:System.Exception">Exception contains text description of an error occurred.</exception>
            <short>Update an account</short> 
            <category>Accounts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.DeleteAccount(System.String)">
            <summary>
            Deletes an account by email address specified in the request.
            </summary>
            <param name="email">Account email address</param>
            <returns>Operation status</returns>
            <exception cref="T:System.ArgumentException">Exception happens when some parameters are invalid. Text description contains parameter name and text description.</exception>
            <exception cref="T:System.NullReferenceException">Exception happens when mailbox wasn't found.</exception>
            <short>Delete an account</short> 
            <category>Accounts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SetAccountEnable(System.String,System.Boolean)">
            <summary>
            Sets a state of an account with email address specified in the request.
            </summary>
            <param name="email">Account email address</param>
            <param name="state">Account activity state: true - enabled, false - disabled</param>
            <returns>Account mailbox ID</returns>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
            <exception cref="T:System.Exception">Exception happens when update operation failed.</exception>
            <short>Set an account state</short> 
            <category>Accounts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SetDefaultAccount(System.String,System.Boolean)">
            <summary>
            Sets the default account with email address specified in the request.
            </summary>
            <param name="email">Account email address</param>
            <param name="isDefault">Set or reset account as default</param>
            <returns>Account email address</returns>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
            <exception cref="T:System.Exception">Exception happens when update operation failed.</exception>
            <short>Set the default account</short> 
            <category>Accounts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetAccountDefaults(System.String,System.String)">
            <summary>
            Returns the default settings for an account based on its email domain.
            </summary>
            <param name="email">Account email address</param>
            <param name="action">Action for default settings:
            "get_imap_pop_settings" - get IMAP or POP settings (IMAP settings are prior),
            "get_imap_server" | "get_imap_server_full" - get IMAP settings,
            "get_pop_server" | "get_pop_server_full" - get POP settings.
            By default returns default IMAP settings
            </param>
            <returns>Account with default settings</returns>
            <short>Get the default account settings</short> 
            <category>Accounts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SetAccountEMailInFolder(System.Int32,System.String)">
            <summary>
            Sets the account email in a folder with the ID specified in the request.
            </summary>
            <param name="mailbox_id">Mailbox ID</param>
            <param name="email_in_folder">Document folder ID</param>
            <returns>Account email address</returns>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
            <exception cref="T:System.Exception">Exception happens when update operation failed.</exception>
            <short>Set the account email in a folder</short> 
            <category>Accounts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.UpdateUserActivity(System.Boolean)">
            <summary>
            Updates the user activity state.
            </summary>
            <short>Update the user activity state</short>
            <param name="userOnline">Specifies if the user is online or not</param>
            <category>Accounts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetAlerts">
            <summary>
            Returns a list of all the alerts for the authenticated user.
            </summary>
            <returns>List of alerts</returns>
            <short>Get alerts</short> 
            <category>Alerts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.DeleteAlert(System.Int64)">
            <summary>
            Deletes an alert with the ID specified in the request.
            </summary>
            <param name="id">Alert ID</param>
            <returns>Deleted alert ID. Same as the request parameter</returns>
            <short>Delete an alert by ID</short> 
            <category>Alerts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SearchEmails(System.String)">
            <summary>
            Searches for contacts by their emails.
            </summary>
            <param name="term">String part of contact name, lastname or email</param>
            <returns>List of strings in the following format: "Name Lastname" email</returns>
            <short>Search contacts by email</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetContacts(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.String)">
            <summary>
            Returns a list of filtered mail contacts by the search query specified in the request.
            </summary>
            <param optional="true" name="search">Text to search in contact names or emails</param>
            <param optional="true" name="contactType">Contact type</param>
            <param optional="true" name="pageSize">Count of contacts on page</param>
            <param optional="true" name="fromIndex">Page number</param> 
            <param name="sortorder">Sort order by name. String parameter: "ascending" - ascended, "descending" - descended</param> 
            <returns>List of filtered contacts</returns>
            <short>Get contacts by search query</short> 
            <category>Contacts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetContactsByContactInfo(ASC.Mail.Enums.ContactInfoType,System.String,System.Nullable{System.Boolean})">
            <summary>
            Returns a list of mail contacts with the contact information specified in the request.
            </summary>
            <param optional="false" name="infoType">Information type</param>
            <param optional="false" name="data">Contact data</param>
            <param optional="true" name="isPrimary">Primary contact or not</param>
            <returns>List of filtered contacts</returns>
            <short>Get contacts by contact information</short> 
            <category>Contacts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.CreateContact(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Creates a mail contact with the parameters specified in the request.
            </summary>
            <param name="name">Contact name</param>
            <param name="description">Contact description</param>
            <param name="emails">List of emails</param>
            <param name="phoneNumbers">List of phone numbers</param>
            <returns>Information about created contact</returns>
            <short>Create a mail contact</short>
            <category>Contacts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.RemoveContacts(System.Collections.Generic.List{System.Int32})">
            <summary>
            Removes the mail contacts with the IDs specified in the request.
            </summary>
            <param name="ids">List of mail contact IDs</param>
            <returns>List of removed mail contact IDs </returns>
            <short>Remove mail contacts</short> 
            <category>Contacts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.UpdateContact(System.Int32,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Updates a mail contact with the ID specified in the request.
            </summary>
            <param name="id">Mail contact ID</param>
            <param name="name">New contact name</param>
            <param name="description">New contact description</param>
            <param name="emails">New list of emails</param>
            <param name="phoneNumbers">New list of phone numbers</param>
            <returns>Information about updated contact</returns>
            <short>Update a mail contact</short>
            <category>Contacts</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetLinkedCrmEntitiesInfo(System.Int32)">
             <summary>
             Returns a list of the CRM entities (contact, case or opportunity) linked with a chain.
             </summary>
             <param name="message_id">Message ID. It may be ID of any message included in the chain</param>
             <returns>List of entity information: {entity_id, entity_type, avatar_link, title}</returns>
             <short>Get the linked CRM entities</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetFilteredConversations(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Nullable{System.Int32},System.String,ASC.Specific.ApiDateTime,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Returns the conversations with the parameters specified in the request if there were changes since last check date.
            </summary>
            <param optional="true" name="folder">Folder type: 1 - inbox, 2 - sent, 3 - drafts, 4 - trash, 5 - spam</param>
            <param optional="true" name="unread">Conversation status: unread (true), read (false) or all (null) messages</param>
            <param optional="true" name="attachments">Defines if a conversation has attachments or not: with attachments (true), without attachments (false) or all (null) messages</param>
            <param optional="true" name="period_from">Start search period date</param>
            <param optional="true" name="period_to">End search period date</param>
            <param optional="true" name="important">Important conversation or not</param>
            <param optional="true" name="from_address">Mail address from which a letter came</param>
            <param optional="true" name="to_address">Mail address to which a letter came</param>
            <param optional="true" name="mailbox_id">Recipient mailbox ID</param>
            <param optional="true" name="tags">IDs of tags linked to the target conversation</param>
            <param optional="true" name="search">Text to search in conversation body and subject</param>
            <param optional="true" name="page_size">Count of conversations on page</param>
            <param name="sortorder">Sort order by date: "ascending" - ascended, "descending" - descended</param> 
            <param optional="true" name="from_date">Date from which conversation search performed</param>
            <param optional="true" name="from_message">Message from which conversation search performed</param>
            <param optional="true" name="with_calendar">Conversation has a calendar or not</param>
            <param optional="true" name="user_folder_id">User folder ID</param>
            <param name="prev_flag">Sorting direction of conversation list (previous or next)</param>
            <returns>List of filtered conversations</returns>
            <short>Get filtered conversations</short>
            <category>Conversations</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetConversation(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of messages linked in one chain (conversation).
            </summary>
            <short>Get a conversation</short>
            <param name="id">ID of any message from the chain</param>
            <param name="loadAll">Loads content of all messages</param>
            <param optional="true" name="markRead">Marks a conversation as read</param>
            <param optional="true" name="needSanitize">Specifies that HTML for the FCK editor needs to be prepared</param>
            <returns>List of messages linked in one chain</returns>
            <category>Conversations</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetPrevNextConversationId(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Returns the previous or next conversation ID filtered with the parameters specified in the request.
            </summary>
            <short>Get the previous or next conversation ID</short>
            <param name="id">Head message ID of the current conversation</param>
            <param name="direction">Defines if the previous or next conversation is needed: "prev" for previous, "next" for next</param>
            <param optional="true" name="folder">Folder type: 1 - inbox, 2 - sent, 5 - spam</param>
            <param optional="true" name="unread">Message status: unread (true), read (false) or all (null) messages</param>
            <param optional="true" name="attachments">Defines if a message has attachments or not: with attachments (true), without attachments (false) or all (null) messages</param>
            <param optional="true" name="period_from">Start search period date</param>
            <param optional="true" name="period_to">End search period date</param>
            <param optional="true" name="important">Important message or not</param>
            <param optional="true" name="from_address">Mail address from which a letter came</param>
            <param optional="true" name="to_address">Mail address to which a letter came</param>
            <param optional="true" name="mailbox_id">Recipient mailbox ID</param>
            <param optional="true" name="tags">IDs of tags linked to the target message</param>
            <param optional="true" name="search">Text to search in message body and subject</param>
            <param optional="true" name="page_size">Count of messages on page</param>
            <param name="sortorder">Sort order by date: "ascending" - ascended, "descending" - descended</param>
            <param optional="true" name="with_calendar">Message has a calendar or not</param> 
            <param optional="true" name="user_folder_id">User folder ID</param>
            <returns>Head message ID of the previous or next conversation</returns>
            <category>Conversations</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.MoveConversations(System.Collections.Generic.List{System.Int32},System.Int32,System.Nullable{System.UInt32})">
            <summary>
            Moves conversations with the IDs specified in the request to the selected folder.
            </summary>
            <param name="ids">List of message IDs from conversations</param>
            <param name="folder">Folder type: 1 - inbox, 2 - sent, 3 - drafts, 4 - trash, 5 - spam</param>
            <param optional="true" name="userFolderId">User folder ID</param>
            <returns>List of message IDs from conversations</returns>
            <short>Move conversations to the folder</short>
            <category>Conversations</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.RestoreConversations(System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            Restores all the conversations previously moved to the specific folders to their original folders.
            </summary>
            <param name="ids">List of conversation IDs</param>
            <param optional="true" name="learnSpamTrainer">Sends messages to the spam training or not</param>
            <returns>List of restored conversation IDs</returns>
            <short>Restore conversations</short>
            <category>Conversations</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.RemoveConversations(System.Collections.Generic.List{System.Int32})">
            <summary>
            Removes conversations with the IDs specified in the request from the folders.
            </summary>
            <param name="ids">List of conversation IDs</param>
            <returns>List of removed conversation IDs</returns>
            <short>Remove conversations</short>
            <category>Conversations</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.MarkConversations(System.Collections.Generic.List{System.Int32},System.String)">
            <summary>
            Sets a status to the conversations with the IDs specified in the request.
            </summary>
            <param name="ids">List of conversation IDs</param>
            <param name="status">New status ("read", "unread", "important" or "normal")</param>
            <returns>List of conversations with changed status</returns>
            <short>Set a conversation status</short>
            <category>Conversations</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SetConversationsTag(System.Int32,System.Collections.Generic.List{System.Int32})">
             <summary>
             Adds a tag specified in the request to the conversations.
             </summary>
             <param name="tag_id">Tag ID</param>
             <param name="messages">List of conversation IDs</param>
             <returns>Tag ID</returns>
             <short>Add a tag to the conversations</short> 
             <category>Conversations</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.UnsetConversationsTag(System.Int32,System.Collections.Generic.List{System.Int32})">
             <summary>
             Removes a tag specified in the request from the conversations.
             </summary>
             <param name="tag_id">Tag ID</param>
             <param name="messages">List of conversation IDs</param>
             <returns>Tag ID</returns>
             <short>Remove a tag from the conversations</short> 
             <category>Conversations</category>
            <exception cref="T:System.ArgumentException">Exception happens when in parameters is invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.LinkConversationToCrm(System.Int32,System.Collections.Generic.IEnumerable{ASC.Mail.Data.Contracts.CrmContactData})">
            <summary>
            Links a conversation to CRM. All the new mails will be added to the CRM history.
            </summary>
            <short>Link a conversation to CRM</short>
            <param name="id_message">ID of any message from the chain</param>
            <param name="crm_contact_ids">List of CRM contact entities in the following format: {entity_id: 0, entity_type: 0}.
            Entity types: 1 - Contact, 2 - Case, 3 - Opportunity
            </param>
            <category>Conversations</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.MarkConversationAsCrmLinked(System.Int32,System.Collections.Generic.IEnumerable{ASC.Mail.Data.Contracts.CrmContactData})">
            <summary>
            Marks a conversation as CRM linked. All the new mails will be added to the CRM history.
            </summary>
            <short>Mark a conversation as CRM linked</short>
            <param name="id_message">ID of any messages from the chain</param>
            <param name="crm_contact_ids">List of CRM contact entities in the following format: {entity_id: 0, entity_type: 0}.
            Entity types: 1 - Contact, 2 - Case, 3 - Opportunity
            </param>
            <category>Conversations</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.UnmarkConversationAsCrmLinked(System.Int32,System.Collections.Generic.IEnumerable{ASC.Mail.Data.Contracts.CrmContactData})">
            <summary>
            Unmarks a conversation as CRM linked.
            </summary>
            <short>Unmark a conversation as CRM linked</short>
            <param name="id_message">ID of any message from the chain</param>
            <param name="crm_contact_ids">List of CRM contact entities in the following format: {entity_id: 0, entity_type: 0}.
            Entity types: 1 - Contact, 2 - Case, 3 - Opportunity
            </param>
            <category>Conversations</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.IsConversationLinkedWithCrm(System.Int32)">
            <summary>
            Checks if a conversation is CRM linked or not by message ID.
            </summary>
            <short>Check a conversation CRM status</short>
            <param name="message_id">ID of any message from the chain</param>
            <returns>Conversation CRM status</returns>
            <category>Conversations</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetFolders">
            <summary>
            Returns a list of default folders.
            </summary>
            <returns>List of default folders</returns>
            <short>Get the default folders</short> 
            <category>Folders</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.RemoveFolderMessages(System.Int32)">
            <summary>
            Removes all the messages from the trash or spam folder.
            </summary>
            <param name="folderid">Folder ID: 4 - Trash, 5 - Spam</param>
            <short>Remove folder messages</short> 
            <category>Folders</category>
            <returns>Folder ID</returns>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.RecalculateFolders">
            <summary>
            Recalculates folder counters.
            </summary>
            <returns>Operation status</returns>
            <short>Recalculate folders</short> 
            <category>Folders</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetUserFolders(System.Collections.Generic.List{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Returns a list of user folders with the IDs specified in the request.
            </summary>
            <param name="ids" optional="true">List of folder IDs</param>
            <param name="parentId" optional="true">Parent folder ID (root level equals to 0)</param>
            <returns>List of folders</returns>
            <short>Get the user folders</short> 
            <category>Folders</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.CreateUserFolder(System.String,System.UInt32)">
            <summary>
            Creates a user folder with the name specified in the request.
            </summary>
            <param name="name">Folder name</param>
            <param name="parentId">Parent folder ID (default = 0)</param>
            <returns>List of folders</returns>
            <short>Create a folder</short> 
            <category>Folders</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.UpdateUserFolder(System.UInt32,System.String,System.Nullable{System.UInt32})">
            <summary>
            Updates a user folder with the parameters specified in the request.
            </summary>
            <param name="id">Folder ID</param>
            <param name="name">New folder name</param>
            <param name="parentId">New parent folder ID (default = 0)</param>
            <returns>List of folders</returns>
            <short>Update a folder</short> 
            <category>Folders</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.DeleteUserFolder(System.UInt32)">
            <summary>
            Deletes a user folder with the ID specified in the request.
            </summary>
            <param name="id">Folder ID</param>
            <short>Delete a folder</short> 
            <category>Folders</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
            <returns>Operation status</returns>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetUserFolderByMailId(System.UInt32)">
            <summary>
            Returns a user folder by the mail ID specified in the request.
            </summary>
            <param name="mailId">Mail ID</param>
            <returns>User folder</returns>
            <short>Get a folder by mail ID</short> 
            <category>Folders</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetDisplayImagesAddresses">
            <summary>
            Returns a list of all the trusted addresses for image displaying.
            </summary>
            <returns>List of addresses. Email adresses are represented as strings in the name@domain format</returns>
            <short>Get trusted image addresses</short> 
            <category>Images</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.AddDisplayImagesAddress(System.String)">
             <summary>
             Adds the image address specified in the request to the list of trusted image addresses.
             </summary>
            <param name="address">Image address</param>
            <returns>Added image address</returns>
            <short>Add the trusted image address</short> 
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
            <category>Images</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.RemovevDisplayImagesAddress(System.String)">
             <summary>
             Removes the image address specified in the request from the list of trusted image addresses.
             </summary>
            <param name="address">Image address</param>
            <returns>Removed image address</returns>
             <short>Remove the trusted image address</short> 
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
             <category>Images</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetFilteredMessages(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Returns the messages with the parameters specified in the request if there were changes since last check date.
            </summary>
            <param optional="true" name="folder">Folder ID</param>
            <param optional="true" name="unread">Message status: unread (true), read (false) or all (null) messages</param>
            <param optional="true" name="attachments">Defines if a message has attachments or not: with attachments (true), without attachments (false) or all (null) messages</param>
            <param optional="true" name="period_from">Start search period date</param>
            <param optional="true" name="period_to">End search period date</param>
            <param optional="true" name="important">Important message or not</param>
            <param optional="true" name="from_address">Mail address from which a letter came</param>
            <param optional="true" name="to_address">Mail address to which a letter came</param>
            <param optional="true" name="mailbox_id">Recipient mailbox ID</param>
            <param optional="true" name="tags">IDs of tags linked to the target message</param>
            <param optional="true" name="search">Text to search in message body and subject</param>
            <param optional="true" name="page">Page number</param>
            <param optional="true" name="with_calendar">Message has a calendar or not</param>
            <param optional="true" name="page_size">Count of messages on page</param>
            <param optional="true" name="user_folder_id">User folder ID</param>
            <param name="sortorder">Sort order by date: "ascending" - ascended, "descending" - descended</param>
            <returns>List of filtered messages</returns>
            <short>Get filtered messages</short> 
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetMessage(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns the detailed information about a message with the ID specified in the request.
            </summary>
            <param name="id">Message ID</param>
            <param optional="true" name="loadImages">Unblocks suspicious content or not</param>
            <param optional="true" name="needSanitize">Specifies if HTML for the FCK editor needs to be prepared or not</param>
            <param optional="true" name="markRead">Marks a message as read or not</param>
            <returns>Message information</returns>
            <short>Get a message</short>
            <category>Messages</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException">Exception happens when message with the specified ID wasn't found.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.ReassignMailMessages(System.Int32,System.String)">
            <summary>
            Reassigns drafts/templates to the selected email.
            </summary>
            <param name="folder">Folder ID</param>
            <param name="email">Email to which messages will be reassigned</param>
            <short>Reassign drafts/templates</short> 
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetPrevNextMessageId(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Returns the previous or next message ID filtered with the parameters specified in the request..
            </summary>
            <param name="id">Head message ID of current conversation</param>
            <param name="direction">Defines if the previous or next conversation is needed: "prev" for previous, "next" for next</param>
            <param optional="true" name="folder">Folder type: 1 - inbox, 2 - sent, 5 - spam</param>
            <param optional="true" name="unread">Message status: unread (true), read (false) or all (null) messages</param>
            <param optional="true" name="attachments">Defines if a conversation has attachments or not: with attachments (true), without attachments (false) or all (null) messages</param>
            <param optional="true" name="period_from">Start search period date</param>
            <param optional="true" name="period_to">End search period date</param>
            <param optional="true" name="important">Important message or not</param>
            <param optional="true" name="from_address">Mail address from which a letter came</param>
            <param optional="true" name="to_address">Mail address to which a letter came</param>
            <param optional="true" name="mailbox_id">Recipient mailbox ID</param>
            <param optional="true" name="tags">IDs of tags linked to the target message</param>
            <param optional="true" name="search">Text to search in message body and subject</param>
            <param optional="true" name="page_size">Count of messages on page</param>
            <param optional="true" name="sortorder">Sort order by date: "ascending" - ascended, "descending" - descended</param>
            <param optional="true" name="with_calendar">Message has a calendar or not</param>
            <param optional="true" name="user_folder_id">User folder ID</param>
            <returns>Previous or next message ID</returns>
            <short>Get the previous or next message ID</short> 
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.DeleteMessageAttachment(System.Int32,System.Int32)">
            <summary>
            Deletes the selected attachment from the message with the ID specified in the request.
            </summary>
            <param name="messageid">Message ID</param>
            <param name="attachmentid">Attachment ID</param>
            <returns>The message ID which attachment was removed</returns>
            <short>Delete an attachment from the message</short> 
            <category>Messages</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.MarkMessages(System.Collections.Generic.List{System.Int32},System.String)">
            <summary>
            Sets a status to the messages with the IDs specified in the request.
            </summary>
            <param name="ids">List of message IDs</param>
            <param name="status">Message status: "read", "unread", "important" and "normal"</param>
            <returns>List of messages with changed status</returns>
            <short>Set a message status</short> 
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.RestoreMessages(System.Collections.Generic.List{System.Int32})">
            <summary>
            Restores the messages with the IDs specified in the request to their original folders.
            </summary>
            <param name="ids">List of message IDs</param>
            <returns>List of restored message IDs</returns>
            <short>Restore messages</short>
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.MoveMessages(System.Collections.Generic.List{System.Int32},System.Int32,System.Nullable{System.UInt32})">
            <summary>
             Moves the messages to a folder with the ID specified in the request.
            </summary>
            <param name="ids">List of message IDs</param>
            <param name="folder">Folder type: 1 - inbox, 2 - sent, 3 - drafts, 4 - trash, 5 - spam</param>
            <param optional="true" name="userFolderId">User folder ID</param>
            <returns>List of moved message IDs</returns>
            <short>Move messages to the folder</short> 
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SendMessage(System.Int32,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String,System.Collections.Generic.List{System.Int32},System.String,System.Collections.Generic.List{ASC.Mail.Data.Contracts.MailAttachmentData},ASC.Files.Core.Security.FileShare,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sends a message with the ID specified in the request.
            </summary>
            <param name="id">Message ID which will be sent or 0</param>
            <param name="from">Mail address from which a letter will be sent. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="to">List of mail addresses to which a letter will be sent. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="cc">List of "cc" mail addresses. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="bcc">List of "bcc" mail addresses. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="mimeReplyToId">Message ID to which this message replies</param>
            <param name="importance">Important message or not: true - important, false - not important</param>
            <param name="subject">Message subject</param>
            <param name="tags">List of tag IDs added to the message</param>
            <param name="body">Message body as HTML string</param>
            <param name="attachments">List of message attachments</param>
            <param name="fileLinksShareMode">Share mode for the links of attached files</param>
            <param name="calendarIcs">Calendar event in the iCal format for sending</param>
            <param name="isAutoreply">Specifies that this message is autoreply or not</param>
            <param optional="true" name="requestReceipt">Adds a request with the Return-Receipt-To header</param>
            <param optional="true" name="requestRead">Adds a request with the Disposition-Notification-To header</param>
            <returns>Message ID</returns>
            <short>Send a message</short> 
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SaveMessageOld(System.Int32,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String,System.Collections.Generic.List{System.Int32},System.String,System.Collections.Generic.List{ASC.Mail.Data.Contracts.MailAttachmentData},System.String)">
            <summary>
            Saves a message with the ID specified in the request.
            </summary>
            <param name="id">Message ID which will be saved or 0</param>
            <param name="from">Mail address from which a letter will be sent. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="to">List of mail addresses to which the letter will be sent. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="cc">List of "cc" mail addresses. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="bcc">List of "bcc" mail addresses. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="mimeReplyToId">Message ID to which this message replies</param>
            <param name="importance">Important message or not: true - important, false - not important</param>
            <param name="subject">Message subject</param>
            <param name="tags">List of tag IDs added to the message</param>
            <param name="body">Message body as HTML string</param>
            <param name="attachments">List of message attachments</param>
            <param name="calendarIcs">Calendar event in the iCal format for sending</param>
            <returns>Saved message ID</returns>
            <short>Save a message</short> 
            <category>Messages</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SaveMessage(System.Int32,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String,System.Collections.Generic.List{System.Int32},System.String,System.Collections.Generic.List{ASC.Mail.Data.Contracts.MailAttachmentData},System.String)">
            <summary>
            Saves a message with the ID specified in the request as a draft.
            </summary>
            <param name="id">Message ID which will be saved or 0</param>
            <param name="from">Mail address from which a letter will be sent. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="to">List of mail addresses to which a letter will be sent. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="cc">List of "cc" mail addresses. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="bcc">List of "bcc" mail addresses. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="mimeReplyToId">Message ID to which this message replies</param>
            <param name="importance">Important message or not: true - important, false - not important</param>
            <param name="subject">Message subject</param>
            <param name="tags">List of tag IDs added to the message</param>
            <param name="body">Message body as HTML string</param>
            <param name="attachments">List of message attachments</param>
            <param name="calendarIcs">Calendar event in the iCal format for sending</param>
            <returns>Saved message ID</returns>
            <short>Save a message as a draft</short> 
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SaveTemplate(System.Int32,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String,System.Collections.Generic.List{System.Int32},System.String,System.Collections.Generic.List{ASC.Mail.Data.Contracts.MailAttachmentData},System.String)">
            <summary>
            Saves a template with the ID specified in the request.
            </summary>
            <param name="id">Template ID which will be saved</param>
            <param name="from">Mail address from which a letter will be sent. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="to">List of mail addresses to which a letter will be sent. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="cc">List of "cc" mail addresses. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="bcc">List of "bcc" mail addresses. <![CDATA[Format: Name &lt;name@domain&gt;]]></param>
            <param name="mimeReplyToId">Message ID to which this message replies</param>
            <param name="importance">Important message or not: true - important, false - not important</param>
            <param name="subject">Message subject</param>
            <param name="tags">List of tag IDs added to the message</param>
            <param name="body">Message body as HTML string</param>
            <param name="attachments">List of message attachments</param>
            <param name="calendarIcs">Calendar event in the iCal format for sending</param>
            <returns>Saved template ID</returns>
            <short>Save a message as a template</short> 
            <category>Templates</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.RemoveMessages(System.Collections.Generic.List{System.Int32})">
            <summary>
            Removes messages with the IDs specified in the request.
            </summary>
            <param name="ids">List of message IDs</param>
            <returns>List of removed message IDs</returns>
            <short>Remove messages</short> 
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetMessageTemplate">
            <summary>
            Returns a message template - empty message in the JSON format.
            </summary>
            <returns>Empty message in the JSON format</returns>
            <short>Get a message template</short> 
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.AttachDocument(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Attaches the Teamlab document to the message with the ID specified in the request.
            </summary>
            <param name="id">Message ID</param>
            <param name="fileId">Teamlab document ID</param>
            <param name="version">Teamlab document version</param>
            <param name="needSaveToTemp">Specifies if this message needs to be saved as a template or not</param>
            <returns>Attached document</returns>
            <short>Attach the Teamlab document</short>
            <category>Messages</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.ExportMessageToCrm(System.Int32,System.Collections.Generic.IEnumerable{ASC.Mail.Data.Contracts.CrmContactData})">
            <summary>
            Exports a mail to the CRM relation history for some entities.
            </summary>
            <param name="id_message">ID of any message from the chain</param>
            <param name="crm_contact_ids">List of CRM contact entity IDs in the following format: {entity_id: 0, entity_type: 0}.
            Entity types: 1 - Contact, 2 - Case, 3 - Opportunity
            </param>
            <short>Export a message to CRM</short>
            <category>Messages</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.GetTags">
            <summary>
            Returns a list of all the tags used in the Mail module.
            </summary>
            <returns>List of tags represented as JSON</returns>
            <short>Get tags</short> 
            <category>Tags</category>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.CreateTag(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new tag with the parameters specified in  the request.
            </summary>
            <param name="name">Tag name</param>
            <param name="style">Style identificator: a postfix  which represents the css style (tag color)</param>
            <param name="addresses">List of addresses which tag is associated with</param>
            <returns>Mail tag</returns>
            <short>Create a tag</short> 
            <category>Tags</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.UpdateTag(System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates a tag with the ID specified in the request.
            </summary>
            <param name="id">Tag ID</param>
            <param name="name">New tag name</param>
            <param name="style">New style identificator: a postfix  which represents the css style (tag color)</param>
            <param name="addresses">New list of addresses which tag is associated with</param>
            <returns>Updated mail tag</returns>
            <short>Update a tag</short> 
            <category>Tags</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.DeleteTag(System.Int32)">
            <summary>
            Deletes a tag with the ID specified in the request from TLMail.
            </summary>
            <param name="id">Tag ID</param>
            <returns>Deleted mail tag</returns>
            <short>Delete a tag</short> 
            <category>Tags</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.SetTag(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Adds a tag with the ID specified in the request to the messages.
            </summary>
            <param name="id">Tag ID</param>
            <param name="messages">List of message IDs</param>
            <returns>Added mail tag</returns>
            <short>Set a tag to the messages</short> 
            <category>Tags</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
        <member name="M:ASC.Api.Mail.MailApi.UnsetTag(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Removes a tag with the ID specified in the request from the messages.
            </summary>
            <param name="id">Tag ID</param>
            <param name="messages">List of message IDs</param>
            <returns>Removed mail tag</returns>
            <short>Remove a tag from the messages</short> 
            <category>Tags</category>
            <exception cref="T:System.ArgumentException">Exception happens when the parameters are invalid. Text description contains parameter name and text description.</exception>
        </member>
    </members>
</doc>
