<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASC.Api.Employee</name>
    </assembly>
    <members>
        <member name="T:ASC.Api.Employee.EmployeeApi">
            <summary>
            Access to user profiles
            </summary>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetMe">
            <summary>
            Returns the detailed information about the current user profile.
            </summary>
            <short>
            Get my profile
            </short>
            <category>Profiles</category>
            <returns>Detailed information about my profile</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetAll">
            <summary>
            Returns a list of profiles for all the portal users.
            </summary>
            <short>
            Get all profiles
            </short>
            <category>Profiles</category>
            <returns>List of profiles</returns>
             <remarks>This method returns the partial profiles. Use more specific method to get full profiles.</remarks>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetByStatus(ASC.Core.Users.EmployeeStatus)">
            <summary>
            Returns a list of profiles filtered by user status.
            </summary>
            <short>
            Get profiles by status
            </short>
            <category>User status</category>
            <param name="status">User status</param>
            <returns>List of profiles</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetById(System.String)">
            <summary>
            Returns the detailed information about a profile of the user with the name specified in the request.
            </summary>
            <short>
            Get a profile by user name
            </short>
            <category>Profiles</category>
            <param name="username">User name</param>
            <returns>User profile</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetByEmail(System.String)">
            <summary>
            Returns the detailed information about a profile of the user with the email specified in the request.
            </summary>
            <short>
            Get a profile by user email
            </short>
            <category>Profiles</category>
            <param name="email">User email</param>
            <returns>User profile</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetSearch(System.String)">
            <summary>
            Returns a list of profiles for all the portal users matching the search query.
            </summary>
            <short>
            Search user profiles
            </short>
            <category>Search</category>
            <param name="query">Search query</param>
            <returns>List of user profiles</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetPeopleSearch(System.String)">
            <summary>
            Returns a list of users matching the search query.
            </summary>
            <short>
            Search users
            </short>
            <category>Search</category>
            <param name="query">Search query</param>
            <returns>List of users</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetAdvanced(ASC.Core.Users.EmployeeStatus,System.String)">
            <summary>
            Returns a list of users matching the status filter and search query.
            </summary>
            <short>
            Search users by status filter
            </short>
            <category>Search</category>
            <param name="status">User status</param>
            <param name="query">Search query</param>
            <returns>List of users</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.SaveUsers(System.String,System.Boolean)">
            <summary>
            Imports the new portal users with the first name, last name and email address.
            </summary>
            <short>
            Import users
            </short>
            <category>Profiles</category>
            <param name="userList">List of users</param>
            <param name="importUsersAsCollaborators" optional="true">Imports users as guests (true) or not (false)</param>
            <returns>Newly added users</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetStatus">
            <summary>
            Returns a status of the current user.
            </summary>
            <short>
            Get a user status
            </short>
            <category>User status</category>
            <returns>Current user information</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetFullByFilter(System.Nullable{ASC.Core.Users.EmployeeStatus},System.Nullable{System.Guid},System.Nullable{ASC.Core.Users.EmployeeActivationStatus},System.Nullable{ASC.Core.Users.EmployeeType},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of users with full information about them matching the parameters specified in the request.
            </summary>
            <short>
            Search users and their information by extended filter
            </short>
            <category>Search</category>
            <param optional="true" name="employeeStatus">User status</param>
            <param optional="true" name="groupId">Group ID</param>
            <param optional="true" name="activationStatus">Activation status</param>
            <param optional="true" name="employeeType">User type</param>
             <param optional="true" name="isAdministrator">Specifies if the user is administrator or not</param>
            <returns>
            List of users with their information
            </returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetSimpleByFilter(System.Nullable{ASC.Core.Users.EmployeeStatus},System.Nullable{System.Guid},System.Nullable{ASC.Core.Users.EmployeeActivationStatus},System.Nullable{ASC.Core.Users.EmployeeType},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of users matching the parameters specified in the request.
            </summary>
            <short>
            Search users by extended filter
            </short>
            <category>Search</category>
            <param optional="true" name="employeeStatus">User status</param>
            <param optional="true" name="groupId">Group ID</param>
            <param optional="true" name="activationStatus">Activation status</param>
            <param optional="true" name="employeeType">User type</param>
             <param optional="true" name="isAdministrator">Specifies if the user is administrator or not</param>
            <returns>
            List of users
            </returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.AddMember(System.Boolean,System.String,System.String,System.String,System.Guid[],System.String,System.String,System.String,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.String,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact},System.String,System.String,System.String)">
            <summary>
            Adds a new portal user with the first name, last name, email address and several optional parameters specified in the request.
            </summary>
            <short>
            Add a user
            </short>
            <category>Profiles</category>
            <param name="isVisitor">Specifies if this is a guest (true) or user (false)</param>
            <param name="email">User email</param>
            <param name="firstname">User first name</param>
            <param name="lastname">User last name</param>
            <param name="department" optional="true">User department</param>
            <param name="title" optional="true">User title</param>
            <param name="location" optional="true">User location</param>
            <param name="sex" optional="true">User sex (male or female)</param>
            <param name="birthday" optional="true">User birthday</param>
            <param name="worksfrom" optional="true">User registration date. If it is not specified, then the current date will be set</param>
            <param name="comment" optional="true">User comments</param>
            <param name="contacts">Contact list</param>
            <param name="files">Avatar photo URL</param>
            <param name="password" optional="true">User password</param>
            <param name="passwordHash" visible="false">Password hash</param>
            <returns>Newly added user</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.AddMemberAsActivated(System.Boolean,System.String,System.String,System.String,System.Guid[],System.String,System.String,System.String,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.String,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact},System.String,System.String)">
            <summary>
            Adds a new activated portal user with the first name, last name, email address and several optional parameters specified in the request.
            </summary>
            <short>
            Add an activated user
            </short>
            <category>Profiles</category>
            <param name="isVisitor">Specifies if this is a guest (true) or user (false)</param>
            <param name="email">User email</param>
            <param name="firstname">User first name</param>
            <param name="lastname">User last name</param>
            <param name="department" optional="true">User department</param>
            <param name="title" optional="true">User title</param>
            <param name="location" optional="true">User location</param>
            <param name="sex" optional="true">User sex (male or female)</param>
            <param name="birthday" optional="true">User birthday</param>
            <param name="worksfrom" optional="true">User registration date. If it is not specified, then the current date will be set</param>
            <param name="comment" optional="true">User comments</param>
            <param name="contacts">Contact list</param>
            <param name="files">Avatar photo URL</param>
            <param name="password">User password</param>
            <returns>Newly added user</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateMember(System.Boolean,System.String,System.String,System.String,System.String,System.Guid[],System.String,System.String,System.String,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact},System.String,System.Nullable{System.Boolean})">
            <summary>
            Updates the data for the selected portal user with the first name, last name, email address and/or optional parameters specified in the request.
            </summary>
            <short>
            Update a user
            </short>
            <category>Profiles</category>
            <param name="isVisitor">Specifies if this is a guest (true) or user (false)</param>
            <param name="userid">User ID</param>
            <param name="firstname">New user first name</param>
            <param name="lastname">New user last name</param>
            <param name="comment" optional="true">New user comments</param>
            <param name="department" optional="true">New user department</param>
            <param name="title" optional="true">New user title</param>
            <param name="location" optional="true">New user location</param>
            <param name="sex" optional="true">New user sex (male or female)</param>
            <param name="birthday" optional="true">New user birthday</param>
            <param name="worksfrom" optional="true">New user registration date. If it is not specified, then the current date will be set</param>
            <param name="contacts">New contact list</param>
            <param name="files">New avatar photo URL</param>
            <param name="disable">Disable user</param>
            <returns>Updated user</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.DeleteMember(System.String)">
            <summary>
            Deletes a user with the ID specified in the request from the portal.
            </summary>
            <short>
            Delete a user
            </short>
            <category>Profiles</category>
            <param name="userid">User ID</param>
            <returns>Deleted user</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateMemberContacts(System.String,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact})">
            <summary>
            Updates the contact information of the user with the ID specified in the request merging new data with the present portal data.
            </summary>
            <short>
            Update user contacts
            </short>
            <category>Contacts</category>
            <param name="userid">User ID</param>
            <param name="contacts">List of new contacts</param>
            <returns>Updated user profile</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.SetMemberContacts(System.String,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact})">
            <summary>
            Sets the contacts of the user with the ID specified in the request replacing the present portal data with the new data.
            </summary>
            <short>
            Set user contacts
            </short>
            <category>Contacts</category>
            <param name="userid">User ID</param>
            <param name="contacts">List of new contacts</param>
            <returns>Updated user profile</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.DeleteMemberContacts(System.String,System.Collections.Generic.IEnumerable{ASC.Api.Employee.Contact})">
            <summary>
            Deletes the contacts of the user with the ID specified in the request from the portal.
            </summary>
            <short>
            Delete user contacts
            </short>
            <category>Contacts</category>
            <param name="userid">User ID</param>
            <param name="contacts">List of contacts</param>
            <returns>Updated user profile</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetMemberPhoto(System.String)">
            <summary>
            Returns a photo of the user with the ID specified in the request.
            </summary>
            <short>
            Get a user photo
            </short>
            <category>Photos</category>
            <param name="userid">User ID</param>
            <returns>User photo</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateMemberPhoto(System.String,System.String)">
            <summary>
            Updates a photo of the user with the ID specified in the request.
            </summary>
            <short>
            Update a user photo
            </short>
            <category>Photos</category>
            <param name="userid">User ID</param>
            <param name="files">New avatar photo URL</param>
            <returns>Updated user photo</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.DeleteMemberPhoto(System.String)">
            <summary>
            Deletes a photo of the user with the ID specified in the request.
            </summary>
            <short>
            Delete a user photo
            </short>
            <category>Photos</category>
            <param name="userid">User ID</param>
            <returns>Deleted user photo</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.CreateMemberPhotoThumbnails(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a photo thumbnail by coordinates of the original image specified in the request.
            </summary>
            <short>
            Create a photo thumbnail
            </short>
            <category>Photos</category>
            <param name="userid">User ID</param>
            <param name="tmpFile">Path to the temporary file</param>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="width">Thumbnail width</param>
            <param name="height">Thumbnail height</param>
            <returns>Thumbnail</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.SendUserPassword(System.String)">
            <summary>
            Reminds a password to the user using the email specified in the request.
            </summary>
            <short>
            Remind a user password
            </short>
            <category>Password</category>
            <param name="email">User email</param>     
            <returns>Email with the password</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.ChangeUserPassword(System.Guid,System.String,System.String)">
            <summary>
            Sets a new password and email to the user with the ID specified in the request.
            </summary>
            <short>Change a user password</short>
            <category>Password</category>
            <param name="userid">User ID</param>
            <param name="password">New password</param>
            <param name="email">New email</param>
            <returns>Detailed user information</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateEmployeeActivationStatus(ASC.Core.Users.EmployeeActivationStatus,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets the required activation status to the list of users with the IDs specified in the request.
            </summary>
            <short>
            Set an activation status
            </short>
            <category>Activation status</category>
            <param name="userIds">List of user IDs</param>
            <param name="activationstatus">Required activation status</param>
            <returns>List of users</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateUserType(ASC.Core.Users.EmployeeType,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Changes a type (user or visitor) for the users with the IDs specified in the request.
            </summary>
            <short>
            Change a user type
            </short>
            <category>User type</category>
            <param name="type">New user type</param>
            <param name="userIds">List of user IDs</param>
            <returns>List of users</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UpdateUserStatus(ASC.Core.Users.EmployeeStatus,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Changes a status for the users with the IDs specified in the request.
            </summary>
            <short>
            Change a user status
            </short>
            <category>User status</category>
            <param name="status">New user status</param>
            <param name="userIds">List of user IDs</param>
            <returns>List of users</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.ResendUserInvites(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Resends emails to the users who have not activated their emails.
            </summary>
            <short>
            Resend an activation email
            </short>
            <category>Profiles</category>
            <param name="userIds">List of user IDs</param>
            <returns>List of users</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.RemoveUsers(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Deletes a list of the users with the IDs specified in the request.
            </summary>
            <short>
            Delete users
            </short>
            <category>Profiles</category>
            <param name="userIds">List of user IDs</param>
            <returns>List of users</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.SendInstructionsToDelete">
            <summary>
            Sends instructions for deleting a user profile.
            </summary>
            <short>
            Send the delete instructions
            </short>
            <category>Profiles</category>
            <returns>Information message</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.RemindAboutBirthday(System.Guid,System.Boolean)">
            <summary>
            Subscribes to or unsubscribes from the birthday of a user with the ID specified.
            </summary>
            <short>Birthday subscription</short>
            <param name="userid">User ID</param>
            <param name="onRemind">Defines if the user will be notified about other user's birthday or not</param>
            <returns>Bool value: true means that the user will get the notification</returns>
            <category>Birthday</category>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.LinkAccount(System.String)">
             <summary>
             Links a third-party account specified in the request to the user profile.
             </summary>
             <short>
             Link a third-pary account
             </short>
             <category>Third-party accounts</category>
             <param name="serializedProfile">Third-party profile in the serialized format</param>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.UnlinkAccount(System.String)">
             <summary>
             Unlinks a third-party account specified in the request from the user profile.
             </summary>
             <short>
             Unlink a third-pary account
             </short>
             <category>Third-party accounts</category>
             <param name="provider">Provider name</param>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetReassignProgress(System.Guid)">
            <summary>
            Returns the progress of the started reassigning process for the user with the ID specified in the request.
            </summary>
            <short>Get the reassigning progress</short>
            <param name="userId">User ID whose data is reassigned</param>
            <category>Reassign user data</category>
            <returns>Reassigning progress</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.TerminateReassign(System.Guid)">
            <summary>
            Terminates the reassigning process for the user with the ID specified in the request.
            </summary>
            <short>Terminate the reassigning process</short>
            <param name="userId">User ID whose data is reassigned</param>
            <category>Reassign user data</category>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.StartReassign(System.Guid,System.Guid,System.Boolean)">
            <summary>
            Starts the reassigning process for the user with the ID specified in the request.
            </summary>
            <short>Start the reassigning process</short>
            <param name="fromUserId">User ID whose data will be reassigned to another user</param>
            <param name="toUserId">User ID to whom all the data will be reassigned</param>
            <param name="deleteProfile">Deletes a profile when reassignment will be finished or not</param>
            <category>Reassign user data</category>
            <returns>Reassigning progress</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.GetRemoveProgress(System.Guid)">
            <summary>
            Returns the progress of the started removing process for the user with the ID specified in the request.
            </summary>
            <short>Get the removing progress</short>
            <param name="userId">User ID</param>
            <category>Remove user data</category>
            <returns>Removing progress</returns>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.TerminateRemove(System.Guid)">
            <summary>
            Terminates the removing process for the user with the ID specified in the request.
            </summary>
            <short>Terminate the removing process</short>
            <param name="userId">User ID</param>
            <category>Remove user data</category>
        </member>
        <member name="M:ASC.Api.Employee.EmployeeApi.StartRemove(System.Guid)">
            <summary>
            Starts the removing process for the user with the ID specified in the request.
            </summary>
            <short>Start the removing process</short>
            <param name="userId">User ID</param>
            <category>Remove user data</category>
            <returns>Removing progress</returns>
        </member>
        <member name="T:ASC.Api.Employee.GroupsApi">
            <summary>
             Access to the groups.
            </summary>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.GetAll">
            <summary>
            Returns the general information about all the groups, such as group ID and group manager.
            </summary>
            <short>
            Get all groups
            </short>
            <returns>List of groups</returns>
             <remarks>
             This method returns partial group information.
             </remarks>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.GetTagsByName(System.String)">
            <summary>
            Returns a list of all the groups by the group name specified in the request.
            </summary>
            <short>
            Get groups by a group name
            </short>
            <param name="groupName">Group name</param>
            <returns>List of groups</returns>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.GetById(System.Guid)">
            <summary>
            Returns the detailed information about the selected group: group name, category, description, manager, members and parent group if it exists.
            </summary>
            <short>
            Get a group
            </short>
            <param name="groupid">Group ID</param>
            <returns>Group</returns>
             <remarks>
             That method returns full group information.
             </remarks>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.GetByUserId(System.Guid)">
            <summary>
            Returns a list of groups for the user with the ID specified in the request.
            </summary>
            <short>
            Get user groups
            </short>
            <param name="userid">User ID</param>
            <returns>Group</returns>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.AddGroup(System.Guid,System.String,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Adds a new group with the group manager, name and members specified in the request.
            </summary>
            <short>
            Add a new group
            </short>
            <param name="groupManager">Group manager</param>
            <param name="groupName">Group name</param>
            <param name="members">List of group members</param>
            <returns>Newly created group</returns>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.UpdateGroup(System.Guid,System.Guid,System.String,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Updates the existing group changing the group manager, name and/or members.
            </summary>
            <short>
            Update a group
            </short>
            <param name="groupid">Group ID</param>
            <param name="groupManager">New group manager</param>
            <param name="groupName">New group name</param>
            <param name="members">New list of group members</param>
            <returns>Updated group</returns>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.DeleteGroup(System.Guid)">
            <summary>
            Deletes a group with the ID specified in the request from the list of groups on the portal.
            </summary>
            <short>
            Delete a group
            </short>
            <param name="groupid">Group ID</param>
            <returns>Group</returns>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.TransferMembersTo(System.Guid,System.Guid)">
            <summary>
            Moves all the members from the selected group to another one specified in the request.
            </summary>
            <short>
            Move group members
            </short>
            <param name="groupid">Group ID to move from</param>
            <param name="newgroupid">Group ID to move to</param>
            <returns>New group information</returns>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.SetMembersTo(System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Manages the group members deleting the current members and setting new ones specified in the request instead.
            </summary>
            <short>
            Set group members
            </short>
            <param name="groupid">Group ID</param>
            <param name="members">List of new members</param>
            <returns>Group information</returns>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.AddMembersTo(System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Manages the group members keeping the current members and adding new ones specified in the request instead.
            </summary>
            <short>
            Add group members
            </short>
            <param name="groupid">Group ID</param>
            <param name="members">List of new members</param>
            <returns>Group information</returns>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.SetManager(System.Guid,System.Guid)">
            <summary>
            Sets a user with the ID specified in the request as a manager.
            </summary>
            <short>
            Set a group manager
            </short>
            <param name="groupid">Group ID</param>
            <param name="userid">User ID</param>
            <returns>Group information</returns>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.Employee.GroupsApi.RemoveMembersFrom(System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Removes the group members specified in the request from the selected group.
            </summary>
            <short>
            Remove group members
            </short>
            <param name="groupid">Group ID</param>
            <param name="members">List of members</param>
            <returns>Group information</returns>
        </member>
    </members>
</doc>
