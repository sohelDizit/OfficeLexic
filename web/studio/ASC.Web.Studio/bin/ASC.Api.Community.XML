<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASC.Api.Community</name>
    </assembly>
    <members>
        <member name="T:ASC.Api.Community.CommunityApi">
            <summary>
            Provides access to the community data api.
            </summary>
        </member>
        <member name="P:ASC.Api.Community.CommunityApi.Name">
            <summary>
             Starting entry point name.
            </summary>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.#ctor(ASC.Api.Impl.ApiContext)">
            <summary>
             Constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetPosts">
            <summary>
             Returns a list of all the posts from the portal blogs with the post titles, dates of creation and update, post texts, authors.
            </summary>
            <short>Get posts</short>
            <returns>List of all posts</returns>
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.CreatePost(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a blog post with the specified title, content, tags and subscription to comments defined in the request body.
            </summary>
            <short>Create a post</short>
            <param name="title">Post title</param>
            <param name="content">Post text</param>
            <param name="tags">List of tags separated with comma</param>
            <param name="subscribeComments">Subscribes to the post comments</param>
            <returns>Newly created post</returns>
            <example>
            <![CDATA[Sending data in application/json:
            
            {
                 title:"My post",
                 content:"Post content",
                 tags:"Me,Post,News",
                 subscribeComments: "true"
            }
            
            Sending data in application/x-www-form-urlencoded
            title="My post"&content="Post content"&tags="Me,Post,News"&subscribeComments="true"]]>
            </example>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdatePost(System.Guid,System.String,System.String,System.String)">
            <summary>
            Updates the selected post changing the post title, content or/and tags specified in the request.
            </summary>
            <short>Update a post</short>
            <param name="postid">Post ID</param>
            <param name="title">New title</param>
            <param name="content">New post text</param>
            <param name="tags">New list of tags separated with comma</param>
            <returns>Updated post</returns>
            <example>
            <![CDATA[
            Sending data in application/json:
            {
                 title:"My post",
                 content:"Post content",
                 tags:"Me,Post,News"
            }
            
            Sending data in application/x-www-form-urlencoded
            title="My post"&content="Post content"&tags="Me,Post,News"
            ]]>
            
            </example>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeletePost(System.Guid)">
            <summary>
            Deletes a post with the ID specified in the request from blogs.
            </summary>
            <short>Delete a post</short>
            <param name="postid">Post ID</param>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetMyPosts">
            <summary>
            Returns a list of all the blog posts for the current user with the post titles, dates of creation and update, post texts, authors.
            </summary>
            <category>Blogs</category>
            <short>Get my posts</short>
            <returns>List of my posts</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetSearchPosts(System.String)">
            <summary>
            Returns a list of blog posts matching the search query specified in the request with the post titles, dates of creation and update, post texts, authors.
            </summary>
            <category>Blogs</category>
            <short>
            Search posts
            </short>
             <param name="query">Search query</param>
            <returns>List of found posts</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetUserPosts(System.String)">
            <summary>
            Returns a list of blog posts for the specified user with the post titles, dates of creation and update and post texts.
            </summary>
            <short>Get user posts</short>
            <category>Blogs</category>
            <param name="username" remark="You can retrieve the user name through the 'people' api">User name</param>
            <returns>List of user posts</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetPostsByTag(System.String)">
            <summary>
            Returns a list of blog posts containing the tag specified in the request with the post titles, dates of creation and update, post texts, authors.
            </summary>
            <short>Get posts by tag</short>
            <category>Blogs</category>
            <param name="tag">Tag name</param>
            <returns>List of posts with the specified tag name</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetTags">
            <summary>
            Returns a list of all the tags used with blog posts with the number showing the tag usage.
            </summary>
             <category>Blogs</category>
             <short>Get tags</short>
            <returns>List of tags</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetPost(System.Guid)">
            <summary>
             Returns the detailed information on the blog post with the ID specified in the request.
            </summary>
            <short>Get a post</short>
            <category>Blogs</category>
            <param name="postid">Post ID</param>
            <returns>Post information</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetComments(System.Guid)">
            <summary>
             Returns a list of all the comments on the blog post with the ID specified in the request.
            </summary>
            <category>Blogs</category>
             <short>Get post comments</short>
            <param name="postid">Post ID (GUID)</param>
            <returns>List of post comments</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddComment(System.Guid,System.String,System.Guid)">
            <summary>
             Adds a comment to the post with the ID specified in the request. The parent comment ID can be also specified if needed.
            </summary>
             <short>Add a post comment</short>
             <category>Blogs</category>
            <param name="postid">Post ID</param>
            <param name="content">Comment text</param>
            <param name="parentId">Parent comment ID</param>
            <returns>List of post comments</returns>
             <example>
             <![CDATA[
             Sending data in application/json:
             
             {
                 content:"My comment",
                 parentId:"9924256A-739C-462b-AF15-E652A3B1B6EB"
             }
             
             Sending data in application/x-www-form-urlencoded
             content="My comment"&parentId="9924256A-739C-462b-AF15-E652A3B1B6EB"
             ]]>
             </example>
             <remarks>
             Send parentId=00000000-0000-0000-0000-000000000000 or don't send it at all if you want your comment to be on the root level.
             </remarks>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetBlogCommentPreview(System.String,System.String)">
            <summary>
            Returns a comment preview with the content specified in the request.
            </summary>
            <short>Get a comment preview</short>
            <section>Comments</section>
            <param name="commentid">Comment ID</param>
            <param name="htmltext">Comment text in the HTML format</param>
            <returns>Comment information</returns>
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.RemoveBlogComment(System.String)">
            <summary>
            Removes a comment with the ID specified in the request.
            </summary>
            <short>Remove a comment</short>
            <section>Comments</section>
            <param name="commentid">Comment ID</param>
            <returns>Comment ID</returns>
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddBlogComment(System.String,System.String,System.String)">
            <summary>
            Adds a blog comment with the comment text specified in the request. The parent comment ID can be also specified if needed.
            </summary>
            <short>Add a blog comment</short>
            <section>Comments</section>
            <param name="parentcommentid">Parent comment ID</param>
            <param name="entityid">Entity ID</param>
            <param name="content">Comment text</param>
            <returns>Comment information</returns>
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdateBlogComment(System.String,System.String)">
            <summary>
            Updates a blog comment specified in the request changing its content.
            </summary>
            <short>Update a blog comment</short>
            <section>Comments</section>
            <param name="commentid">Comment ID</param>
            <param name="content">New comment text</param>
            <returns>Updated blog comment</returns>
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetBookmarks">
            <summary>
            Returns a list of all the portal bookmarks with the bookmark titles, dates of creation and update, bookmark texts and authors.
            </summary>
            <short>
            Get bookmarks
            </short>
            <category>Bookmarks</category>
            <returns>List of all bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetMyBookmarks">
            <summary>
            Returns a list of all the bookmarks for the current user with the bookmark titles, dates of creation and update, bookmark texts and author.
            </summary>
            <short>
            Get my bookmarks
            </short>
            <category>Bookmarks</category>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.SearchBookmarks(System.String)">
            <summary>
            Returns a list of bookmarks matching the search query specified in the request with the bookmark titles, dates of creation and update, bookmark descriptions and author.
            </summary>
            <short>
            Search bookmarks
            </short>
            <category>Bookmarks</category>
             <param name="query">Search query</param>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetFavsBookmarks">
            <summary>
            Returns a list of favorite bookmarks for the current user with the bookmark titles, dates of creation and update, bookmark texts and author.
            </summary>
            <short>
            Get my favorite bookmarks
            </short>
            <category>Bookmarks</category>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetBookmarksTags">
            <summary>
            Returns a list of all the bookmark tags with a number specifying the tag usage.
            </summary>
            <short>
            Get all tags
            </short>
            <category>Bookmarks</category>
            <returns>List of tags</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetBookmarksByTag(System.String)">
            <summary>
            Returns a list of all the bookmarks marked by the tag specified in the request with the bookmark titles, dates of creation and update, bookmark texts and authors.
            </summary>
            <short>
            Get a bookmark by a tag
            </short>
            <category>Bookmarks</category>
            <param name="tag">Tag name</param>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetRecentBookmarks">
            <summary>
            Returns a list of recently added bookmarks with the bookmark titles, dates of creation and update, bookmark texts and authors.
            </summary>
            <short>
            Get recent bookmarks
            </short>
            <category>Bookmarks</category>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetTopDayBookmarks">
            <summary>
            Returns a list of the bookmarks most popular for the current date with the bookmark titles, dates of creation and update, bookmark texts and authors.
            </summary>
            <short>
            Get top of day bookmarks
            </short>
            <category>Bookmarks</category>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetTopMonthBookmarks">
            <summary>
            Returns a list of the bookmarks most popular for the current month with the bookmark titles, dates of creation and update, bookmark texts and authors.
            </summary>
            <short>
            Get top of month bookmarks
            </short>
            <category>Bookmarks</category>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetTopWeekBookmarks">
            <summary>
            Returns a list of the bookmarks most popular for the current week with the bookmark titles, dates of creation and update, bookmark texts and authors.
            </summary>
            <short>
            Get top of week bookmarks
            </short>
            <category>Bookmarks</category>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetTopYearBookmarks">
            <summary>
            Returns a list of the bookmarks most popular for the current year with the bookmark titles, dates of creation and update, bookmark texts and authors.
            </summary>
            <short>
            Get top of year bookmarks
            </short>
            <category>Bookmarks</category>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetBookmarkComments(System.Int64)">
            <summary>
             Returns a list of all the comments on the bookmark with the ID specified in the request.
            </summary>
            <short>
             Get bookmark comments
            </short>
            <category>Bookmarks</category>
            <param name="id">Bookmark ID</param>
            <returns>List of bookmark comments</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddBookmarkComment(System.Int64,System.String,System.Guid)">
            <summary>
             Adds a comment to the bookmark with the ID specified in the request. The parent bookmark ID can be also specified if needed.
            </summary>
            <short>
             Add a bookmark comment by bookmark ID
            </short>
            <param name="id">Bookmark ID</param>
            <param name="content">Comment text</param>
            <param name="parentId">Parent comment ID</param>
            <returns>List of bookmark comments</returns>
             <example>
             <![CDATA[
             Sending data in application/json:
             
             {
                 content:"My comment",
                 parentId:"9924256A-739C-462b-AF15-E652A3B1B6EB"
             }
             
             Sending data in application/x-www-form-urlencoded
             content="My comment"&parentId="9924256A-739C-462b-AF15-E652A3B1B6EB"
             ]]>
             </example>
             <remarks>
             Send parentId=00000000-0000-0000-0000-000000000000 or doesn't send it at all if you want your comment to be on the root level.
             </remarks>
             <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetBookmarkById(System.Int64)">
            <summary>
             Returns the detailed information on the bookmark with the ID specified in the request.
            </summary>
            <short>
             Get a bookmark by ID
            </short>
            <param name="id">Bookmark ID</param>
            <returns>Bookmark information</returns>
            <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddBookmark(System.String,System.String,System.String,System.String)">
            <summary>
             Adds a bookmark with the title, description and tags specified in the request.
            </summary>
            <short>
             Add a bookmark
            </short>
            <param name="url">Absolute URL to the bookmark page</param>
            <param name="title">Bookmark title</param>
            <param name="description">Bookmark description</param>
            <param name="tags">Bookmark tags separated by semicolon</param>
            <returns>Newly added bookmark</returns>
             <example>
             <![CDATA[
             Sending data in application/json:
             
             {
                 url:"https://www.teamlab.com",
                 title: "TeamLab",
                 description: "best site i've ever seen",
                 tags: "project management, collaboration"
             }
             
             Sending data in application/x-www-form-urlencoded
             url="https://www.teamlab.com"&title="TeamLab"&description="best site i've ever seen"&tags="project management, collaboration"
             ]]>
             </example>
             <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetBookmarkCommentPreview(System.String,System.String)">
            <summary>
            Returns a comment preview with the content specified in the request.
            </summary>
            <short>Get a comment preview</short>
            <section>Comments</section>
            <param name="commentid">Comment ID</param>
            <param name="htmltext">Comment content</param>
            <returns>Comment information</returns>
            <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.RemoveBookmarkComment(System.String)">
             <summary>
            Removes a comment with the ID specified in the request.
             </summary>
             <short>Remove a comment</short>
             <section>Comments</section>
             <param name="commentid">Comment ID</param>
             <returns>Comment ID</returns>
             <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddBookmarkComment(System.String,System.Int64,System.String)">
            <summary>
             Adds a comment to the entity with the ID specified in the request. The parent bookmark ID can be also specified if needed.
            </summary>
            <short>
             Add a bookmark comment by entity ID
            </short>
            <param name="parentcommentid">Parent comment ID</param>
            <param name="entityid">Entity ID</param>
            <param name="content">Comment text</param>
            <returns>List of bookmark comments</returns>
             <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdateBookmarkComment(System.String,System.String)">
            <summary>
            Updates the selected bookmark comment with the content specified in the request.
            </summary>
            <short>Update a bookmark comment</short>
            <param name="commentid">Comment ID</param>
            <param name="content">New comment text</param>
            <returns>Updated bookmark</returns>
            <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.RemoveBookmarkFromFavourite(System.Int64)">
            <summary>
            Removes a bookmark from favorites. If after removing user bookmark, its rating is 0, the bookmark will be removed completely.
            </summary>
            <short>Remove a bookmark from favorites</short>
            <param name="id">Bookmark ID</param>
            <returns>Bookmark</returns>
            <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.RemoveBookmark(System.Int64)">
            <summary>
            Removes a bookmark with the ID specified in the request.
            </summary>
            <short>Remove a bookmark</short>
            <param name="id">Bookmark ID</param>
            <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetEvents">
            <summary>
            Returns a list of all the portal events with the event titles, dates of creation and update, event texts and authors.
            </summary>
            <short>
            Get events
            </short>
            <returns>List of events</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.CreateEvent(System.String,System.String,ASC.Web.Community.News.Code.FeedType)">
            <summary>
            Creates a new event with the parameters (title, content, type) specified in the request.
            </summary>
            <short>
            Create an event
            </short>        
             <param name="title">Event title</param>
             <param name="content">Event content</param>
             <param name="type">Event type (News|Order|Advert|Poll)</param>
            <returns>Newly created event</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdateEvent(System.Int32,System.String,System.String,ASC.Web.Community.News.Code.FeedType)">
            <summary>
            Updates the selected event changing the event title, content or/and event type specified in the request.
            </summary>
            <short>
            Update an event
            </short>
             <param name="feedid">Feed ID</param>
             <param name="title">New event title</param>
             <param name="content">New event content</param>
             <param name="type">New event type (News|Order|Advert|Poll)</param>
            <returns>List of events</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeleteEvent(System.Int32)">
            <summary>
            Deletes an event with the ID specified in the request.
            </summary>
            <short>Delete an event</short>
            <param name="feedid">Feed ID</param>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetMyEvents">
            <summary>
            Returns a list of all the events for the current user with the event titles, dates of creation and update, event texts and author.
            </summary>
            <short>
            Get my events
            </short>
            <returns>List of events</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.SearchEvents(System.String)">
            <summary>
            Returns a list of events matching the search query specified in the request with the event titles, dates of creation and update, event types and authors.
            </summary>
            <short>
            Search events
            </short>
             <param name="query">Search query</param>
            <returns>List of events</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetEvent(System.Int32)">
            <summary>
            Returns the detailed information about an event with the ID specified in the request.
            </summary>
            <short>
            Get an event
            </short>
            <param name="feedid">Event ID</param>
            <returns>Event information</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetEventComments(System.Int32)">
            <summary>
            Returns the detailed information about the comments on the event with the ID specified in the request.
            </summary>
            <short>
            Get the event comments
            </short>
            <param name="feedid">Event ID</param>
            <returns>List of comments</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddEventComments(System.Int32,System.String,System.Int64)">
            <summary>
            Adds a comment to the event with the ID specified in the request. The parent event ID can be also specified if needed.
            </summary>
            <short>
            Add an event comment by feed ID
            </short>
            <param name="feedid">Feed ID</param>
            <param name="content">Comment text</param>
            <param name="parentId">Comment parent ID</param>
            <returns>Comment</returns>
             <example>
             <![CDATA[
             Sending data in application/json:
             
             {
                 content:"My comment",
                 parentId:"9924256A-739C-462b-AF15-E652A3B1B6EB"
             }
             
             Sending data in application/x-www-form-urlencoded
             content="My comment"&parentId="9924256A-739C-462b-AF15-E652A3B1B6EB"
             ]]>
             </example>
             <remarks>
             Send parentId=0 or doesn't send it at all if you want your comment to be on the root level.
             </remarks>
             <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.VoteForEvent(System.Int32,System.Int64[])">
            <summary>
             Sends a vote to a certain option in a poll-type event with the ID specified in the request.
            </summary>
            <short>
             Vote for an event
            </short>
            <param name="feedid">Event ID</param>
            <param name="variants">Options</param>
            <returns>Event</returns>
            <exception cref="T:System.ArgumentException">Thrown if not a Poll</exception>
            <exception cref="T:System.Exception">General error</exception>
             <example>
             <![CDATA[
             Sending data in application/json:
             {
                 variants:[1,2,3],
             }
              Sending data in application/x-www-form-urlencoded
             variants=[1,2,3]
             ]]>
             </example>
             <remarks>
             If an event is not a poll, then you'll get an error.
             </remarks>
             <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.SubscribeOnComments(System.Boolean,System.String)">
            <summary>
             Subscribes to or unsubscribes from the comments of the event with the ID specified in the request.
            </summary>
            <short>
             Comment subscription
            </short>
            <param name="isSubscribe">Subscribes to the event comments or unsubscribes from them</param>
            <param name="feedid">Feed ID</param>
            <returns>Boolean value: true means that the user is subscribed to the event comments</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetEventCommentPreview(System.String,System.String)">
            <summary>
            Returns a comment preview with the content specified in the request.
            </summary>
            <short>Get a comment preview</short>
            <section>Comments</section>
            <param name="commentid">Comment ID</param>
            <param name="htmltext">Comment text in the HTML format</param>
            <returns>Comment information</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.RemoveEventComment(System.String)">
             <summary>
            Removes a comment with the ID specified in the request.
             </summary>
             <short>Remove a comment</short>
             <section>Comments</section>
             <param name="commentid">Comment ID</param>
             <returns>Comment information</returns>
             <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddEventComment(System.String,System.String,System.String)">
            <summary>
            Adds an event comment with the content specified in the request. The parent event ID can be also specified if needed.
            </summary>
            <short>
            Add an event comment by entity ID
            </short>
            <param name="parentcommentid">Comment parent ID</param>
            <param name="entityid">Entity ID</param>
            <param name="content">Comment text</param>
            <returns>Comment information</returns>
             <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdateComment(System.String,System.String)">
            <summary>
            Updates the selected event comment with the content specified in the request.
            </summary>
            <short>
            Update a comment
            </short>
            <param name="commentid">Comment ID</param>
            <param name="content">New comment text</param>
            <returns>Updated comment</returns>
             <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetForums">
            <summary>
            Returns a list of all the portal forums with the topic/thread titles, dates of creation and update, post texts and authors.
            </summary>
            <short>
            Get forums
            </short>
            <returns>List of forums</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetForumsCount">
            <summary>
            Returns a number of all the portal forums.
            </summary>
            <short>
            Count forums
            </short>
            <returns>Number of forums</returns>
            <visible>false</visible>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetThreadTopics(System.Int32)">
            <summary>
            Returns a list of all the thread topics with the topic titles, dates of creation and update, post texts and authors.
            </summary>
            <short>
            Get thread topics
            </short>
            <param name="threadid">Thread ID</param>
            <returns>List of thread topics</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetLastTopics">
            <summary>
            Returns a list of all the recently updated topics in the portal forums with the topic titles, dates of creation and update, post texts and authors.
            </summary>
            <short>
            Get last updated topics
            </short>
            <returns>List of last updated topics</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetTopicPosts(System.Int32)">
            <summary>
            Returns a list of all the posts of the selected forum topic with the dates of creation and update, post texts and authors.
            </summary>
            <short>
            Get topic posts
            </short>
            <param name="topicid">Topic ID</param>
            <returns>List of topic posts</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddThreadToCategory(System.Int32,System.String,System.String,System.String)">
            <summary>
             Adds a thread to the category with the ID specified in the request.
            </summary>
            <short>
             Add a thread to a category
            </short>
             <param name="categoryId">Category ID (-1 for new category)</param>
             <param name="categoryName">Category name</param>
             <param name="threadName">Thread name</param>
             <param name="threadDescription">Thread description</param>
            <returns>Added thread</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddTopic(System.Int32,System.String,System.String,ASC.Forum.TopicType)">
            <summary>
             Adds a new topic to the existing thread with a subject, content and topic type specified in the request.
            </summary>
            <short>
             Add a topic to a thread
            </short>
             <param name="subject">Topic subject</param>
             <param name="threadid">Thread ID</param>
             <param name="content">Topic text</param>
             <param name="topicType">Topic type</param>
            <returns>Added topic</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdateTopic(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
             Updates a topic with the ID specified in the request changing a topic subject, making it sticky or closing it.
            </summary>
            <short>
             Update a topic
            </short>
             <param name="topicid">Topic ID</param>
             <param name="subject">New subject</param>
             <param name="sticky">Makes a topic sticky</param>
             <param name="closed">Closes a topic</param>
            <returns>Updated topic</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddTopicPosts(System.Int32,System.Int32,System.String,System.String)">
            <summary>
             Adds a post to the selected topic with a post subject and content specified in the request.
            </summary>
            <short>
             Add a post to a topic
            </short>
            <param name="topicid">Topic ID</param>
            <param name="parentPostId">Parent post ID</param>
            <param name="subject">Post subject (required)</param>
            <param name="content">Post text</param>
            <returns>New post</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdateTopicPosts(System.Int32,System.Int32,System.String,System.String)">
            <summary>
             Updates a post in the selected topic changing the post subject or/and content specified in the request.
            </summary>
            <short>
             Update a topic post
            </short>
            <param name="topicid">Topic ID</param>
            <param name="postid">Post ID</param>
            <param name="subject">New post subject (required)</param>
            <param name="content">New post text</param>
            <returns>Updated post</returns>    
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.SearchTopics(System.String)">
            <summary>
            Returns a list of topics matching the search query with the topic titles, dates of creation and update, post texts and authors.
            </summary>
            <short>
            Search topics
            </short>
            <param name="query">Search query</param>
            <returns>List of topics</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeletePost(System.Int32)">
            <summary>
             Deletes a post with the ID specified in the request.
            </summary>
            <short>
             Delete a post
            </short>
            <param name="postid">Post ID</param>
            <category>Forums</category>
            <returns>Post</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeleteTopic(System.Int32)">
            <summary>
             Deletes a topic with the ID specified in the request.
            </summary>
            <short>
             Delete a topic
            </short>
            <param name="topicid">Topic ID</param>
            <category>Forums</category>
            <returns>Topic</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeleteThread(System.Int32)">
            <summary>
             Deletes a thread with the ID specified in the request.
            </summary>
            <short>
             Delete a thread
            </short>
            <param name="threadid">Thread ID</param>
            <category>Forums</category>
            <returns>Thread</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeleteThreadCategory(System.Int32)">
            <summary>
             Deletes a category with the ID specified in the request.
            </summary>
            <short>
             Delete a category
            </short>
            <param name="categoryid">Category ID</param>
            <category>Forums</category>
            <returns>Category</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetPreview(System.String,System.String)">
            <summary>
            Returns the preview information about the specified category from the community section.
            </summary>
            <short>Get preview</short>
            <param name="title">Category title</param>
            <param name="content">Category content</param>
            <returns>Preview information</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.CreatePage(System.String,System.String)">
            <summary>
            Creates a new wiki page with the page name and content specified in the request.
            </summary>
            <short>Create a page</short>
            <param name="name">Page name</param>
            <param name="body">Page content</param>
            <returns>Page information</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetPages(System.String)">
            <summary>
            Returns a list of all the pages from wiki or wiki category specified in the request.
            </summary>
            <short>Get pages</short>
            <section>Pages</section>
            <param name="category">Category name</param>
            <returns>Pages</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetPage(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the detailed information about a wiki page with the name and version specified in the request.
            </summary>
            <short>Get a page</short>
            <section>Pages</section>
            <param name="name">Page name</param>
            <param name="version">Page version</param>
            <returns>Page information</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetHistory(System.String)">
            <summary>
            Returns a list of history changes for a wiki page with the name specified in the request.
            </summary>
            <short>Get the page history</short>
            <section>Pages</section>
            <param name="page">Page name</param>
            <returns>List of history changes</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.SearchPages(System.String)">
            <summary>
            Returns a list of wiki pages with the name matching the search query specified in the request.
            </summary>
            <short>Search pages by name</short>
            <section>Pages</section>
            <param name="name">Search query</param>
            <returns>List of pages</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.SearchPagesByContent(System.String)">
            <summary>
            Returns a list of wiki pages with the content matching the search query specified in the request.
            </summary>
            <short>Search pages by content</short>
            <section>Pages</section>
            <param name="content">Search query</param>
            <returns>List of pages</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdatePage(System.String,System.String)">
            <summary>
            Updates a wiki page with the name and content specified in the request.
            </summary>
            <short>Update a page</short>
            <section>Pages</section>
            <param name="name">New page name</param>
            <param name="body">New page content</param>
            <returns>Page information</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeletePage(System.String)">
            <summary>
            Deletes a wiki page with the name specified in the request.
            </summary>
            <short>Delete a page</short>
            <section>Pages</section>
            <param name="name">Page name</param>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.CreateComment(System.String,System.String,System.String)">
            <summary>
            Creates a comment on the selected wiki page with the content specified in the request.
            </summary>
            <short>Create a wiki comment</short>
            <section>Comments</section>
            <param name="page">Page name</param>
            <param name="content">Comment text</param>
            <param name="parentId">Comment parent ID</param>
            <returns>Comment information</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetComments(System.String)">
            <summary>
            Returns a list of all the comments to the wiki page with the name specified in the request.
            </summary>
            <short>Get the page comments</short>
            <section>Comments</section>
            <param name="page">Page name</param>
            <returns>List of comments</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UploadFiles(System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
            <summary>
            Uploads the selected files to the wiki 'Files' section.
            </summary>
            <short>Upload files</short>
            <param name="files">List of files</param>
            <returns>List of files</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetFile(System.String)">
            <summary>
            Returns the detailed information about a file with the name specified in the request from the wiki 'Files' section.
            </summary>
            <short>Get a file</short>
            <section>Files</section>
            <param name="name">File name</param>
            <returns>File information</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeleteFile(System.String)">
            <summary>
            Deletes a file with the name specified in the request from the wiki 'Files' section.
            </summary>
            <short>Delete a file</short>
            <param name="name">File name</param>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetWikiCommentPreview(System.String,System.String)">
            <summary>
            Returns a comment preview with the content specified in the request.
            </summary>
            <short>Get a comment preview</short>
            <section>Comments</section>
            <param name="commentid">Comment ID</param>
            <param name="htmltext">Comment text in the HTML format</param>
            <returns>Comment information</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.RemoveWikiComment(System.String)">
             <summary>
            Removes a comment with the ID specified in the request.
             </summary>
             <short>Remove a comment</short>
             <section>Comments</section>
             <param name="commentid">Comment ID</param>
             <returns>Comment ID</returns>
             <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddWikiComment(System.String,System.String,System.String)">
            <summary>
            Adds a comment to the selected entity with the content specified in the request.
            </summary>
            <short>Add an entity comment</short>
            <section>Comments</section>
            <param name="parentcommentid">Comment parent ID</param>
            <param name="entityid">Entity ID</param>
            <param name="content">Comment text</param>
            <returns>Comment information</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdateWikiComment(System.String,System.String)">
            <summary>
            Updates a comment on the selected wiki page with the content specified in the request.
            </summary>
            <short>Update a comment</short>
            <section>Comments</section>
            <param name="commentid">Comment ID</param>
            <param name="content">New comment text</param>
            <returns>Updated comment</returns>
            <category>Wiki</category>
        </member>
    </members>
</doc>
