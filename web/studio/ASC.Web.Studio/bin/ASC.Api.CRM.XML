<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASC.Api.CRM</name>
    </assembly>
    <members>
        <member name="M:ASC.Api.CRM.CRMApi.GetCurrencyRates">
            <summary>
            Returns a list of all the currency rates.
            </summary>
            <short>Get all currency rates</short> 
            <category>Common</category>
            <returns>
            List of currency rates
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCurrencyRate(System.Int32)">
            <summary>
            Returns a currency rate by ID.
            </summary>
            <param name="id">Currency rate ID</param>
            <short>Get a currency rate by ID</short> 
            <category>Common</category>
            <returns>
            Currency rate
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCurrencyRate(System.String,System.String)">
            <summary>
            Returns a currency rate by currencies.
            </summary>
            <param name="fromCurrency">Original currency</param>
            <param name="toCurrency">Converted currency</param>
            <short>Get a currency rate by currencies</short> 
            <category>Common</category>
            <returns>
            Currency rate
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateCurrencyRate(System.String,System.String,System.Decimal)">
            <summary>
            Creates a new currency rate with the parameters specified in the request.
            </summary>
            <param name="fromCurrency">Original currency</param>
            <param name="toCurrency">Converted currency</param>
            <param name="rate">Currency rate</param>
            <short>Create a currency rate</short>
            <category>Common</category>
            <returns>Currency rate</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCurrencyRate(System.Int32,System.String,System.String,System.Decimal)">
            <summary>
            Updates a currency rate with the parameters specified in the request.
            </summary>
            <param name="id">Currency ID</param>
            <param name="fromCurrency">New original currency</param>
            <param name="toCurrency">New converted currency</param>
            <param name="rate">New currency rate</param>
            <short>Update a currency rate</short>
            <category>Common</category>
            <returns>Updated currency rate</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetCurrencyRates(System.String,System.Collections.Generic.List{ASC.CRM.Core.CurrencyRate})">
            <summary>
            Sets rates to the currency specified in the request.
            </summary>
            <param name="currency" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by api">Currency (abbreviation)</param>
            <param name="rates">List of currency rates</param>
            <short>Set currency rates</short>
            <category>Common</category>
            <returns>Currency information</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddCurrencyRates(System.Collections.Generic.List{ASC.CRM.Core.CurrencyRate})">
            <summary>
            Adds currency rates specified in the request.
            </summary>
            <param name="rates">List of currency rates</param>
            <short>Add currency rates</short>
            <category>Common</category>
            <returns>Currency information</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteCurrencyRate(System.Int32)">
            <summary>
            Deletes a currency rate with the ID specified in the request.
            </summary>
            <param name="id">Currency rate ID</param>
            <short>Delete a currency rate</short>
            <category>Common</category>
            <returns>Currency rate</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceByID(System.Int32)">
            <summary>
             Returns the detailed information about an invoice with the ID specified in the request.
            </summary>
            <param name="invoiceid">Invoice ID</param>
            <short>Get an invoice by ID</short> 
            <category>Invoices</category>
            <returns>Invoice</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceSample">
            <summary>
             Returns the detailed information about an invoice sample.
            </summary>
            <short>Get an invoice sample</short> 
            <category>Invoices</category>
            <returns>Invoice</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceJsonData(System.Int32)">
            <summary>
             Returns the JSON data of an invoice with the ID specified in the request.
            </summary>
            <param name="invoiceid">Invoice ID</param>
            <short>Get the invoice JSON data</short> 
            <category>Invoices</category>
            <returns>Invoice JSON data</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoices(System.Nullable{ASC.CRM.Core.InvoiceStatus},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.String,System.Int32,System.String)">
            <summary>
            Returns a list of invoices matching the parameters specified in the request.
            </summary>
            <param name="status">Invoice status</param>
            <param name="issueDateFrom">Invoice start issue date</param>
            <param name="issueDateTo">Invoice end issue date</param>
            <param name="dueDateFrom">Invoice start due date</param>
            <param name="dueDateTo">Invoice end due date</param>
            <param name="entityType">Invoice entity type</param>
            <param name="entityid">Invoice entity ID</param>
            <param name="currency" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by api">Invoice currency (abbreviation)</param>
            <short>Get invoices</short> 
            <category>Invoices</category>
            <returns>List of invoices</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetEntityInvoices(System.String,System.Int32)">
            <summary>
             Returns a list of all the invoices related to the entity with the ID and type specified in the request.
            </summary>
            <param name="entityType">Invoice entity type</param>
            <param name="entityid">Invoice entity ID</param>
            <short>Get entity invoices</short> 
            <category>Invoices</category>
            <returns>List of invoices</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateInvoiceBatchStatus(System.Int32[],ASC.CRM.Core.InvoiceStatus)">
            <summary>
            Updates a status of invoices with the IDs specified in the request.
            </summary>
            <param name="invoiceids">List of invoice IDs</param>
            <param name="status">New invoice status</param>
            <short>Update an invoice group status</short> 
            <category>Invoices</category>
            <returns>Invoice information</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteInvoice(System.Int32)">
            <summary>
            Deletes an invoice with the ID specified in the request.
            </summary>
            <param name="invoiceid">Invoice ID</param>
            <short>Delete an invoice</short> 
            <category>Invoices</category>
            <returns>Invoice</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchInvoices(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes a group of invoices with the IDs specified in the request.
            </summary>
            <param name="invoiceids">List of invoice IDs</param>
            <short>Delete an invoice group</short> 
            <category>Invoices</category>
            <returns>List of invoices</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateInvoice(System.String,ASC.Specific.ApiDateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,ASC.Specific.ApiDateTime,System.String,System.String,System.Decimal,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ASC.CRM.Core.Entities.InvoiceLine})">
            <summary>
             Creates an invoice with the parameters (contact ID, consignee ID, etc.) specified in the request.
            </summary>
            <param optional="false" name="number">Invoice number</param>
            <param optional="false" name="issueDate">Invoice issue date</param>
            <param optional="true" name="templateType">Invoice template type</param>
            <param optional="false" name="contactId">Invoice contact ID</param>
            <param optional="true" name="consigneeId">Invoice consignee ID</param>
            <param optional="true" name="entityId">Invoice entity ID</param>
            <param optional="true" name="billingAddressID">Invoice billing address ID</param>
            <param optional="true" name="deliveryAddressID">Invoice delivery address ID</param>
            <param optional="false" name="dueDate">Invoice due date</param>
            <param optional="false" name="language">Invoice language</param>
            <param optional="false" name="currency" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by api">Invoice currency (abbreviation)</param>
            <param optional="false" name="exchangeRate">Invoice exchange rate</param>
            <param optional="true" name="purchaseOrderNumber">Invoice purchase order number</param>
            <param optional="false" name="terms">Invoice terms</param>
            <param optional="true" name="description">Invoice description</param>
            <param optional="false" name="invoiceLines">List of invoice lines</param>
            <short>Create an invoice</short> 
            <category>Invoices</category>
            <returns>Invoice</returns>
            <example>
            <![CDATA[
            
            Data transfer in application/json format:
            
            data: {
               number: "invoice000001",
               issueDate: "2015-06-01T00:00:00",
               contactId: 10,
               dueDate: "2025-06-01T00:00:00",
               language: "es-ES",
               currency: "rub",
               exchangeRate: 54.32,
               terms: "Terms for this invoice",
               invoiceLines:
               [{
                     invoiceItemID: 1,
                     invoiceTax1ID: 1,
                     invoiceTax2ID: 2,
                     description: "description for invoice line 1",
                     quantity: 100,
                     price: 7.7,
                     discount: 25
               }]  
            }
            
            where invoiceItemID, invoiceTax1ID, invoiceTax2ID - IDs of the real existing invoice item and invoice taxes, contactId - ID of the existing contact.
            
            ]]>
            </example>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateInvoice(System.Int32,ASC.Specific.ApiDateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,ASC.Specific.ApiDateTime,System.String,System.String,System.Decimal,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ASC.CRM.Core.Entities.InvoiceLine})">
            <summary>
             Updates the selected invoice with the parameters (contact ID, consignee ID, etc.) specified in the request.
            </summary>
            <param optional="false" name="id">Invoice ID</param>
            <param optional="false" name="issueDate">New invoice issue date</param>
            <param optional="true" name="templateType">New invoice template type</param>
            <param optional="false" name="contactId">New invoice contact ID</param>
            <param optional="true" name="consigneeId">New invoice consignee ID</param>
            <param optional="true" name="entityId">New invoice entity ID</param>
            <param optional="true" name="billingAddressID">New invoice billing address ID</param>
            <param optional="true" name="deliveryAddressID">New invoice delivery address ID</param>
            <param name="dueDate">New invoice due date</param>
            <param optional="false" name="language">New invoice language</param>
            <param optional="false" name="currency" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by api">New invoice currency (abbreviation)</param>
            <param optional="false" name="exchangeRate">New invoice exchange rate</param>
            <param optional="true" name="purchaseOrderNumber">New invoice purchase order number</param>
            <param optional="false" name="terms">New invoice terms</param>
            <param optional="true" name="description">New invoice description</param>
            <param optional="false" name="invoiceLines">New list of invoice lines</param>
            <short>Update an invoice</short> 
            <category>Invoices</category>
            <returns>Updated invoice</returns>
            <example>
            <![CDATA[
            
            Data transfer in application/json format:
            
            data: {
               id: 5,
               issueDate: "2015-06-01T00:00:00",
               contactId: 10,
               dueDate: "2025-06-01T00:00:00",
               language: "es-ES",
               currency: "rub",
               exchangeRate: 54.32,
               terms: "Terms for this invoice",
               invoiceLines:
               [{
                     invoiceItemID: 1,
                     invoiceTax1ID: 1,
                     invoiceTax2ID: 2,
                     description: "description for invoice line 1",
                     quantity: 100,
                     price: 7.7,
                     discount: 25
               }]
            }
            
            where invoiceItemID, invoiceTax1ID, invoiceTax2ID - IDs of the real existing invoice item and invoice taxes, contactId - ID of the existing contact.
            
            ]]>
            </example>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoicePdfExistOrCreate(System.Int32)">
            <summary>
             Returns the pdf file related to an invoice with the ID specified in the request.
            </summary>
            <param name="invoiceid">Invoice ID</param>
            <short>Get the invoice pdf file</short> 
            <category>Invoices</category>
            <returns>Pdf file</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceConverterData(System.Int32,System.String,System.String)">
            <summary>
             Returns information about the generation of the invoice pdf file.
            </summary>
            <param name="invoiceId">Invoice ID</param>
            <param name="storageUrl">Storage URL</param>
            <param name="revisionId">Revision ID</param>
            <short>Get invoice converter data</short> 
            <category>Invoices</category>
            <returns>Converter data</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceByNumberExistence(System.String)">
            <summary>
             Returns the existence of an invoice with the number specified in the request.
            </summary>
            <param name="number">Invoice number</param>
            <short>Check invoice existence by number</short> 
            <category>Invoices</category>
            <returns>Invoice existence</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceByNumber(System.String)">
            <summary>
             Returns the detailed information about an invoice with the number specified in the request.
            </summary>
            <param name="number">Invoice number</param>
            <short>Get an invoice by number</short> 
            <category>Invoices</category>
            <returns>Invoice</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceItems(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Returns a list of invoice items matching the parameters specified in the request.
            </summary>
            <param name="status">Invoice status</param>
            <param optional="true" name="inventoryStock">Inventory stock</param>
            <short>Get filtered invoices</short> 
            <category>Invoices</category>
            <returns>List of invoice items</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceItemByID(System.Int32)">
            <summary>
             Returns the detailed information about an invoice item with the ID specified in the request.
            </summary>
            <param name="invoiceitemid">Invoice item ID</param>
            <short>Get an invoice item by ID</short> 
            <category>Invoices</category>
            <returns>Invoice item</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateInvoiceLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
             Creates an invoice line with the parameters (invoice ID, invoice item ID, etc.) specified in the request.
            </summary>
            <param optional="false" name="invoiceId">Invoice ID</param>
            <param optional="false" name="invoiceItemId">Invoice item ID</param>
            <param optional="true" name="invoiceTax1Id">First invoice tax ID</param>
            <param optional="true" name="invoiceTax2Id">Second invoice tax ID</param>
            <param optional="true" name="sortOrder">Sort order</param>
            <param optional="true" name="description">Description</param>
            <param optional="true" name="quantity">Quantity</param>
            <param optional="true" name="price">Price</param>
            <param optional="true" name="discount">Discount</param>
            <short>Create an invoice line</short> 
            <category>Invoices</category>
            <returns>Invoice line</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateInvoiceLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
             Updates the selected invoice line with the parameters (invoice ID, invoice item ID, etc.) specified in the request.
            </summary>
            <param optional="false" name="id">Invoice line ID</param>
            <param optional="false" name="invoiceId">Invoice ID</param>
            <param optional="false" name="invoiceItemId">Invoice item ID</param>
            <param optional="true" name="invoiceTax1Id">New first invoice tax ID</param>
            <param optional="true" name="invoiceTax2Id">New second invoice tax ID</param>
            <param optional="true" name="sortOrder">New sort order</param>
            <param optional="true" name="description">New description</param>
            <param optional="true" name="quantity">New quantity</param>
            <param optional="true" name="price">New price</param>
            <param optional="true" name="discount">New discount</param>
            <short>Update an invoice line</short>
            <category>Invoices</category>
            <returns>Updated invoice line</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteInvoiceLine(System.Int32)">
            <summary>
            Deletes an invoice line with the ID specified in the request.
            </summary>
            <param optional="false" name="id">Invoice line ID</param>
            <short>Delete an invoice line</short> 
            <category>Invoices</category>
            <returns>Invoice line ID</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateInvoiceItem(System.String,System.String,System.Decimal,System.String,System.Decimal,System.Boolean,System.Int32,System.Int32)">
            <summary>
             Creates an invoice item with the parameters (title, description, price, etc.) specified in the request.
            </summary>
            <param optional="false" name="title">Invoice item title</param>
            <param optional="true" name="description">Invoice item description</param>
            <param optional="false" name="price">Invoice item price</param>
            <param optional="true" name="sku">Invoice item stock keeping unit</param>
            <param optional="true" name="stockQuantity">Invoice item stock quantity</param>
            <param optional="true" name="trackInventory">Invoice item track inventory</param>
            <param optional="true" name="invoiceTax1id">Item first invoice tax ID</param>
            <param optional="true" name="invoiceTax2id">Item second invoice tax ID</param>
            <short>Create an invoice item</short> 
            <category>Invoices</category>
            <returns>Invoice item</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateInvoiceItem(System.Int32,System.String,System.String,System.Decimal,System.String,System.Decimal,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Updates the selected invoice item with the parameters (title, description, price, etc.) specified in the request.
            </summary>
            <param optional="false" name="id">Invoice item ID</param>
            <param optional="false" name="title">New invoice item title</param>
            <param optional="true" name="description">New invoice item description</param>
            <param optional="false" name="price">New invoice item price</param>
            <param optional="true" name="sku">New invoice item stock keeping unit</param>
            <param optional="true" name="stockQuantity">New invoice item stock quantity</param>
            <param optional="true" name="trackInventory">New invoice item track inventory</param>
            <param optional="true" name="invoiceTax1id">New item first invoice tax ID</param>
            <param optional="true" name="invoiceTax2id">New item second invoice tax ID</param>
            <short>Update an invoice item</short>
            <category>Invoices</category>
            <returns>Updated invoice item</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteInvoiceItem(System.Int32)">
            <summary>
            Deletes an invoice item with the ID specified in the request.
            </summary>
            <param name="id">Invoice item ID</param>
            <short>Delete an invoice item</short> 
            <category>Invoices</category>
            <returns>Invoice item</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchItems(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes a group of invoice items with the IDs specified in the request.
            </summary>
            <param name="ids">List of invoice item IDs</param>
            <short>Delete invoice items</short> 
            <category>Invoices</category>
            <returns>List of invoice items</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetInvoiceTaxes">
            <summary>
            Returns a list of invoice taxes.
            </summary>
            <short>Get invoice taxes</short> 
            <category>Invoices</category>
            <returns>List of invoice taxes</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateInvoiceTax(System.String,System.String,System.Decimal)">
            <summary>
             Creates an invoice tax with the parameters (name, description, rate) specified in the request.
            </summary>
            <param name="name">Tax name</param>
            <param name="description">Tax description</param>
            <param name="rate">Tax rate</param>
            <short>Create an invoice tax</short> 
            <category>Invoices</category>
            <returns>Invoice tax</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateInvoiceTax(System.Int32,System.String,System.String,System.Decimal)">
            <summary>
             Updates the selected invoice tax with the parameters (name, description, rate) specified in the request.
            </summary>
            <param name="id">Tax ID</param>
            <param name="name">New tax name</param>
            <param name="description">New tax description</param>
            <param name="rate">New tax rate</param>
            <short>Update an invoice tax</short>
            <category>Invoices</category>
            <returns>Updated invoice tax</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteInvoiceTax(System.Int32)">
            <summary>
             Deletes an invoice tax with the ID specified in the request.
            </summary>
            <param name="id">Tax ID</param>
            <short>Delete an invoice tax</short> 
            <category>Invoices</category>
            <returns>Invoice tax</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetSettings">
            <summary>
             Returns the default invoice settings.
            </summary>
            <short>Get the default invoice settings</short>
            <category>Invoices</category>
            <returns>Default invoice settings</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SaveNumberSettings(System.Boolean,System.String,System.String)">
            <summary>
            Saves the default settings for invoice number specified in the request.
            </summary>
            <param name="autogenerated">Defines if the default invoice number is autogenerated or not</param>
            <param name="prefix">Invoice prefix</param>
            <param name="number">Invoice number</param>
            <short>Save the default settings for invoice number</short>
            <category>Invoices</category>
            <returns>Invoice settings</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SaveTermsSettings(System.String)">
            <summary>
             Saves the default settings for invoice terms specified in the request.
            </summary>
            <param name="terms">Invoice terms</param>
            <short>Save the default setting for invoice terms</short>
            <category>Invoices</category>
            <returns>Invoice settings</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetInvoiceCreationDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
             Sets the creation date to the invoice with the ID specified in the request.
            </summary>
            <param name="invoiceid">Invoice ID</param>
            <param name="creationDate">Invoice creation date</param>
            <short>Set the invoice creation date</short>
            <category>Invoices</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetInvoiceLastModifedDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
             Sets the last modified date to the invoice with the ID specified in the request.
            </summary>
            <param name="invoiceid">Invoice ID</param>
            <param name="lastModifedDate">Invoice last modified date</param>
            <short>Set the invoice last modified date</short>
            <category>Invoices</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CloseCases(System.Int32)">
            <summary>
            Closes a case with the ID specified in the request.
            </summary>
            <short>Close a case</short> 
            <category>Cases</category>
            <param name="caseid" optional="false">Case ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Case
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ReOpenCases(System.Int32)">
            <summary>
            Resumes a case with the ID specified in the request.
            </summary>
            <short>Resume a case</short> 
            <category>Cases</category>
            <param name="caseid" optional="false">Case ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Case
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateCases(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Creates a case with the parameters specified in the request.
            </summary>
            <short>Create a case</short> 
            <param name="title" optional="false">Case title</param>
            <param name="members" optional="true">Case participants</param>
            <param name="customFieldList" optional="true">List of case custom fields</param>
            <param name="isPrivate" optional="true">Case privacy: private or not</param>
            <param name="accessList" optional="true">List of users with access to the case</param>
            <param name="isNotify" optional="true">Notifies users from the access list about the case</param>
            <returns>Case</returns>
            <category>Cases</category>
            <exception cref="T:System.ArgumentException"></exception>
            <example>
            <![CDATA[
            
            Data transfer in application/json format:
            
            data: {
               title: "Exhibition organization",
               isPrivate: false,
               customFieldList: [{1: "value for text custom field with id = 1"}]
            }
            
            ]]>
            </example>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCases(System.Int32,System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Updates the selected case with the parameters specified in the request.
            </summary>
            <short>Update a case</short> 
            <param name="caseid" optional="false">Case ID</param>
            <param name="title" optional="false">New case title</param>
            <param name="members" optional="true">New case participants</param>
            <param name="customFieldList" optional="true">New list of case custom fields</param>
            <param name="isPrivate" optional="true">Case privacy: private or not</param>
            <param name="accessList" optional="true">New list of users with access to the case</param>
            <param name="isNotify" optional="true">Notifies users from the access list about the case</param>
            <category>Cases</category>
            <returns>Case</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <example>
            <![CDATA[
            
            Data transfer in application/json format:
            
            data: {
               caseid: 0,
               title: "Exhibition organization",
               isPrivate: false,
               customFieldList: [{1: "value for text custom field with id = 1"}]
            }
            
            ]]>
            </example>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToCases(System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets access rights to the selected case with the parameters specified in the request.
            </summary>
            <param name="caseid" optional="false">Case ID</param>
            <param name="isPrivate" optional="false">Case privacy: private or not</param>
            <param name="accessList" optional="false">List of users with access to the case</param>
            <short>Set access rights to the case</short> 
            <category>Cases</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Case 
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToBatchCases(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets access rights to the list of cases with the IDs specified in the request.
            </summary>
            <param name="casesid">List of case IDs</param>
            <param name="isPrivate">Case privacy: private or not</param>
            <param name="accessList">List of users with access</param>
            <short>Set access rights to the cases by IDs</short> 
            <category>Cases</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            List of cases
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToBatchCases(System.Int32,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets access rights to the list of all the cases matching the parameters specified in the request.
            </summary>
            <param optional="true" name="contactid">Contact ID</param>
            <param optional="true" name="isClosed">Case status</param>
            <param optional="true" name="tags">Case tags</param>
            <param name="isPrivate">Case privacy: private or not</param>
            <param name="accessList">List of users with access</param>
            <short>Set access rights to the cases by parameters</short> 
            <category>Cases</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            List of cases
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCaseByID(System.Int32)">
             <summary>
             Returns the detailed information about a case with the ID specified in the request.
             </summary>
             <short>Get a case by ID</short> 
             <category>Cases</category>
             <param name="caseid">Case ID</param>
             <returns>Case</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCases(System.Int32,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a list of all the cases matching the parameters specified in the request.
            </summary>
            <short>Get cases</short> 
            <param optional="true" name="contactid">Contact ID</param>
            <param optional="true" name="isClosed">Case status</param>
            <param optional="true" name="tags">Case tags</param>
            <category>Cases</category>
            <returns>
            List of cases
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteCase(System.Int32)">
            <summary>
            Deletes a case with the ID specified in the request.
            </summary>
            <short>Delete a case</short> 
            <param name="caseid">Case ID</param>
            <category>Cases</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Case
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchCases(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes a group of cases with the IDs specified in the request.
            </summary>
            <param name="casesids">List of case IDs</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <short>Delete cases by IDs</short> 
            <category>Cases</category>
            <returns>
            List of cases
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchCases(System.Int32,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deletes a list of all the cases matching the parameters specified in the request.
            </summary>
            <param optional="true" name="contactid">Contact ID</param>
            <param optional="true" name="isClosed">Case status</param>
            <param optional="true" name="tags">Case tags</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <short>Delete cases by parameters</short> 
            <category>Cases</category>
            <returns>
            List of cases
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCasesMembers(System.Int32)">
             <summary>
             Returns a list of all the contacts related to the case with the ID specified in the request.
             </summary>
             <short>Get case contacts</short> 
             <param name="caseid">Case ID</param>
             <category>Cases</category>
             <returns>List of contacts</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddMemberToCases(System.Int32,System.Int32)">
            <summary>
            Adds the selected contact to the case with the ID specified in the request.
            </summary>
            <short>Add a case contact</short> 
            <category>Cases</category>
            <param name="caseid">Case ID</param>
            <param name="contactid">Contact ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Contact
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteMemberFromCases(System.Int32,System.Int32)">
            <summary>
            Deletes the selected contact from the case with the ID specified in the request.
            </summary>
            <short>Delete a case contact</short> 
            <category>Cases</category>
            <param name="caseid">Case ID</param>
            <param name="contactid">Contact ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Contact
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCasesByPrefix(System.String,System.Int32)">
            <summary>
            Returns a list of 30 cases from the CRM module with a prefix specified in the request.
            </summary>
            <param optional="true" name="prefix">Case prefix</param>
            <param optional="true" name="contactID">Contact ID</param>
            <category>Cases</category>
            <returns>
            List of cases
            </returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactInfoCategory(ASC.CRM.Core.ContactInfoType)">
            <summary>
            Returns a list of all the available contact categories of the specified information type.
            </summary>
            <param name="infoType">Contact information type</param>
            <short>Get contact categories by information type</short> 
            <category>Contacts</category>
            <returns>
            List of contact categories
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactInfoType">
            <summary>
            Returns a list of all the available contact information types.
            </summary>
            <short>Get contact information types</short> 
            <category>Contacts</category>
            <returns>List of all the contact information types</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactInfo(System.Int32)">
            <summary>
            Returns the detailed information on the contact with the ID specified in the request.
            </summary>
            <param name="contactid">Contact ID</param>
            <short>Get contact information</short> 
            <category>Contacts</category>
            <returns>
            Contact information
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactInfoByID(System.Int32,System.Int32)">
             <summary>
             Returns the detailed contact information with the ID specified in the request.
             </summary>
             <param name="contactid">Contact ID</param>
             <param name="id">Contact information ID</param>
             <short>Get contact information by ID</short> 
             <category>Contacts</category>
             <returns>Contact information</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateContactInfo(System.Int32,ASC.CRM.Core.ContactInfoType,System.String,System.Boolean,System.String)">
             <summary>
             Adds the information with the parameters specified in the request to the contact with the selected ID.
             </summary>
            <param name="contactid">Contact ID</param>
            <param name="infoType">Contact information type</param>
            <param name="data">New data</param>
            <param name="isPrimary">Contact information importance: primary or not</param>
            <param name="category">Contact information category</param>
            <short>Add contact information</short> 
            <category>Contacts</category>
             <seealso cref="M:ASC.Api.CRM.CRMApi.GetContactInfoType"/>
             <seealso cref="M:ASC.Api.CRM.CRMApi.GetContactInfoCategory(ASC.CRM.Core.ContactInfoType)"/>
             <returns>
             Contact information
             </returns> 
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateContactInfoAddress(System.Int32,ASC.Api.CRM.Wrappers.Address)">
            <summary>
            Adds the address information to the contact with the ID specified in the request.
            </summary>
            <param name="contactid">Contact ID</param>
            <param name="address">Address data</param>
            <short>Add contact address information</short> 
            <category>Contacts</category>
            <seealso cref="M:ASC.Api.CRM.CRMApi.GetContactInfoType"/>
            <seealso cref="M:ASC.Api.CRM.CRMApi.GetContactInfoCategory(ASC.CRM.Core.ContactInfoType)"/>
            <returns>
            Contact information
            </returns> 
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateBatchContactInfo(System.Int32,System.Collections.Generic.IEnumerable{ASC.Api.CRM.Wrappers.ContactInfoWrapper})">
             <summary>
              Creates contact information (add new information to the existing list) with the parameters specified in the request for the contact with the selected ID.
             </summary>
            <short>Add new contact information</short> 
             <param name="contactid">Contact ID</param>
             <param name="items">Contact information</param>
             <remarks>
             <![CDATA[
              Items have the following format:
              [{infoType : 1, category : 1, categoryName : 'work', data : "myemail@email.com", isPrimary : true}, {infoType : 0, category : 0, categoryName : 'home', data : "+8999111999111", isPrimary : true}]
             ]]>
             </remarks>
             <category>Contacts</category>
             <exception cref="T:System.ArgumentException"></exception>
             <returns>
             Contact information
             </returns>
             <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactInfo(System.Int32,System.Int32,System.Nullable{ASC.CRM.Core.ContactInfoType},System.String,System.Nullable{System.Boolean},System.String)">
             <summary>
             Updates the contact information with the parameters specified in the request.
             </summary>
            <param name="id">Contact information record ID</param>
            <param name="contactid">Contact ID</param>
            <param optional="true" name="infoType">New contact information type</param>
            <param name="data">New data</param>
            <param optional="true" name="isPrimary">New contact information importance: primary or not</param>
            <param optional="true" name="category">New contact information category</param>
            <short>Update contact information</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
             <returns>
             Updated contact information
             </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactInfoAddress(System.Int32,System.Int32,ASC.Api.CRM.Wrappers.Address)">
            <summary>
            Updates the contact address information with the parameter specified in the request.
            </summary>
            <param name="id">Contact information record ID</param>
            <param name="contactid">Contact ID</param>
            <param name="address">New address data</param>
            <short>Update contact address information</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Contact information with the updated address
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateBatchContactInfo(System.Int32,System.Collections.Generic.IEnumerable{ASC.Api.CRM.Wrappers.ContactInfoWrapper})">
             <summary>
              Updates contact information (delete the existing information and add a new list) with the parameters specified in the request for the contact with the selected ID.
             </summary>
            <short>Update contact information</short> 
            <param name="contactid">Contact ID</param>
            <param name="items">New contact information</param>
             <![CDATA[
              Items have the following format:
              [{infoType : 1, category : 1, categoryName : 'work', data : "myemail@email.com", isPrimary : true}, {infoType : 0, category : 0, categoryName : 'home', data : "+8999111999111", isPrimary : true}]
             ]]>
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
             <returns>
             Updated contact information
             </returns>
             <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactInfo(System.Int32,ASC.CRM.Core.ContactInfoType)">
            <summary>
            Returns the detailed contact information by the information type specified in the request.
            </summary>
            <param name="contactid">Contact ID</param>
            <param name="infoType">Contact information type</param>
            <short>Get contact information by type</short> 
            <category>Contacts</category>
            <returns>
            Contact information
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteContactInfo(System.Int32,System.Int32)">
            <summary>
            Deletes the selected information for the contact with the ID specified in the request.
            </summary>
            <param name="contactid">Contact ID</param>
            <param name="id">Contact information record ID</param>
            <short>Delete contact information</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Contact information
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactByID(System.Int32)">
            <summary>
            Returns the detailed information about a contact with the ID specified in the request.
            </summary>
            <param name="contactid">Contact ID</param>
            <returns>Contact</returns>
            <short>Get a contact by ID</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactsByProjectID(System.Int32)">
             <summary>
             Returns contacts for the project with the ID specified in the request.
             </summary>
             <short>
             Get contacts by project ID
             </short>
             <param name="projectid">Project ID</param>
             <category>Contacts</category>
             <returns>
             List of contacts
             </returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetRelativeContactToProject(System.Int32,System.Int32)">
            <summary>
            Links the selected contact to the project with the ID specified in the request.
            </summary>
            <param name="contactid">Contact ID</param>
            <param name="projectid">Project ID</param>
            <category>Contacts</category>
            <short>Link a contact to the project</short> 
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>Contact information</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetRelativeContactListToProject(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Links the selected contacts to the project with the ID specified in the request.
            </summary>
            <param name="contactid">Array of contact IDs</param>
            <param name="projectid">Project ID</param>
            <category>Contacts</category>
            <short>Link contacts to the project</short> 
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            List of contacts
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.RemoveRelativeContactToProject(System.Int32,System.Int32)">
            <summary>
            Removes a link to the selected project from the contact with the ID specified in the request.
            </summary>
            <param name="contactid">Contact ID</param>
            <param name="projectid">Project ID</param>
            <category>Contacts</category>
            <short>Remove a contact from the project</short> 
            <returns>
            Contact information
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddDealToContact(System.Int32,System.Int32)">
            <summary>
            Adds the selected opportunity to the contact with the ID specified in the request.
            </summary>
            <param name="opportunityid">Opportunity ID</param>
            <param name="contactid">Contact ID</param>
            <short>Add a contact opportunity</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Opportunity
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteDealFromContact(System.Int32,System.Int32)">
            <summary>
            Deletes the selected opportunity from the contact with the ID specified in the request.
            </summary>
            <param name="opportunityid">Opportunity ID</param>
            <param name="contactid">Contact ID</param>
            <short>Delete a contact opportunity</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Opportunity
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContacts(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},ASC.CRM.Core.ContactListViewType,System.Nullable{System.Guid},System.Nullable{System.Boolean},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime)">
            <summary>
            Returns a list of all the contacts in the CRM module matching the parameters specified in the request.
            </summary>
            <param optional="true" name="tags">Contact tag</param>
            <param optional="true" name="contactStage">Contact stage ID (warmth)</param>
            <param optional="true" name="contactType">Contact type ID</param>
            <param optional="true" name="contactListView" remark="Allowed values: Company, Person, WithOpportunity">Contact list view</param>
            <param optional="true" name="fromDate">Start date</param>
            <param optional="true" name="toDate">End date</param>
            <param optional="true" name="responsibleid">Responsible ID</param>
            <param optional="true" name="isShared">Contact privacy: private or not</param>
            <short>Get filtered contacts</short> 
            <category>Contacts</category>
            <returns>
            List of contacts
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SearchContactsByEmail(System.String,System.Int32)">
            <summary>
            Searches for contacts by their emails.
            </summary>
            <param name="term">String part of contact name, lastname or email</param>
            <param name="maxCount">Maximum result count</param>
            <short>Search contacts by email</short> 
            <category>Contacts</category>
            <returns>
            List of contacts
            </returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetSimpleContacts(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},ASC.CRM.Core.ContactListViewType,System.Nullable{System.Guid},System.Nullable{System.Boolean},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime)">
            <summary>
            Returns a list of all the contacts with their tasks in the CRM module matching the parameters specified in the request.
            </summary>
            <param optional="true" name="tags">Contact tag</param>
            <param optional="true" name="contactStage">Contact stage ID (warmth)</param>
            <param optional="true" name="contactType">Contact type ID</param>
            <param optional="true" name="contactListView" remark="Allowed values: Company, Person, WithOpportunity">Contact list view</param>
            <param optional="true" name="responsibleid">Responsible ID</param>
            <param optional="true" name="isShared">Contact privacy: private or not</param>
            <param optional="true" name="fromDate">Start date</param>
            <param optional="true" name="toDate">End date</param>
            <short>Get filtered contacts with tasks</short> 
            <category>Contacts</category>
            <returns>
            List of contacts
            </returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactsForMail(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns a group of contacts with the IDs specified in the request and their emails.
            </summary>
            <param name="contactids">List of contact IDs</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <short>Get contacts with emails</short> 
            <category>Contacts</category>
            <returns>
            List of contacts
            </returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchContacts(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},ASC.CRM.Core.ContactListViewType,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime)">
            <summary>
            Deletes a list of all the contacts in the CRM module matching the parameters specified in the request.
            </summary>
            <param optional="true" name="tags">Contact tags</param>
            <param optional="true" name="contactStage">Contact stage ID (warmth)</param>
            <param optional="true" name="contactType">Contact type ID</param>
            <param optional="true" name="contactListView" remark="Allowed values: Company, Person, WithOpportunity">Contact list view</param>
            <param optional="true" name="fromDate">Start date</param>
            <param optional="true" name="toDate">End date</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <short>Delete contacts by parameters</short> 
            <category>Contacts</category>
            <returns>
            List of contacts
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetPeopleFromCompany(System.Int32)">
            <summary>
            Returns a list of all the persons linked to the company with the ID specified in the request.
            </summary>
            <param name="companyid">Company ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <short>Get persons linked to the company</short> 
            <category>Contacts</category>
            <returns>
            Company linked persons
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddPeopleToCompany(System.Int32,System.Int32)">
            <summary>
            Adds the selected person to the company with the ID specified in the request.
            </summary>
            <param optional="true"  name="companyid">Company ID</param>
            <param optional="true" name="personid">Person ID</param>
            <short>Add a person to the company</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Person
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeletePeopleFromCompany(System.Int32,System.Int32)">
            <summary>
            Deletes the selected person from the company with the ID specified in the request.
            </summary>
            <param optional="true"  name="companyid">Company ID</param>
            <param optional="true" name="personid">Person ID</param>
            <short>Delete a person from the company</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Person
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreatePerson(System.String,System.String,System.String,System.Int32,System.String,ASC.Web.CRM.Core.Enums.ShareType,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}},System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
            <summary>
            Creates a person with the parameters (first name, last name, description, etc.) specified in the request.
            </summary>
            <param name="firstName">First name</param>
            <param name="lastName">Last name</param>
            <param optional="true"  name="jobTitle">Job title</param>
            <param optional="true" name="companyId">Company ID</param>
            <param optional="true" name="about">Person description text</param>
            <param name="shareType">Person privacy: 0 - not shared, 1 - shared for reading/writing, 2 - shared for reading only</param>
            <param optional="true" name="managerList">List of person managers</param>
            <param optional="true" name="customFieldList">Custom field list</param>
            <param optional="true" name="photo">Contact photo (upload using multipart/form-data)</param>
            <short>Create a person</short> 
            <category>Contacts</category>
            <returns>Person</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ChangeContactPhoto(System.Int32,System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
            <summary>
            Changes a photo for the contact with the ID specified in the request.
            </summary>
            <param name="contactid">Contact ID</param>
            <param name="photo">Contact photo (upload using multipart/form-data)</param>
            <short>Change a contact photo</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Path to the contact photo
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ChangeContactPhoto(System.Int32,System.String)">
            <summary>
            Changes a photo for the contact with the ID specified in the request by URL.
            </summary>
            <param name="contactid">Contact ID</param>
            <param name="photourl">Contact photo URL</param>
            <short>Change a contact photo by URL</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Path to the contact photo
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.MergeContacts(System.Int32,System.Int32)">
            <summary>
            Merges two contacts specified in the request.
            </summary>
            <param name="fromcontactid">The first contact ID to merge</param>
            <param name="tocontactid">The second contact ID to merge</param>
            <short>Merge contacts</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Security.SecurityException"></exception>
            <returns>
            Contact
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdatePerson(System.Int32,System.String,System.String,System.String,System.Int32,System.String,ASC.Web.CRM.Core.Enums.ShareType,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}},System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
            <summary>
            Updates the selected person with the parameters (first name, last name, description, etc.) specified in the request.
            </summary>
            <param name="personid">Person ID</param>
            <param name="firstName">New first name</param>
            <param name="lastName">New last name</param>
            <param optional="true"  name="jobTitle">New job title</param>
            <param optional="true" name="companyId">New company ID</param>
            <param optional="true" name="about">New person description text</param>
            <param name="shareType">New person privacy: 0 - not shared, 1 - shared for reading/writing, 2 - shared for reading only</param>
            <param optional="true" name="managerList">New list of person managers</param>
            <param optional="true" name="customFieldList">New custom field list</param>
            <param optional="true" name="photo">New contact photo (upload using multipart/form-data)</param>
            <short>Update a person</short> 
            <category>Contacts</category>
            <returns>Person</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateCompany(System.String,System.String,System.Collections.Generic.IEnumerable{System.Int32},ASC.Web.CRM.Core.Enums.ShareType,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}},System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
            <summary>
            Creates a company with the parameters specified in the request.
            </summary>
            <param  name="companyName">Company name</param>
            <param optional="true" name="about">Company description text</param>
            <param optional="true" name="personList">List of persons linked to the company</param>
            <param name="shareType">Company privacy: 0 - not shared, 1 - shared for reading/writing, 2 - shared for reading only</param>
            <param optional="true" name="managerList">List of company managers</param>
            <param optional="true" name="customFieldList">Custom field list</param>
            <param optional="true" name="photo">Contact photo (upload using multipart/form-data)</param>
            <short>Create a company</short> 
            <category>Contacts</category>
            <returns>Company</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateCompany(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a list of companies with the names specified in the request.
            </summary>
            <short>
            Create companies
            </short>
            <param name="companyName">Company name</param>
            <category>Contacts</category>
            <returns>List of contacts</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreatePerson(System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.String,System.String}})">
            <summary>
            Creates a list of persons with the first and last names specified in the request.
            </summary>
            <short>
            Create persons
            </short>
            <param name="data">Pairs: user first name, user last name</param>
            <remarks>
            <![CDATA[
             Data has the following format:
             [{key: 'First name 1', value: 'Last name 1'}, {key: 'First name 2', value: 'Last name 2'}].
            ]]>
            </remarks>
            <category>Contacts</category>
            <returns>List of contacts</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCompany(System.Int32,System.String,System.String,ASC.Web.CRM.Core.Enums.ShareType,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}})">
            <summary>
            Updates the selected company with the parameters specified in the request.
            </summary>
            <param name="companyid">Company ID</param>
            <param  name="companyName">New company name</param>
            <param optional="true" name="about">New company description text</param>
            <param name="shareType">New company privacy: 0 - not shared, 1 - shared for reading/writnig, 2 - shared for reading only</param>
            <param optional="true" name="managerList">New list of company managers</param>
            <param optional="true" name="customFieldList">New custom field list</param>
            <short>Update a company</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Company
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactStatus(System.Int32,System.Int32)">
            <summary>
            Updates a status of the contact with the ID specified in the request.
            </summary>
            <param name="contactid">Contact ID</param>
            <param  name="contactStatusid">New contact status ID</param>
            <short>Update a contact status by ID</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Company
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCompanyAndParticipantsStatus(System.Int32,System.Int32)">
            <summary>
            Updates a status of the selected company and all its participants.
            </summary>
            <param name="companyid">Company ID</param>
            <param  name="contactStatusid">New contact status ID</param>
            <short>Update a status of a company and its participants</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Company
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdatePersonAndItsCompanyStatus(System.Int32,System.Int32)">
            <summary>
            Updates a status of the selected person, related company and all its participants.
            </summary>
            <param name="personid">Person ID</param>
            <param  name="contactStatusid">New contact status ID</param>
            <short>Update a status of a person, related company and its participants</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Person
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactAccessList(System.Int32)">
             <summary>
             Returns access rights to the contact with the ID specified in the request.
             </summary>
             <param name="contactid">Contact ID</param>
             <short>Get contact access rights</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Security.SecurityException"></exception>
             <returns>List of contacts</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToContact(System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
             <summary>
             Sets access rights to the contact with the ID specified in the request.
             </summary>
             <param name="contactid">Contact ID</param>
             <param name="isShared">Contact privacy: private or not</param>
             <param name="managerList">List of managers</param>
             <short>Set access rights to the contact</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <returns>
             Contact
             </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToBatchContact(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets access rights to the list of contacts with the IDs specified in the request.
            </summary>
            <param name="contactid">List of contact IDs</param>
            <param name="isShared">Company privacy: shared or not</param>
            <param name="managerList">List of managers</param>
            <short>Set access rights to the contacts by IDs</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            List of contacts
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToBatchContact(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},ASC.CRM.Core.ContactListViewType,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets access rights to the list of contacts with the parameters specified in the request.
            </summary>
            <param name="isPrivate">Contact privacy: private or not</param>
            <param name="managerList">List of managers</param>
            <param optional="true" name="tags">Contact tags</param>
            <param optional="true" name="contactStage">Contact stage ID (warmth)</param>
            <param optional="true" name="contactType">Contact type ID</param>
            <param optional="true" name="contactListView" remark="Allowed values: Company, Person, WithOpportunity">Contact list view</param>
            <param optional="true" name="fromDate">Start date</param>
            <param optional="true" name="toDate">End date</param>
            <short>Set access rights to the contacts by parameters</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            List of contacts
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteContact(System.Int32)">
            <summary>
            Deletes a contact with the ID specified in the request from the portal.
            </summary>
            <short>Delete a contact</short> 
            <category>Contacts</category>
            <param name="contactid">Contact ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Contact
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchContacts(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes a group of contacts with the IDs specified in the request.
            </summary>
            <param name="contactids">List of contact IDs</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <short>Delete contacts by IDs</short> 
            <category>Contacts</category>
            <returns>
            List of contacts
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactsByPrefix(System.String,System.Int32,ASC.CRM.Core.EntityType,System.Int32)">
            <summary>
            Returns a list of 30 contacts from the CRM module with a prefix specified in the request.
            </summary>
            <short>Get contacts by prefix</short>
            <param optional="true" name="prefix">Contact prefix</param>
            <param optional="false" name="searchType" remark="Allowed values: -1 (Any), 0 (Company), 1 (Persons), 2 (PersonsWithoutCompany), 3 (CompaniesAndPersonsWithoutCompany)">Contact search type</param>
            <param optional="true" name="entityType">Contact entity type</param>
            <param optional="true" name="entityID">Contact entity ID</param>
            <category>Contacts</category>
            <returns>
            List of contacts
            </returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactsByContactInfo(System.Nullable{ASC.CRM.Core.ContactInfoType},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of contacts from the CRM module with the contact information specified in the request.
            </summary>
            <param optional="false" name="infoType">Contact information type</param>
            <param optional="false" name="data">Contact data</param>
            <param optional="true" name="category">Contact category</param>
            <param optional="true" name="isPrimary">Contact importance: primary or not</param>
            <short>Get contacts by contact information</short>
            <category>Contacts</category>
            <returns>
            List of contacts
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetUserTweets(System.Int32,System.Int32)">
            <summary>
            Returns a certain number of tweets created by a user with the ID specified in the request.
            </summary>
            <param name="contactid">Contact ID</param>
            <param name="count">Number of tweets</param>
            <short>Get user tweets</short>
            <category>Contacts</category>
            <returns>List of tweets</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.FindTwitterProfiles(System.String)">
            <summary>
            Returns a list of twitter profiles by the search text specified in the request.
            </summary>
            <param name="searchText">Search text</param>
            <short>Get twitter profiles</short>
            <category>Contacts</category>
            <returns>List of twitter profiles</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteContactAvatar(System.Int32,System.String,System.Boolean)">
            <summary>
            Deletes an avatar of the contact with the ID specified in the request.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="contactType">Contact type ID</param>
            <param name="uploadOnly">Defines if an avatar is already uploaded or not</param>
            <short>Delete a contact avatar</short>
            <category>Contacts</category>
            <returns>Default photo</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactSMImages(System.Int32)">
            <summary>
            Returns a list of the social media images for the contact with the ID specified in the request.
            </summary>
            <param name="contactId">Contact ID</param>
            <short>Get contact social media images by contact ID</short>
            <category>Contacts</category>
            <returns>List of social media images</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactSMImagesByNetworks(System.Collections.Generic.List{ASC.Api.CRM.Wrappers.ContactInfoWrapper})">
            <summary>
            Returns a list of the contact social media images for the social networks specified in the request.
            </summary>
            <param name="socialNetworks">List of contact social networks</param>
            <short>Get contact social media images by networks</short>
            <category>Contacts</category>
            <returns>List of social media images</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UploadUserAvatarFromSocialNetwork(System.Int32,ASC.Thrdparty.SocialNetworks,System.String,System.Boolean,System.String)">
            <summary>
            Uploads an avatar of the contact with the ID specified in the request from the social network.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="socialNetwork">Contact social network</param>
            <param name="userIdentity">User identity</param>
            <param name="uploadOnly">Defines if an avatar is already uploaded or not</param>
            <param name="tmpDirName" visible="false">Temporary directory name</param>
            <short>Upload an avatar from social network</short>
            <category>Contacts</category>
            <returns>Avatar</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SendMailSMTPToContacts(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.String,System.String,System.Boolean)">
            <summary>
            Sends a mail through SMTP to contacts with the IDs specified in the request.
            </summary>
            <param name="fileIDs">File IDs</param>
            <param name="contactIds">Contact IDs</param>
            <param name="subject">Mail subject</param>
            <param name="body">Mail body</param>
            <param name="storeInHistory" visible="false">Defines if a mail will be stored in the history or not</param>
            <short>Send a mail</short>
            <category>Contacts</category>
            <returns>Mail</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetMailSMTPToContactsPreview(System.String,System.Int32)">
            <summary>
            Returns a preview of a mail sent through SMTP to contact with the ID specified in the request.
            </summary>
            <param name="template">Mail template</param>
            <param name="contactId">Contact ID</param>
            <short>Get a mail preview</short>
            <category>Contacts</category>
            <returns>Mail preview</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetMailSMTPToContactsStatus">
            <summary>
            Returns a status of a mail sent through SMTP to the current contact.
            </summary>
            <short>Get a mail status</short>
            <category>Contacts</category>
            <returns>Mail status</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CancelMailSMTPToContacts">
            <summary>
            Cancels the mail sending through SMTP to the current contacts.
            </summary>
            <short>Cancel mail sending</short>
            <category>Contacts</category>
            <returns>Mail status</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetContactCreationDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
            Sets the creation date of a contact with the ID specified in the request.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="creationDate">Contact creation date</param>
            <short>Set the contact creation date</short>
            <category>Contacts</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetContactLastModifedDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
            Sets the last modified date of a contact with the ID specified in the request.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="lastModifedDate">Contact last modified date</param>
            <short>Set the contact last modified date</short>
            <visible>false</visible>
        </member>
        <member name="P:ASC.Api.CRM.CRMApi.Name">
            <summary>
             Api name entry
            </summary>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.#ctor(ASC.Api.Impl.ApiContext)">
            <summary>
             Constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCustomFieldDefinitions(System.String)">
             <summary>
             Returns a list of descriptions for all the existing custom fields.
             </summary>
             <param name="entityType" remark="Allowed values: contact, person, company, opportunity, case">Entity type</param>
             <short>Get custom fields</short> 
             <category>Custom fields</category>
            <returns>
             List of custom fields
             </returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCustomFieldForSubject(System.String,System.Int32)">
            <summary>
            Returns a list of all the custom fields for the entity type and ID specified in the request.
            </summary>
            <param name="entityType" remark="Allowed values: contact, person, company, opportunity, case">Entity type</param>
            <param name="entityid">Entity ID</param>
            <short>Get entity custom fields</short> 
            <category>Custom fields</category>
            <returns>List of entity custom fields</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetEntityCustomFieldValue(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Sets the selected custom field to the entity with type and ID specified in the request.
            </summary>
            <param name="entityType" remark="Allowed values: contact, person, company, opportunity, case">Entity type</param>
            <param name="entityid">Entity ID</param>
            <param name="fieldid">Field ID</param>
            <param name="fieldValue">Field value</param>
            <short>Set an entity custom field</short> 
            <category>Custom fields</category>
            <returns>
            Custom field
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateCustomFieldValue(System.String,System.String,System.Int32,System.Int32,System.String)">
             <summary>
             Creates a new custom field with the parameters (entity type, field title, type, etc.) specified in the request.
             </summary>
             <param optional="false" name="entityType" remark="Allowed values: contact, person, company, opportunity, case">Entity type</param>
             <param optional="false" name="label">Field title</param>
             <param name="fieldType" 
             remark="Allowed values: TextField, TextArea, SelectBox, CheckBox, Heading or Date">
              Custom field type
             </param>
             <param optional="true" name="position">Field position</param>
             <param optional="true" name="mask" remark="Sent in JSON format only" >Mask</param>
             <short>Create a custom field</short> 
             <category>Custom fields</category>
             <returns>
             Custom field
             </returns>
            <example>
             <![CDATA[
             
             Data transfer in application/json format:
             
             1) Creation of the TextField custom field:
             
             data: {
                entityType: "contact",
                label: "Sample TextField",
                fieldType: 0,
                position: 0,
                mask: {"size":"40"}  // This is the TextField size. All other values are ignored.
             }
             
             
             2) Creation of the TextArea custom field:
             
             data: {
                entityType: "contact",
                label: "Sample TextArea",
                fieldType: 1,
                position: 1,
                mask: '{"rows":"2","cols":"30"}' // This is the TextArea size. All other values are ignored.
             }
             
             
             3) Creation of the SelectBox custom field:
             
             data: {
                entityType: "contact",
                label: "Sample SelectBox",
                fieldType: 2,
                position: 0,
                mask: ["1","2","3"]  // These are the SelectBox values.
             }
             
             
             
             4) Creation of the CheckBox custom field:
             
             data: {
                entityType: "contact",
                label: "Sample CheckBox",
                fieldType: 3,
                position: 0,
                mask: ""     
             }
             
             
             
             5) Creation of the Heading custom field:
             
             data: {
                entityType: "contact",
                label: "Sample Heading",
                fieldType: 4,
                position: 0,
                mask: "" 
             }
             
             
             
             6) Creation of the Date custom field:
             
             data: {
                entityType: "contact",
                label: "Sample Date",
                fieldType: 5,
                position: 0,
                mask: "" 
             }
             
             
             ]]>
             </example>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCustomFieldValue(System.Int32,System.String,System.String,System.Int32,System.Int32,System.String)">
             <summary>
             Updates the selected custom field with the parameters (entity type, field title, type, etc.) specified in the request.
             </summary>
             <param name="id">Custom field ID</param>
             <param name="entityType" remark="Allowed values: contact, person, company, opportunity, case">New entity type</param>
             <param optional="false" name="label">New field title</param>
             <param name="fieldType" 
             remark="Allowed values: 0 (TextField), 1 (TextArea), 2 (SelectBox), 3 (CheckBox), 4 (Heading) or 5 (Date)">
              New custom field type
             </param>
             <param optional="true" name="position">New field position</param>
             <param optional="true" name="mask" remark="Sent in json format only" >New mask</param>
             <short>Update a custom field</short> 
             <category>Custom fields</category>
             <returns>
             Updated custom field
             </returns>
            <remarks>
             <![CDATA[
              You can update field if there are no related elements. If such elements exist, only label and mask will be updated. Other parameters will be ignored.
             ]]>
             </remarks>
             <exception cref="T:System.ArgumentException"></exception>
             <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteCustomField(System.String,System.Int32)">
            <summary>
            Deletes a custom field with the ID specified in the request.
            </summary>
            <param name="entityType" remark="Allowed values: contact, person, company, opportunity, case">Entity type</param>
            <param name="fieldid">Field ID</param>
            <short>Delete a custom field</short> 
            <category>Custom fields</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Custom field
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCustomFieldsOrder(System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <summary>
            Updates the custom field order with the custom field list specified in the request.
            </summary>
            <param name="fieldids">List of custom field IDs</param>
            <param name="entityType" remark="Allowed values: contact, person, company, opportunity, case">Entity type</param>
            <short>Update the custom field order</short> 
            <category>Custom fields</category>
            <returns>
            Custom fields in the new order
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetDealByID(System.Int32)">
             <summary>
             Returns the detailed information about an opportunity with the ID specified in the request.
             </summary>
             <param name="opportunityid">Opportunity ID</param>
             <returns>
             Opportunity
             </returns>
             <short>Get an opportunity by ID</short> 
             <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateToDealMilestone(System.Int32,System.Int32)">
             <summary>
             Updates the selected opportunity to the stage with the ID specified in the request.
             </summary>
             <param name="opportunityid">Opportunity ID</param>
             <param name="stageid">New opportunity stage ID</param>
             <returns>
             Opportunity with the updated stage
             </returns>
             <short>Update an opportunity stage by ID</short> 
             <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToDeal(System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
             <summary>
             Sets access rights to the selected opportunity with the parameters specified in the request.
             </summary>
             <param name="opportunityid">Opportunity ID</param>
             <param name="isPrivate">Opportunity privacy: private or not</param>
             <param name="accessList">List of users with access rights</param>
             <short>Set access rights to the opportunity</short> 
             <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <returns>
             Opportunity 
             </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToBatchDeal(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{ASC.CRM.Core.DealMilestoneStatus},System.Nullable{System.Boolean},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets access rights to the list of all the opportunities matching the parameters specified in the request.
            </summary>
            <param optional="true" name="responsibleid">Opportunity responsible ID</param>
            <param optional="true" name="opportunityStagesid">Opportunity stage ID</param>
            <param optional="true" name="tags">Opportunity tags</param>
            <param optional="true" name="contactid">Contact ID</param>
            <param optional="true" name="contactAlsoIsParticipant">Participation status: take into account opportunities where the contact is a participant or not</param>
            <param optional="true" name="fromDate">Start date</param>
            <param optional="true" name="toDate">End date</param>
            <param optional="true" name="stageType" remark="Allowed values: {Open, ClosedAndWon, ClosedAndLost}">Opportunity stage type</param>
            <param name="isPrivate">Opportunity privacy: private or not</param>
            <param name="accessList">List of users with access rights</param>
            <short>Set access rights to the filtered opportunities</short> 
            <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            List of opportunities
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetAccessToBatchDeal(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets access rights to the list of opportunities with the IDs specified in the request.
            </summary>
            <param name="opportunityid">List of opportunity IDs</param>
            <param name="isPrivate">Opportunity privacy: private or not</param>
            <param name="accessList">List of users with access rights</param>
            <short>Set access rights to the opportunities by IDs</short> 
            <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            List of opportunities
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchDeals(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes a group of opportunities with the IDs specified in the request.
            </summary>
            <param name="opportunityids">List of opportunity IDs</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <short>Delete opportunities by IDs</short> 
            <category>Opportunities</category>
            <returns>
            List of opportunities
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteBatchDeals(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{ASC.CRM.Core.DealMilestoneStatus},System.Nullable{System.Boolean},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime)">
            <summary>
            Deletes a list of all the opportunities matching the parameters specified in the request.
            </summary>
            <param optional="true" name="responsibleid">Opportunity responsible ID</param>
            <param optional="true" name="opportunityStagesid">Opportunity stage ID</param>
            <param optional="true" name="tags">Opportunity tags</param>
            <param optional="true" name="contactid">Contact ID</param>
            <param optional="true" name="contactAlsoIsParticipant">Participation status: take into account opportunities where the contact is a participant or not</param>
            <param optional="true" name="fromDate">Start date</param>
            <param optional="true" name="toDate">End date</param>
            <param optional="true" name="stageType" remark="Allowed values: {Open, ClosedAndWon, ClosedAndLost}">Opportunity stage type</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <short>Delete filtered opportunities</short> 
            <category>Opportunities</category>
            <returns>
            List of opportunities
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetDeals(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{ASC.CRM.Core.DealMilestoneStatus},System.Nullable{System.Boolean},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime)">
            <summary>
            Returns a list of all the opportunities matching the parameters specified in the request.
            </summary>
            <param optional="true" name="responsibleid">Opportunity responsible ID</param>
            <param optional="true" name="opportunityStagesid">Opportunity stage ID</param>
            <param optional="true" name="tags">Opportunity tags</param>
            <param optional="true" name="contactid">Contact ID</param>
            <param optional="true" name="contactAlsoIsParticipant">Participation status: take into account opportunities where the contact is a participant or not</param>
            <param optional="true" name="fromDate">Start date</param>
            <param optional="true" name="toDate">End date</param>
            <param optional="true" name="stageType" remark="Allowed values: {Open, ClosedAndWon, ClosedAndLost}">Opportunity stage type</param>
            <short>Get filtered opportunities</short> 
            <category>Opportunities</category>
            <returns>
            List of opportunities
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteDeal(System.Int32)">
             <summary>
             Deletes an opportunity with the ID specified in the request.
             </summary>
             <param name="opportunityid">Opportunity ID</param>
             <short>Delete an opportunity</short> 
             <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <returns>
             Opportunity
             </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateDeal(System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String,System.Guid,ASC.CRM.Core.BidType,System.Decimal,System.String,System.Int32,System.Int32,System.Int32,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
             <summary>
             Creates an opportunity with the parameters specified in the request.
             </summary>
             <short>Create an opportunity</short> 
             <param name="contactid">Opportunity primary contact ID</param>
             <param optional="true" name="members">Opportunity participants</param>
             <param name="title">Opportunity title</param>
             <param optional="true" name="description">Opportunity description</param>
             <param name="responsibleid">Opportunity responsible ID</param>
             <param name="bidType" remark="Allowed values: FixedBid, PerHour, PerDay,PerWeek, PerMonth, PerYear">Bid type</param>
             <param optional="true" name="bidValue">Amount of transactions</param>
             <param name="bidCurrencyAbbr" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by api">Currency (abbreviation)</param>
             <param name="perPeriodValue">Amount per period</param>
             <param name="stageid">Stage ID</param>
             <param optional="true" name="successProbability">Opportunity success probability</param>
             <param optional="true" name="actualCloseDate">Actual opportunity closure date</param>
             <param optional="true" name="expectedCloseDate">Expected opportunity closure date</param>
             <param optional="true" name="customFieldList">Custom field list</param>
             <param name="isPrivate">Opportunity privacy: private or not</param>
             <param optional="true" name="accessList">List of users with access rights to the opportunity</param>
             <param name="isNotify" optional="true">Notifies users from the access list about the opportunity</param>
             <category>Opportunities</category>
             <returns>
             Opportunity
             </returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateDeal(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String,System.Guid,ASC.CRM.Core.BidType,System.Decimal,System.String,System.Int32,System.Int32,System.Int32,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.Collections.Generic.IEnumerable{ASC.Api.Collections.ItemKeyValuePair{System.Int32,System.String}},System.Boolean,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
             <summary>
             Updates the selected opportunity with the parameters specified in the request.
             </summary>
             <short>Update an opportunity</short>
            <param name="opportunityid">Opportunity ID</param>
            <param name="contactid">New opportunity primary contact ID</param>
             <param optional="true" name="members">New opportunity participants</param>
             <param name="title">New opportunity title</param>
             <param optional="true" name="description">New opportunity description</param>
             <param name="responsibleid">New opportunity responsible ID</param>
             <param name="bidType" remark="Allowed values: FixedBid, PerHour, PerDay,PerWeek, PerMonth, PerYear">New bid type</param>
             <param optional="true" name="bidValue">New amount of transactions</param>
             <param optional="true" name="bidCurrencyAbbr" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by api">New currency (abbreviation)</param>
             <param name="perPeriodValue">New amount per period</param>
             <param name="stageid">New stage ID</param>
             <param optional="true" name="successProbability">New opportunity success probability</param>
             <param optional="true" name="actualCloseDate">New actual opportunity closure date</param>
             <param optional="true" name="expectedCloseDate">New expected opportunity closure date</param>
             <param optional="true" name="customFieldList">New custom field list</param>
             <param name="isPrivate">New opportunity privacy: private or not</param>
             <param optional="true" name="accessList">New list of users with access rights to the opportunity</param>
             <param name="isNotify" optional="true">Notifies users from the access list about the opportunity</param>
             <category>Opportunities</category>
             <returns>
             Updated opportunity
             </returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetDealMembers(System.Int32)">
             <summary>
             Returns a list of all the contacts related to the opportunity with the ID specified in the request.
             </summary>
             <param name="opportunityid">Opportunity ID</param>
             <short>Get opportunity contacts</short> 
             <category>Opportunities</category>
             <returns>List of contacts</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddMemberToDeal(System.Int32,System.Int32)">
            <summary>
            Adds the selected contact to the opportunity with the ID specified in the request.
            </summary>
            <param name="opportunityid">Opportunity ID</param>
            <param name="contactid">Contact ID</param>
            <short>Add an opportunity contact</short> 
            <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Contact
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteMemberFromDeal(System.Int32,System.Int32)">
            <summary>
            Deletes the selected contact from the opportunity with the ID specified in the request.
            </summary>
            <param name="opportunityid">Opportunity ID</param>
            <param name="contactid">Contact ID</param>
            <short>Delete an opportunity contact</short> 
            <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Contact
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetDealsByPrefix(System.String,System.Int32,System.Boolean)">
            <summary>
            Returns a list of 30 opportunities in the CRM module with a prefix specified in the request.
            </summary>
            <param optional="true" name="prefix">Opportunity prefix</param>
            <param optional="true" name="contactID">Contact ID</param>
            <param optional="true" name="internalSearch">Internal search or not</param>
            <category>Opportunities</category>
            <returns>
            List of opportunities
            </returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetDeals(System.Int32)">
            <summary>
            Returns a list of all the opportunities for the contact with the ID specified in the request.
            </summary>
            <param optional="true" name="contactid">Contact ID</param>
            <short>Get contact opportunities</short> 
            <category>Opportunities</category>
            <returns>
            List of opportunities
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetDealCreationDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
            Sets the opportunity creation date specified in the request.
            </summary>
            <param optional="true" name="opportunityid">Opportunity ID</param>
            <param optional="true" name="creationDate">Opportunity creation date</param>
            <short>Set the opportunity creation date</short> 
            <category>Opportunities</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetDealLastModifedDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
            Sets the opportunity last modified date specified in the request.
            </summary>
            <param optional="true" name="opportunityid">Opportunity ID</param>
            <param optional="true" name="lastModifedDate">Opportunity last modified date</param>
            <short>Set the opportunity last modified date</short> 
            <category>Opportunities</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateDealMilestone(System.String,System.String,System.String,System.Int32,ASC.CRM.Core.DealMilestoneStatus)">
            <summary>
            Creates an opportunity stage with the parameters (title, description, success probability, etc.) specified in the request.
            </summary>
            <param name="title">Stage title</param>
            <param name="description">Stage description</param>
            <param name="color">Stage color</param>
            <param name="successProbability">Stage success probability</param>
            <param name="stageType" remark="Allowed values: 0 (Open), 1 (ClosedAndWon), 2 (ClosedAndLost)">Stage type</param>
            <short>Create an opportunity stage</short> 
            <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Opportunity stage
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateDealMilestone(System.Int32,System.String,System.String,System.String,System.Int32,ASC.CRM.Core.DealMilestoneStatus)">
            <summary>
            Updates the selected opportunity stage with the parameters (title, description, success probability, etc.) specified in the request.
            </summary>
            <param name="id">Opportunity stage ID</param>
            <param name="title">New stage title</param>
            <param name="description">New stage description</param>
            <param name="color">New stage color</param>
            <param name="successProbability">New stage success probability</param>
            <param name="stageType" remark="Allowed values: Open, ClosedAndWon, ClosedAndLost">New stage type</param>
            <short>Update an opportunity stage by parameters</short> 
            <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Updated opportunity stage
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateDealMilestoneColor(System.Int32,System.String)">
            <summary>
            Updates the selected opportunity stage with the color specified in the request.
            </summary>
            <param name="id">Opportunity stage ID</param>
            <param name="color">New stage color</param>
            <short>Update an opportunity stage color</short> 
            <category>Opportunities</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Opportunity stage with the updated color
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateDealMilestonesOrder(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Updates the available order of opportunity stages with a list specified in the request.
            </summary>
            <short>
            Update the order of opportunity stages
            </short>
            <param name="ids">List of opportunity stage IDs</param>
            <category>Opportunities</category>
            <returns>
            Opportunity stages in the new order
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteDealMilestone(System.Int32)">
            <summary>
            Deletes an opportunity stage with the ID specified in the request.
            </summary>
            <short>Delete an opportunity stage</short> 
            <category>Opportunities</category>
            <param name="id">Opportunity stage ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Opportunity stage
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateHistoryCategory(System.String,System.String,System.String,System.Int32)">
             <summary>
             Creates a new history category with the parameters (title, description, etc.) specified in the request.
             </summary>
            <param name="title">History category title</param>
            <param name="description">History category description</param>
            <param name="sortOrder">History category order</param>
            <param name="imageName">Image name of the history category</param>
            <short>Create a history category</short> 
             <category>History</category>
            <returns>History category</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateHistoryCategory(System.Int32,System.String,System.String,System.String,System.Int32)">
             <summary>
             Updates the selected history category with the parameters (title, description, etc.) specified in the request.
             </summary>
            <param name="id">History category ID</param>
            <param name="title">New history category title</param>
            <param name="description">New history category description</param>
            <param name="sortOrder">New history category order</param>
            <param name="imageName">New image name of the history category </param>
            <short>Update a history category</short> 
            <category>History</category>
            <returns>Updated history category</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateHistoryCategoryIcon(System.Int32,System.String)">
            <summary>
            Updates an icon of a history category with the ID specified in the request.
            </summary>
            <param name="id">History category ID</param>
            <param name="imageName">New icon name of the history category</param>
            <short>Update a history category icon</short> 
            <category>History</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            History category with the updated icon
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateHistoryCategoriesOrder(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the order of the history categories with a list specified in the request.
            </summary>
            <short>
            Update the order of history categories
            </short>
            <param name="titles">List of history category titles</param>
            <category>History</category>
            <returns>
            History categories in the new order
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteHistoryCategory(System.Int32)">
            <summary>
            Deletes a history category with the ID specified in the request.
            </summary>
            <short>Delete a history category</short> 
            <category>History</category>
            <param name="id">History category ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Security.SecurityException"></exception>
            <returns>History category</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateTaskCategory(System.String,System.String,System.String,System.Int32)">
             <summary>
             Creates a new task category with the parameters (title, description, etc.) specified in the request.
             </summary>
            <param name="title">Task category title</param>
            <param name="description">Task category description</param>
            <param name="sortOrder">Task category order</param>
            <param name="imageName">Image name of task category</param>
            <short>Create a task category</short> 
            <category>Tasks</category>
            <returns>Task category</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateTaskCategory(System.Int32,System.String,System.String,System.String,System.Int32)">
             <summary>
             Updates the selected task category with the parameters (title, description, etc.) specified in the request.
             </summary>
            <param name="id">Task category ID</param>
            <param name="title">New task category title</param>
            <param name="description">New task category description</param>
            <param name="sortOrder">New task category order</param>
            <param name="imageName">New image name of task category</param>
            <short>Update a task category</short> 
            <category>Tasks</category>
            <returns>Updated task category</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateTaskCategoryIcon(System.Int32,System.String)">
            <summary>
            Updates an icon of the task category with the ID specified in the request.
            </summary>
            <param name="id">Task category ID</param>
            <param name="imageName">New icon name of task category</param>
            <short>Update a task category icon</short> 
            <category>Tasks</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Task category with the updated icon
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateTaskCategoriesOrder(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the order of the task categories with a list specified in the request.
            </summary>
            <short>
            Update the order of task categories
            </short>
            <param name="titles">List of task category titles</param>
            <category>Tasks</category>
            <returns>
            Task categories in the new order
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteTaskCategory(System.Int32,System.Int32)">
             <summary>
             Deletes a task category with the ID specified in the request.
             </summary>
             <short>Delete a task category</short> 
             <category>Tasks</category>
             <param name="categoryid">Task category ID</param>
             <param name="newcategoryid">Task category ID to replace the deleted category in the tasks with the current task category</param>
             <returns>Task category</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateContactStatus(System.String,System.String,System.String,System.Int32)">
             <summary>
             Creates a new contact status with the parameters (title, description, etc.) specified in the request.
             </summary>
            <param name="title">Contact status title</param>
            <param name="description">Contact status description</param>
            <param name="color">Contact status color</param>
            <param name="sortOrder">Contact status sort order</param>
            <returns>Contact status</returns>
             <short>Create a contact status</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactStatus(System.Int32,System.String,System.String,System.String,System.Int32)">
             <summary>
             Updates the selected contact status with the parameters (title, description, etc.) specified in the request.
             </summary>
            <param name="id">Contact status ID</param>
            <param name="title">New contact status title</param>
            <param name="description">New contact status description</param>
            <param name="color">New contact status color</param>
            <param name="sortOrder">New contact status sort order</param>
            <returns>Updated contact status</returns>
             <short>Update a contact status</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactStatusColor(System.Int32,System.String)">
            <summary>
            Updates a color of the selected contact status with a new color specified in the request.
            </summary>
            <param name="id">Contact status ID</param>
            <param name="color">New contact status color</param>
            <short>Update a contact status color</short> 
            <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Contact status with the new color
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactStatusesOrder(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the order of the contact statuses with a list specified in the request.
            </summary>
            <short>
            Update the order of contact statuses
            </short>
            <param name="titles">List of contact status titles</param>
            <category>Contacts</category>
            <returns>
            Contact statuses in the new order
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteContactStatus(System.Int32)">
             <summary>
             Deletes a contact status with the ID specified in the request.
             </summary>
             <short>Delete a contact status</short> 
             <category>Contacts</category>
             <param name="contactStatusid">Contact status ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Security.SecurityException"></exception>
             <returns>
             Contact status
             </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactStatusByID(System.Int32)">
             <summary>
             Returns a contact status with the ID specified in the request.
             </summary>
             <param name="contactStatusid">Contact status ID</param>
             <returns>Contact status</returns>
             <short>Get a contact status</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateContactType(System.String,System.Int32)">
             <summary>
             Creates a new contact type with the parameters (title, etc.) specified in the request.
             </summary>
            <param name="title">Contact type title</param>
            <param name="sortOrder">Contact type sort order</param>
            <returns>Contact type</returns>
             <short>Create a contact type</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactType(System.Int32,System.String,System.Int32)">
             <summary>
             Updates the selected contact type with the parameters (title, description, etc.) specified in the request.
             </summary>
            <param name="id">Contact type ID</param>
            <param name="title">New contact type title</param>
            <param name="sortOrder">New contact type order</param>
            <returns>Updated contact type</returns>
             <short>Update a contact type</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateContactTypesOrder(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the order of the contact types with a list specified in the request.
            </summary>
            <short>
            Update the order of contact types
            </short>
            <param name="titles">List of contact type titles</param>
            <category>Contacts</category>
            <returns>
            Contact types in the new order
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteContactType(System.Int32)">
             <summary>
             Deletes a contact type with the ID specified in the request.
             </summary>
             <short>Delete a contact type</short> 
             <category>Contacts</category>
             <param name="contactTypeid">Contact type ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Security.SecurityException"></exception>
             <returns>
             Contact type
             </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactTypeByID(System.Int32)">
             <summary>
             Returns a contact type with the ID specified in the request.
             </summary>
             <param name="contactTypeid">Contact type ID</param>
             <returns>Contact type</returns>
             <short>Get a contact type</short> 
             <category>Contacts</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetDealMilestoneByID(System.Int32)">
             <summary>
             Returns an opportunity stage with the ID specified in the request.
             </summary>
             <param name="stageid">Opportunity stage ID</param>
             <returns>Opportunity stage</returns>
             <short>Get an opportunity stage</short> 
             <category>Opportunities</category>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetTaskCategoryByID(System.Int32)">
             <summary>
             Returns a task category with the ID specified in the request.
             </summary>
             <param name="categoryid">Task category ID</param>
             <returns>Task category</returns>
             <short>Get a task category</short> 
             <category>Tasks</category>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetHistoryCategoryWrapper">
            <summary>
            Returns a list of all the history categories available on the portal.
            </summary>
            <short>Get all history categories</short> 
            <category>History</category>
            <returns>
            List of all the history categories
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetTaskCategories">
            <summary>
            Returns a list of all the task categories available on the portal.
            </summary>
            <short>Get all task categories</short> 
            <category>Tasks</category>
            <returns>
            List of all the task categories
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactStatuses">
             <summary>
             Returns a list of all the contact statuses available on the portal.
             </summary>
             <short>Get all contact statuses</short> 
             <category>Contacts</category>
             <returns>
            List of all the contact statuses
             </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactTypes">
            <summary>
            Returns a list of all the contact types available on the portal.
            </summary>
            <short>Get all contact types</short> 
            <category>Contacts</category>
            <returns>
            List of all the contact types
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetDealMilestones">
            <summary>
            Returns a list of all the opportunity stages available on the portal.
            </summary>
            <short>Get all opportunity stages</short> 
            <category>Opportunities</category>
            <returns>
            List of all the opportunity stages
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetHistory(System.String,System.Int32,System.Int32,System.Guid,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime)">
            <summary>
            Returns a list of all the events matching the parameters specified in the request.
            </summary>
            <short>
            Get filtered events
            </short>
            <category>History</category>
            <param optional="true" name="entityType" remark="Allowed values: opportunity, contact or case">Related entity type</param>
            <param optional="true" name="entityId">Related entity ID</param>
            <param optional="true" name="categoryId">Event category ID</param>
            <param optional="true" name="createBy">Event author</param>
            <param optional="true" name="fromDate">Earliest event due date</param>
            <param optional="true" name="toDate">Latest event due date</param>
            <returns>
            Event list
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteHistory(System.Int32)">
            <summary>
            Deletes an event with the ID specified in the request and all the files associated with this event.
            </summary>
            <short>
            Delete an event and related files
            </short>
            <category>History</category>
            <param name="id">Event ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            Event
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateTextFile(System.String,System.Int32,System.String,System.String)">
            <summary>
            Creates a text (.txt) file in the selected folder with the title and contents specified in the request.
            </summary>
            <short>Create a text file</short>
            <category>Files</category>
            <param optional = "true" name="entityType" remark="Allowed values: opportunity, contact or case">Related entity type</param>
            <param optional="true" name="entityid">Related entity ID</param>
            <param name="title">File title</param>
            <param name="content">File contents</param>
            <returns>
            File information
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UploadFileInCRM(System.String,System.Int32,System.IO.Stream,System.Net.Mime.ContentType,System.Net.Mime.ContentDisposition,System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase},System.Boolean)">
            <summary>
            Uploads a file to the CRM module with the parameters specified in the request.
            </summary>
            <short>Upload a file</short>
            <category>Files</category>
            <remarks>
            <![CDATA[
             Upload can be done in 2 different ways:
             <ol>
            <li>Single file upload. You should set the Content-Type &amp; Content-Disposition headers to specify file name and content type, and send a file in the request body.</li>
            <li>Using standart multipart/form-data method.</li>
            </ol>]]>
            </remarks>
            <param optional="true" name="entityType" remark="Allowed values: opportunity, contact or case">Related entity type</param>
            <param optional="true" name="entityid">Related entity ID</param>
            <param name="file" visible="false">Request input stream</param>
            <param name="contentType" visible="false">Content-Type header</param>
            <param name="contentDisposition" visible="false">Content-Disposition header</param>
            <param name="files" visible="false">List of files when posted as multipart/form-data</param>
            <param name="storeOriginalFileFlag" visible="false">Defines if the documents in the original formats are also uploaded or not</param>
            <returns>
            File informatin
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddHistoryTo(System.String,System.Int32,System.Int32,System.String,System.Int32,ASC.Specific.ApiDateTime,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Creates an event with the parameters specified in the request.
            </summary>
            <short>
            Create an event
            </short>
            <category>History</category>
            <param optional="true" name="contactId">Contact ID</param>
            <param optional="true" name="entityType" remark="Allowed values: opportunity or case">Related entity type</param>
            <param optional="true" name="entityId">Related entity ID</param>
            <remarks>
            <![CDATA[
             You should obligatorily set a value for 'contactId' if 'entityId' is not set or the values for the 'entityId' and 'entityType' parameters if 'contactId' is not set.
            ]]>
            </remarks>
            <param optional="false" name="content">Event contents</param>
            <param optional="false" name="categoryId">Event category ID</param>
            <param optional="true" name="created">Event creation date</param>
            <param optional="true" name="fileId">List of file IDs for the current event</param>
            <param optional="true" name="notifyUserList">List of users who will be notified about the event</param>
            <returns>
            Created event
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AttachFiles(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Attaches the selected file(s) to the entity specified in the request.
            </summary>
            <short>
            Attach files to the entity
            </short>
            <param name="entityType">Entity type</param>
            <param name="entityid">Entity ID</param>
            <param name="fileids">List of IDs of the files</param>
            <category>Files</category>
            <returns>Entity with the file(s) attached</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetRootFolderID">
            <summary>
            Returns the ID for the root folder used to store the files for the CRM module.
            </summary>
            <short>Get root folder ID</short> 
            <category>Files</category>
            <returns>
            Root folder ID
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetFiles(System.String,System.Int32)">
            <summary>
            Returns a list of all the files for the entity with the ID and type specified in the request.
            </summary>
            <param name="entityType">Entity type</param>
            <param name="entityid">Entity ID</param>
            <short>Get entity files</short> 
            <category>Files</category>
            <returns>
            List of files
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteCRMFile(System.Int32)">
            <summary>
            Deletes a file with the ID specified in the request.
            </summary>
            <short>Delete a file</short> 
            <category>Files</category>
            <param name="fileid">File ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
            File information
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetFiles">
            <summary>Returns a list of all the user report files.</summary>
            <short>Get report files</short>
            <category>Reports</category>
            <returns>Report files</returns>
            <exception cref="T:System.Security.SecurityException">if user can't create reports</exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteFile(System.Int32)">
            <summary>Deletes a report file with the ID specified in the request.</summary>
            <param name="fileid">File ID</param>
            <short>Delete a report file</short>
            <category>Reports</category>
            <exception cref="T:System.Security.SecurityException">if user can't create reports</exception>
            <exception cref="T:System.ArgumentException">if file ID is less than 0</exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException">if file is not found</exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetStatus">
            <summary>Returns a state of the report generation task.</summary>
            <short>Get report generation state</short>
            <category>Reports</category>
            <returns>Report state</returns>
            <exception cref="T:System.Security.SecurityException">if user can't create reports</exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.Terminate">
            <summary>Terminates the report generation task.</summary>
            <short>Terminate the report generation</short>
            <category>Reports</category>
            <exception cref="T:System.Security.SecurityException">if user can't create reports</exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CheckReportData(ASC.CRM.Core.ReportType,ASC.CRM.Core.ReportTimePeriod,System.Guid[])">
            <summary>Checks report data for the parameters specified in the request.</summary>
            <param name="type">Report type</param>
            <param name="timePeriod">Time period</param>
            <param name="managers">Managers</param>
            <short>Check report data</short>
            <category>Reports</category>
            <returns>Report information</returns>
            <exception cref="T:System.Security.SecurityException">if user can't create reports</exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GenerateReport(ASC.CRM.Core.ReportType,ASC.CRM.Core.ReportTimePeriod,System.Guid[])">
            <summary>Runs the report generation task with the parameters specified in the request.</summary>
            <param name="type">Report type</param>
            <param name="timePeriod">Time period</param>
            <param name="managers">Managers</param>
            <short>Generate a report</short>
            <category>Reports</category>
            <returns>Report state</returns>
            <exception cref="T:System.Security.SecurityException">if user can't create reports</exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetEntityTags(System.String,System.Int32)">
             <summary>
              Returns a list of all the tags related to the entity with the ID and type specified in the request.
             </summary>
             <param name="entityType" remark="Allowed values: contact, opportunity, case">Entity type</param>
             <param name="entityid">Entity ID</param>
             <short>Get entity tags</short> 
             <category>Tags</category>
             <returns>
             Tag
             </returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetContactTags(System.Int32)">
             <summary>
             Returns a list of all the tags for the contact with the ID specified in the request.
             </summary>
             <param name="contactid">Contact ID</param>
             <short>Get contact tags</short> 
             <category>Tags</category>
             <returns>
             List of contact tags
             </returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateTag(System.String,System.String)">
             <summary>
              Creates a tag for the selected entity with a tag name specified in the request.
             </summary>
             <param name="entityType" remark="Allowed values: contact, opportunity, case">Entity type</param>
             <param name="tagName">Tag name</param>
             <short>Create a tag</short> 
             <category>Tags</category>
             <returns>
             Tag
             </returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetAllTags(System.String)">
             <summary>
              Returns a list of all the tags associated with the entity type specified in the request.
             </summary>
             <param name="entityType" remark="Allowed values: contact, opportunity, case">Entity type</param>
             <short>Get tags for entity type</short>
             <category>Tags</category>
             <returns>
             Tag
             </returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddTagToBatch(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <summary>
            Adds a tag to the entities with the IDs specified in the request.
            </summary>
            <short>Add a tag to the entities</short> 
            <category>Tags</category>
            <param name="entityType" remark="Allowed values: contact,opportunity,case">Entity type</param>
            <param name="entityid">List of entity IDs</param>
            <param name="tagName">Tag name</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Tag
            </returns> 
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddTagToBatchContacts(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,ASC.CRM.Core.ContactListViewType,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.String)">
            <summary>
            Adds the selected tag to the group of contacts with the parameters specified in the request.
            </summary>
            <short>Add a tag to a contact group</short> 
            <category>Tags</category>
            <param optional="true" name="tags">Contact tags</param>
            <param optional="true" name="contactStage">Contact stage ID (warmth)</param>
            <param optional="true" name="contactType">Contact type ID</param>
            <param optional="true" name="contactListView" remark="Allowed values: Company, Person, WithOpportunity">Contact list view</param>
            <param optional="true" name="fromDate">Start date</param>
            <param optional="true" name="toDate">End date</param>
            <param name="tagName">Tag name</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Tag
            </returns> 
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddTagToBatchDeals(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{ASC.CRM.Core.DealMilestoneStatus},System.Nullable{System.Boolean},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.String)">
            <summary>
            Adds the selected tag to the group of opportunities with the parameters specified in the request.
            </summary>
            <short>Add a tag to an opportunity group</short> 
            <category>Tags</category>
            <param optional="true" name="responsibleid">Opportunity responsible ID</param>
            <param optional="true" name="opportunityStagesid">Opportunity stage ID</param>
            <param optional="true" name="tags">Opportunity tags</param>
            <param optional="true" name="contactid">Contact ID</param>
            <param optional="true" name="contactAlsoIsParticipant">Participation status: take into account opportunities where the contact is a participant or not</param>
            <param optional="true" name="fromDate">Start date</param>
            <param optional="true" name="toDate">End date</param>
            <param optional="true" name="stageType" remark="Allowed values: {Open, ClosedAndWon, ClosedAndLost}">Opportunity stage type</param>
            <param name="tagName">Tag name</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Tag
            </returns> 
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddTagToBatchCases(System.Int32,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Adds the selected tag to the group of cases with the parameters specified in the request.
            </summary>
            <short>Add a tag to a case group</short> 
            <category>Tags</category>
            <param optional="true" name="contactid">Contact ID</param>
            <param optional="true" name="isClosed">Case status</param>
            <param optional="true" name="tags">Case tags</param>
            <param name="tagName">Tag name</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Tag
            </returns> 
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteUnusedTag(System.String)">
            <summary>
            Deletes all the unused tags from the entities with the type specified in the request.
            </summary>
            <short>Delete unused tags</short> 
            <category>Tags</category>
            <param name="entityType" remark="Allowed values: contact, opportunity, case">Entity type</param>
            <returns>Tags</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddTagTo(System.String,System.Int32,System.String)">
            <summary>
             Adds the selected tag to the entity with the type and ID specified in the request.
            </summary>
            <short>Add a tag to the entity</short> 
            <category>Tags</category>
            <param name="entityType" remark="Allowed values: contact, opportunity, case">Entity type</param>
            <param name="entityid">Entity ID</param>
            <param name="tagName">Tag name</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Tag
            </returns> 
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddContactTagToGroup(System.String,System.Int32,System.String)">
            <summary>
            Adds the selected tag to the entity (company or person) specified in the request and to all the related contacts.
            </summary>
            <short>Add a tag to the entity and related contacts</short> 
            <param name="entityType" remark="Allowed values: company, person">Entity type</param>
            <param name="entityid">Entity ID</param>
            <param name="tagName">Tag name</param>
            <category>Tags</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Exception"></exception>
            <returns>
            Tag
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteTag(System.String,System.String)">
             <summary>
             Deletes the selected tag from the entities with the type specified in the request.
             </summary>
             <short>Delete a tag from the entities</short> 
             <param name="entityType" remark="Allowed values: contact,opportunity,case">Entity type</param>
             <param name="tagName">Tag name</param>
             <category>Tags</category>
             <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
             <returns>
             Tag
             </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteTagFrom(System.String,System.Int32,System.String)">
            <summary>
             Deletes the selected tag from the entity with the type and ID specified in the request.
            </summary>
            <short>Delete a tag from the entity</short> 
            <category>Tags</category>
            <param name="entityType" remark="Allowed values: contact,opportunity,case">Entity type</param>
            <param name="entityid">Entity ID</param>
            <param name="tagName">Tag name</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
             Tag
            </returns> 
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteContactTagFromGroup(System.String,System.Int32,System.String)">
            <summary>
            Deletes the selected tag from the entity (company or person) specified in the request and from all the related contacts.
            </summary>
            <short>Delete a tag from the entity and related contacts</short> 
            <param name="entityType" remark="Allowed values: company, person">Entity type</param>
            <param name="entityid">Entity ID</param>
            <param name="tagName">Tag name</param>
            <category>Tags</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <exception cref="T:System.Exception"></exception>
            <returns>
             Tag
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetTaskByID(System.Int32)">
             <summary>
              Returns the detailed information about a task with the ID specified in the request.
             </summary>
             <param name="taskid">Task ID</param>
             <returns>Task</returns>
             <short>Get task by ID</short> 
             <category>Tasks</category>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetAllTasks(System.Guid,System.Int32,System.Nullable{System.Boolean},ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.String,System.Int32)">
            <summary>
             Returns a list of tasks matching the parameters specified in the request.
            </summary>
            <param optional="true" name="responsibleid">Task responsible ID</param>
            <param optional="true" name="categoryid">Task category ID</param>
            <param optional="true" name="isClosed">Task status</param>
            <param optional="true" name="fromDate">Earliest task due date</param>
            <param optional="true" name="toDate">Latest task due date</param>
            <param name="entityType" remark="Allowed values: opportunity, contact or case">Related entity type</param>
            <param name="entityid">Related entity ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <short>Get tasks</short> 
            <category>Tasks</category>
            <returns>
            List of all tasks
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ReOpenTask(System.Int32)">
            <summary>
            Reopens a task with the ID specified in the request.
            </summary>
            <short>Reopen a task</short> 
            <category>Tasks</category>
            <param name="taskid">Task ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Task
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CloseTask(System.Int32)">
            <summary>
            Closes a task with the ID specified in the request.
            </summary>
            <short>Close a task</short> 
            <category>Tasks</category>
            <param name="taskid">Task ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <returns>
            Task
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteTask(System.Int32)">
            <summary>
            Deletes a task with the ID specified in the request.
            </summary>
            <short>Delete a task</short> 
            <category>Tasks</category>
            <param name="taskid">Task ID</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <returns>
             Deleted task
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateTask(System.String,System.String,ASC.Specific.ApiDateTime,System.Guid,System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
             Creates a task with the parameters (title, description, due date, etc.) specified in the request.
            </summary>
            <param name="title">Task title</param>
            <param optional="true"  name="description">Task description</param>
            <param name="deadline">Task due date</param>
            <param name="responsibleId">Task responsible ID</param>
            <param name="categoryId">Task category ID</param>
            <param optional="true"  name="contactId">Contact ID</param>
            <param optional="true"  name="entityType" remark="Allowed values: opportunity or case">Related entity type</param>
            <param optional="true"  name="entityId">Related entity ID</param>
            <param optional="true"  name="isNotify">Notifies the responsible about the task</param>
            <param optional="true"  name="alertValue">Time period in minutes to remind the responsible of the task</param>
            <exception cref="T:System.ArgumentException"></exception>
            <short>Create a task</short> 
            <category>Tasks</category>
            <returns>Task</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateTaskGroup(System.String,System.String,ASC.Specific.ApiDateTime,System.Guid,System.Int32,System.Int32[],System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
             Creates a group of the same task with the parameters (title, description, due date, etc.) specified in the request for several contacts.
            </summary>
            <param name="title">Task title</param>
            <param optional="true"  name="description">Task description</param>
            <param name="deadline">Task due date</param>
            <param name="responsibleId">Task responsible ID</param>
            <param name="categoryId">Task category ID</param>
            <param name="contactId">List of contact IDs</param>
            <param optional="true"  name="entityType" remark="Allowed values: opportunity or case">Related entity type</param>
            <param optional="true"  name="entityId">Related entity ID</param>
            <param optional="true"  name="isNotify">Notifies the responsible about the task</param>
            <param optional="true"  name="alertValue">Time period in minutes to remind the responsible of the task</param>
            <exception cref="T:System.ArgumentException"></exception>
            <short>Create a task group</short> 
            <category>Tasks</category>
            <returns>Tasks</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateTask(System.Int32,System.String,System.String,ASC.Specific.ApiDateTime,System.Guid,System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
             Updates the selected task with the parameters (title, description, due date, etc.) specified in the request.
            </summary>
            <param name="taskid">Task ID</param>
            <param name="title">New task title</param>
            <param name="description">New task description</param>
            <param name="deadline">New task due date</param>
            <param name="responsibleid">New task responsible ID</param>
            <param name="categoryid">New task category ID</param>
            <param name="contactid">New contact ID</param>
            <param name="entityType" remark="Allowed values: opportunity or case">New related entity type</param>
            <param name="entityid">New related entity ID</param>
            <param name="isNotify">Notifies the responsible about the task</param>
            <param optional="true"  name="alertValue">New time period in minutes to remind the responsible of the task</param>
            <short>Update a task</short> 
            <category>Tasks</category>
            <returns>Task</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetTaskCreationDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
             Sets the creation date to the task with the ID specified in the request.
            </summary>
            <param name="taskId">Task ID</param>
            <param name="creationDate">Task creation date</param>
            <short>Set the task creation date</short> 
            <category>Tasks</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetTaskLastModifedDate(System.Int32,ASC.Specific.ApiDateTime)">
            <summary>
             Sets the last modified date to the task with the ID specified in the request.
            </summary>
            <param name="taskId">Task ID</param>
            <param name="lastModifedDate">Task last modified date</param>
            <short>Set the task last modified date</short> 
            <category>Tasks</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateTaskTemplateContainer(System.String,System.String)">
            <summary>
            Creates a new task template container with the type and title specified in the request.
            </summary>
            <param name="entityType">Entity type</param>
            <param name="title">Template container title</param>
            <short>Create a task template container</short> 
            <category>Task templates</category>
            <returns>
            Task template container
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetTaskTemplateContainers(System.String)">
            <summary>
            Returns a complete list of all the task template containers available on the portal.
            </summary>
            <param name="entityType">Entity type</param>
            <short>Get task template containers</short> 
            <category>Task templates</category>
            <returns>
            List of task template containers
            </returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteTaskTemplateContainer(System.Int32)">
            <summary>
            Deletes a task template container with the ID specified in the request.
            </summary>
            <param name="containerid">Task template container ID</param>
            <short>Delete a task template container</short> 
            <category>Task templates</category>
            <returns>
            Deleted task template container
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateTaskTemplateContainer(System.Int32,System.String)">
            <summary>
            Updates a task template container with the ID specified in the request.
            </summary>
            <param name="containerid">Task template container ID</param>
            <param name="title">New template container title</param>
            <short>Update a task template container</short> 
            <category>Task templates</category>
            <returns>
            Updated task template container
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetTaskTemplateContainerByID(System.Int32)">
            <summary>
            Returns the detailed information on the task template container with the ID specified in the request.
            </summary>
            <param name="containerid">Task template container ID</param>
            <short>Get a task template container by ID</short> 
            <category>Task templates</category>
            <returns>
            Task template container
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetTaskTemplates(System.Int32)">
            <summary>
            Returns a list of all the tasks in the container with the ID specified in the request.
            </summary>
            <param name="containerid">Task template container ID</param>
            <short>Get container tasks</short> 
            <category>Task templates</category>
            <returns>
            List of task templates
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CreateTaskTemplate(System.Int32,System.String,System.String,System.Guid,System.Int32,System.Boolean,System.Int64,System.Boolean)">
            <summary>
            Creates a new task template with the parameters specified in the request in the container with the selected ID.
            </summary>
            <param name="containerid">Task template container ID</param>
            <param name="title">Task template title</param>
            <param name="description">Task template description</param>
            <param name="responsibleid">Task template responsible ID</param>
            <param name="categoryid">Task template category ID</param>
            <param name="isNotify">Responsible notification: notifies or not</param>
            <param name="offsetTicks">Tick offset</param>
            <param name="deadLineIsFixed">Defines if the deadline is fixed or not</param>
            <short>Create a task template</short> 
            <category>Task templates</category>
            <returns>Task template</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateTaskTemplate(System.Int32,System.Int32,System.String,System.String,System.Guid,System.Int32,System.Boolean,System.Int64,System.Boolean)">
            <summary>
            Updates the selected task template with the parameters specified in the request.
            </summary>
            <param name="id">Task template ID</param>
            <param name="containerid">New task template container ID</param>
            <param name="title">New task template title</param>
            <param name="description">New task template description</param>
            <param name="responsibleid">New task template responsible ID</param>
            <param name="categoryid">New task template category ID</param>
            <param name="isNotify">Responsible notification: notifies or not</param>
            <param name="offsetTicks">New tick offset</param>
            <param name="deadLineIsFixed">Defines if the deadline is fixed or not</param>
            <short>Update a task template</short> 
            <category>Task templates</category>
            <returns>Task template</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteTaskTemplate(System.Int32)">
            <summary>
            Deletes a task template with the ID specified in the request.
            </summary>
            <param name="id">Task template ID</param>
            <short>Delete a task template</short> 
            <category>Task templates</category>
            <returns>Task template</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetTaskTemplateByID(System.Int32)">
            <summary>
            Returns a task template with the ID specified in the request.
            </summary>
            <param name="id">Task template ID</param>
            <short>Get a task template by ID</short> 
            <category>Task templates</category>
            <returns>Task template</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetAvaliableCurrency">
            <summary>
            Returns a list of all the currencies currently available on the portal.
            </summary>
            <short>Get available currencies</short> 
            <category>Common</category>
            <returns>
            List of available currencies
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ConvertAmount(System.Decimal,System.String,System.String)">
            <summary>
            Returns a result of converting one currency into another.
            </summary>
            <param name="amount">Amount to convert</param>
            <param name="fromcurrency">Currency to be converted</param>
            <param name="tocurrency">Currency into which the original currency will be converted</param>
            <short>Convert a currency</short> 
            <category>Common</category>
            <returns>
            Decimal result of converting
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetSummaryTable(System.String)">
            <summary>
            Returns a summary table with the rates for the currency specified in the request.
            </summary>
            <param name="currency" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by api">Currency (abbreviation)</param>
            <short>Get currency rates</short> 
            <category>Common</category>
            <returns>
            Dictionary of currency rates
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCRMContactStatusSettings(System.Nullable{System.Boolean})">
            <summary>
            Updates the contact status setting with the parameter specified in the request.  
            </summary>
            <param name="changeContactStatusGroupAuto" remark="true, false or null">Defines if the contact status setting is changed automatically or not</param>
            <short>Update the contact status setting</short> 
            <category>Contacts</category>
            <returns>
            Updated contact status setting value (true, false or null)
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCRMWriteMailToHistorySettings(System.Boolean)">
            <summary>
            Updates the setting for writing mails to the history with the parameter specified in the request.   
            </summary>
            <param name="writeMailToHistoryAuto" remark="true or false">Defines if the mails are written to the history automatically or not</param>
            <short>Update the setting for writing mails to the history</short> 
            <category>Contacts</category>
            <returns>
            Updated setting for writing mails to the history (true or false)
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCRMContactTagSettings(System.Nullable{System.Boolean})">
            <summary>
            Updates the setting for adding tags to the contact with the parameter specified in the request.    
            </summary>
            <param name="addTagToContactGroupAuto" remark="true, false or null">Defines if a tag is added to the contact automatically or not</param>
            <short>Update the setting for adding tags to the contact</short> 
            <category>Contacts</category>
            <returns>
            Setting for adding tags to contact (true, false or null)
            </returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SetIsPortalConfigured(System.Nullable{System.Boolean},System.Nullable{System.Guid})">
            <summary>
            Sets the tenant setting for portal configuration and website contact form key specified in the request.
            </summary>
            <param name="configured">Defines if the tenant setting for portal configuration is set or not</param>
            <param name="webFormKey">Website contact form key</param>
            <short>Set the tenant setting</short> 
            <category>Common</category>
            <returns>
            Tenant setting for portal configuration value (true or false)
            </returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateOrganisationSettingsCompanyName(System.String)">
            <summary>
             Updates a company name with the one specified in the request.
            </summary>
            <param name="companyName">New company name</param>
            <short>Update a company name</short>
            <category>Organisation</category>
            <returns>Updated company name</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateOrganisationSettingsCompanyAddress(System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Updates the company address with the one specified in the request.
            </summary>
            <param name="street">New company street/building/apartment</param>
            <param name="city">New company city</param>
            <param name="state">New company state</param>
            <param name="zip">New company zip</param>
            <param name="country">New company country</param>
            <short>Update the company address</short>
            <category>Organisation</category>
            <returns>Updated company address</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateOrganisationSettingsLogo(System.Boolean)">
            <summary>
             Updates the organisation logo setting with the parameter specified in the request.
            </summary>
            <param name="reset">Resets organisation logo or not</param>
            <short>Update the organisation logo setting</short>
            <category>Organisation</category>
            <returns>Organisation logo ID</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetOrganisationSettingsLogo(System.Int32)">
            <summary>
             Returns an organisation logo with the ID specified in the request in the base64 format.
            </summary>
            <param name="id" remark="If this parameter is equal to 0, then the current logo is taken">Organisation logo ID</param>
            <short>Get an organisation logo</short>
            <category>Organisation</category>
            <returns>Organisation logo in the base64 format</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ChangeWebToLeadFormKey">
            <summary>
             Updates the website contact form key.
            </summary>
            <short>Update web form key</short>
            <category>Common</category>
            <returns>Updated web form key</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateCRMCurrency(System.String)">
            <summary>
            Updates the default CRM currency with the currency specified in the request.
            </summary>
            <param name="currency" remark="Allowed values: EUR, RUB etc. You can get the whole list of available currencies by api">Currency (abbreviation)</param>
            <short>Update a currency</short>
            <category>Common</category>
            <returns>Updated currency</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.StartImportFromCSV(System.String,System.String,System.String)">
            <summary>
            Starts the import from the csv file specified in the request.
            </summary>
            <param name="entityType" remark="Allowed values: contact, task, opportunity, case">Entity type</param>
            <param name="csvFileURI">URI to the csv file</param>
            <param name="jsonSettings">JSON settings in the string format</param>
            <short>Start import from csv file</short>
            <category>Common</category>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetImportFromCSVStatus(System.String)">
            <summary>
            Returns a status of import from the csv file.
            </summary>
            <param name="entityType" remark="Allowed values: contact, task, opportunity, case">Entity type</param>
            <short>Get import status</short>
            <category>Common</category>
            <returns>Import status</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetImportFromCSVSampleRow(System.String,System.Int32,System.String)">
            <summary>
            Returns a sample row from the imported csv file specified in the request.
            </summary>
            <param name="csvFileURI">URI to the csv file</param>
            <param name="indexRow">Sample row index</param>
            <param name="jsonSettings">JSON settings in the string format</param>
            <short>Get a sample row</short>
            <category>Common</category>
            <returns>Sample row</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ProcessUploadFake(System.String,System.String)">
            <summary>
            Processes the fake upload of the csv file specified in the request.
            </summary>
            <param name="csvFileURI">URI to the csv file</param>
            <param name="jsonSettings">JSON settings in the string format</param>
            <short>Process fake upload</short>
            <category>Common</category>
            <returns>Uploaded file</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetExportStatus">
            <summary>
            Returns a status of export to the csv file.
            </summary>
            <short>Get export status</short>
            <category>Common</category>
            <returns>Export status</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CancelExport">
            <summary>
            Cancels the export to the csv file.
            </summary>
            <short>Cancel export to csv file</short>
            <category>Common</category>
            <returns>Export status</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.StartExport">
            <summary>
            Starts the export to the csv file.
            </summary>
            <short>Start export to csv file</short>
            <category>Common</category>
            <returns>Export data operation</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetPartialExportStatus">
            <summary>
            Returns a status of partial export to the csv file.
            </summary>
            <short>Get status of partial export</short>
            <category>Common</category>
            <returns>Partial export status</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.CancelPartialExport">
            <summary>
            Cancels the partial export to the csv file.
            </summary>
            <short>Cancel partial export to csv file</short>
            <category>Common</category>
            <returns>Partial export status</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.StartPartialExport(System.String,System.String)">
            <summary>
            Starts the partial export to the csv file.
            </summary>
            <param name="entityType" remark="Allowed values: contact, task, opportunity, case, invoiceitem">Entity type</param>
            <param name="base64FilterString">Filter string in the base64 format</param>
            <short>Start partial export to csv file</short>
            <category>Common</category>
            <returns>Export data operation</returns>
            <visible>false</visible>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetAvailablePhoneNumbers(ASC.VoipService.Twilio.PhoneNumberType,System.String)">
            <summary>
             Returns all the available phone numbers matching the parameters specified in the request.
            </summary>
            <param name="numberType">Number type</param>
            <param name="isoCountryCode">ISO country code</param>
            <short>Get available phone numbers</short>
            <category>Voip</category>
            <returns>Phone numbers</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetUnlinkedPhoneNumbers">
            <summary>
             Returns a list of all the unlinked phone numbers.
            </summary>
            <short>Get unlinked phone numbers</short>
            <category>Voip</category>
            <returns>List of unlinked phone numbers</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetExistingPhoneNumbers">
            <summary>
            Returns all the existing phone numbers.
            </summary>
            <short>Get all phone numbers</short>
            <category>Voip</category>
            <returns>Existing phone numbers</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.BuyNumber(System.String)">
            <summary>
             Buys a phone number specified in the request.
            </summary>
            <param name="number">Phone number</param>
            <short>Buy a phone number</short>
            <category>Voip</category>
            <returns>Phone number</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.LinkNumber(System.String)">
            <summary>
             Links a new phone number with the ID specified in the request to the voip provider.
            </summary>
            <param name="id">Phone number ID</param>
            <short>Link a phone number</short>
            <category>Voip</category>
            <returns>Phone number</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteNumber(System.String)">
            <summary>
             Deletes a phone number with the ID specified in the request.
            </summary>
            <param name="numberId">Phone number ID</param>
            <short>Delete a phone number</short>
            <category>Voip</category>
            <returns>Phone number</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetNumber(System.String)">
            <summary>
             Returns a phone number with the ID specified in the request.
            </summary>
            <param name="numberId">Phone number ID</param>
            <short>Get a phone number</short>
            <category>Voip</category>
            <returns>Phone number</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCurrentNumber">
            <summary>
             Returns the current phone number.
            </summary>
            <short>Get the current phone number</short>
            <category>Voip</category>
            <returns>Current phone number</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetToken">
            <summary>
             Returns a token for the current phone number.
            </summary>
            <short>Get a token</short>
            <category>Voip</category>
            <returns>Token</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateSettings(System.String,System.String,System.String,System.String,System.String,ASC.VoipService.WorkingHours,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
             Updates the settings of the phone number with the ID specified in the request.
            </summary>
            <param name="numberId">Phone number ID</param>
            <param name="greeting">New phone number greeting audio</param>
            <param name="holdUp">New phone number audio for holding up</param>
            <param name="wait">New phone number waiting URL</param>
            <param name="voiceMail">New phone number voice mail</param>
            <param name="workingHours">New phone number working hours</param>
            <param name="allowOutgoingCalls">Defines if a phone number allows making the outgoing calls or not</param>
            <param name="record">Defines if the phone number allows recording the calls or not</param>
            <param name="alias">New phone number alias</param>
            <short>Update phone number settings</short>
            <category>Voip</category>
            <returns>Updated phone number settings</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateSettings(ASC.VoipService.Queue,System.Boolean)">
            <summary>
             Updates the voip settings with the parameters specified in the request.
            </summary>
            <param name="queue">Connection waiting queue</param>
            <param name="pause">Defines if a phone number will be paused or not</param>
            <short>Update voip settings</short>
            <category>Voip</category>
            <returns>Updated voip settings</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetVoipSettings">
            <summary>
             Returns the voip settings.
            </summary>
            <short>Get voip settings</short>
            <category>Voip</category>
            <returns>Voip settings</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetUploadedFilesUri">
            <summary>
             Returns the links to the voip uploaded files.
            </summary>
            <short>Get the links to the uploaded files</short>
            <category>Voip</category>
            <returns>Links to the voip uploaded files</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteUploadedFile(ASC.VoipService.AudioType,System.String)">
            <summary>
             Deletes an uploaded file with the name specified in the request.
            </summary>
            <param name="audioType">Audio type</param>
            <param name="fileName">Uploaded file name</param>
            <short>Delete an uploaded file</short>
            <category>Voip</category>
            <returns>Uploaded file</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetOperators(System.String)">
            <summary>
             Returns the operators of the phone number with the ID specified in the request.
            </summary>
            <param name="numberId">Phone number ID</param>
            <short>Get operators</short>
            <category>Voip</category>
            <returns>Phone number operators</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AddOperators(System.String,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
             Adds the operators to the phone number with the ID specified in the request.
            </summary>
            <param name="numberId">Phone number ID</param>
            <param name="operators">Phone number operators</param>
            <short>Add operators</short>
            <category>Voip</category>
            <returns>Added phone number operators</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.DeleteOperator(System.String,System.Guid)">
            <summary>
             Deletes an operator from the phone number with the ID specified in the request.
            </summary>
            <param name="numberId">Phone number ID</param>
            <param name="oper">Phone number operator GUID</param>
            <short>Delete an operator</short>
            <category>Voip</category>
            <returns>Phone number operator</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.UpdateOperator(System.Guid,System.Nullable{ASC.VoipService.AgentStatus},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{ASC.VoipService.AnswerType},System.String)">
            <summary>
             Updates a phone number operator with the parameters specified in the request.
            </summary>
            <param name="operatorId">Phone number operator ID</param>
            <param name="status">New operator status</param>
            <param name="allowOutgoingCalls">Defines if an operator allows making the outgoing calls or not</param>
            <param name="record">Defines if an operator allows recording calls or not</param>
            <param name="answerType">New operator answer type</param>
            <param name="redirectToNumber">New redirect phone number</param>
            <short>Update an operator</short>
            <category>Voip</category>
            <returns>Updated operator</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.MakeCall(System.String,System.String)">
            <summary>
             Makes a call to the phone number specified in the request.
            </summary>
            <param name="to">Phone number to call</param>
            <param name="contactId">Contact ID</param>
            <short>Make a call</short>
            <category>Voip</category>
            <returns>Phone call information</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.AnswerCall(System.String)">
            <summary>
            Answers a phone call with the ID specified in the request.
            </summary>
            <param name="callId">Phone call ID</param>
            <short>Answer a call</short>
            <category>Voip</category>
            <returns>Phone call information</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.RejectCall(System.String)">
            <summary>
             Rejects a phone call with the ID specified in the request.
            </summary>
            <param name="callId">Phone call ID</param>
            <short>Reject a call</short>
            <category>Voip</category>
            <returns>Phone call information</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.ReditectCall(System.String,System.String)">
            <summary>
             Redirects a phone call with the ID specified in the request.
            </summary>
            <param name="callId">Phone call ID</param>
            <param name="to">Redirect phone number</param>
            <short>Redirect a call</short>
            <category>Voip</category>
            <returns>Phone call information</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SaveCall(System.String,System.String,System.String,System.Guid,System.Nullable{ASC.VoipService.VoipCallStatus},System.String,System.Nullable{System.Decimal})">
            <summary>
            Saves a call with the parameters specified in the request. 
            </summary>
            <param name="callId">Phone call ID</param>
            <param name="from">Phone number that is calling</param>
            <param name="to">Phone number to call</param>
            <param name="answeredBy">Phone number ID that answered a call</param>
            <param name="status">Phone call status</param>
            <param name="contactId">Contact ID</param>
            <param name="price">Phone call price</param>
            <short>Save a call</short>
            <category>Voip</category>
            <returns>Phone call information</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.SavePrice(System.String)">
            <summary>
             Saves a price for the call with the ID specified in the request.
            </summary>
            <param name="callId">Phone call ID</param>
            <short>Save a call price</short>
            <category>Voip</category>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCalls(System.String,ASC.Specific.ApiDateTime,ASC.Specific.ApiDateTime,System.Nullable{System.Guid},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of the calls matching the parameters specified in the request. 
            </summary>
            <param name="callType">Phone call type</param>
            <param name="from">Phone number that is calling</param>
            <param name="to">Phone number to call</param>
            <param name="agent">Call agent</param>
            <param name="client">Call client</param>
            <param name="contactID">Contact ID</param>
            <short>Get calls</short>
            <category>Voip</category>
            <returns>List of calls</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetMissedCalls">
            <summary>
             Returns a list of all the missed calls.
            </summary>
            <short>Get missed calls</short>
            <category>Voip</category>
            <returns>List of missed calls</returns>
        </member>
        <member name="M:ASC.Api.CRM.CRMApi.GetCall(System.String)">
            <summary>
            Returns the detailed information about a phone call with the ID specified in the request. 
            </summary>
            <param name="callId">Phone call ID</param>
            <short>Get a call</short>
            <category>Voip</category>
            <returns>Phone call information</returns>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.Address">
            <summary>
              Address
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.ContactInfoWrapper">
            <summary>
              Contact information
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.PersonWrapper">
            <summary>
              Person
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.CompanyWrapper">
            <summary>
             Company
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.ContactBaseWrapper">
            <summary>
             Contact base information
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.InvoiceBaseWrapper">
            <summary>
             Invoice
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.InvoiceWrapper">
            <summary>
             Invoice
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.InvoiceItemWrapper">
            <summary>
             Invoice Item
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.InvoiceTaxWrapper">
            <summary>
             Invoice Tax
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.InvoiceLineWrapper">
            <summary>
             Invoice Line
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.InvoiceStatusWrapper">
            <summary>
             Invoice Status
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.CustomFieldBaseWrapper">
            <summary>
             User custom fields
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.OpportunityWrapper">
            <summary>
             Opportunity
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.Wrappers.TaskWrapper">
            <summary>
             Task
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.CurrencyRateWrapper">
            <summary>
             Currency rate
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.CurrencyInfoWrapper">
            <summary>
             Currency information
            </summary>
        </member>
        <member name="T:ASC.Api.CRM.CurrencyRateInfoWrapper">
            <summary>
             Currency rate information
            </summary>
        </member>
    </members>
</doc>
